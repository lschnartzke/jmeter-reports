/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 442487.0, "series": [{"data": [[0.0, 6.0], [0.1, 7716.0], [0.2, 12978.0], [0.3, 25153.0], [0.4, 41886.0], [0.5, 51180.0], [0.6, 74631.0], [0.7, 123314.0], [0.8, 129141.0], [0.9, 129177.0], [1.0, 129188.0], [1.1, 129195.0], [1.2, 129201.0], [1.3, 129206.0], [1.4, 129211.0], [1.5, 129214.0], [1.6, 129217.0], [1.7, 129219.0], [1.8, 129223.0], [1.9, 129227.0], [2.0, 129229.0], [2.1, 129233.0], [2.2, 129237.0], [2.3, 129240.0], [2.4, 129243.0], [2.5, 129247.0], [2.6, 129251.0], [2.7, 129253.0], [2.8, 129257.0], [2.9, 129260.0], [3.0, 129263.0], [3.1, 129267.0], [3.2, 129270.0], [3.3, 129272.0], [3.4, 129275.0], [3.5, 129279.0], [3.6, 129282.0], [3.7, 129284.0], [3.8, 129286.0], [3.9, 129288.0], [4.0, 129291.0], [4.1, 129295.0], [4.2, 129297.0], [4.3, 129298.0], [4.4, 129300.0], [4.5, 129303.0], [4.6, 129305.0], [4.7, 129308.0], [4.8, 129310.0], [4.9, 129312.0], [5.0, 129314.0], [5.1, 129316.0], [5.2, 129319.0], [5.3, 129321.0], [5.4, 129322.0], [5.5, 129324.0], [5.6, 129326.0], [5.7, 129329.0], [5.8, 129333.0], [5.9, 129334.0], [6.0, 129335.0], [6.1, 129337.0], [6.2, 129339.0], [6.3, 129341.0], [6.4, 129343.0], [6.5, 129345.0], [6.6, 129347.0], [6.7, 129349.0], [6.8, 129351.0], [6.9, 129354.0], [7.0, 129356.0], [7.1, 129357.0], [7.2, 129359.0], [7.3, 129361.0], [7.4, 129362.0], [7.5, 129364.0], [7.6, 129368.0], [7.7, 129370.0], [7.8, 129373.0], [7.9, 129375.0], [8.0, 129377.0], [8.1, 129379.0], [8.2, 129381.0], [8.3, 129383.0], [8.4, 129385.0], [8.5, 129388.0], [8.6, 129390.0], [8.7, 129392.0], [8.8, 129394.0], [8.9, 129396.0], [9.0, 129398.0], [9.1, 129401.0], [9.2, 129402.0], [9.3, 129405.0], [9.4, 129407.0], [9.5, 129410.0], [9.6, 129411.0], [9.7, 129413.0], [9.8, 129415.0], [9.9, 129417.0], [10.0, 129420.0], [10.1, 129421.0], [10.2, 129423.0], [10.3, 129425.0], [10.4, 129426.0], [10.5, 129428.0], [10.6, 129430.0], [10.7, 129432.0], [10.8, 129433.0], [10.9, 129435.0], [11.0, 129436.0], [11.1, 129437.0], [11.2, 129439.0], [11.3, 129441.0], [11.4, 129442.0], [11.5, 129443.0], [11.6, 129445.0], [11.7, 129446.0], [11.8, 129447.0], [11.9, 129449.0], [12.0, 129450.0], [12.1, 129451.0], [12.2, 129453.0], [12.3, 129455.0], [12.4, 129456.0], [12.5, 129458.0], [12.6, 129459.0], [12.7, 129460.0], [12.8, 129462.0], [12.9, 129463.0], [13.0, 129465.0], [13.1, 129466.0], [13.2, 129468.0], [13.3, 129470.0], [13.4, 129471.0], [13.5, 129473.0], [13.6, 129474.0], [13.7, 129476.0], [13.8, 129478.0], [13.9, 129480.0], [14.0, 129481.0], [14.1, 129485.0], [14.2, 129486.0], [14.3, 129488.0], [14.4, 129489.0], [14.5, 129491.0], [14.6, 129493.0], [14.7, 129494.0], [14.8, 129496.0], [14.9, 129497.0], [15.0, 129499.0], [15.1, 129501.0], [15.2, 129503.0], [15.3, 129505.0], [15.4, 129507.0], [15.5, 129509.0], [15.6, 129510.0], [15.7, 129512.0], [15.8, 129514.0], [15.9, 129515.0], [16.0, 129517.0], [16.1, 129519.0], [16.2, 129521.0], [16.3, 129523.0], [16.4, 129524.0], [16.5, 129526.0], [16.6, 129528.0], [16.7, 129529.0], [16.8, 129531.0], [16.9, 129532.0], [17.0, 129534.0], [17.1, 129536.0], [17.2, 129537.0], [17.3, 129539.0], [17.4, 129541.0], [17.5, 129542.0], [17.6, 129544.0], [17.7, 129546.0], [17.8, 129548.0], [17.9, 129550.0], [18.0, 129551.0], [18.1, 129553.0], [18.2, 129554.0], [18.3, 129555.0], [18.4, 129557.0], [18.5, 129559.0], [18.6, 129560.0], [18.7, 129562.0], [18.8, 129564.0], [18.9, 129566.0], [19.0, 129567.0], [19.1, 129569.0], [19.2, 129570.0], [19.3, 129572.0], [19.4, 129573.0], [19.5, 129575.0], [19.6, 129577.0], [19.7, 129578.0], [19.8, 129580.0], [19.9, 129582.0], [20.0, 129583.0], [20.1, 129585.0], [20.2, 129586.0], [20.3, 129589.0], [20.4, 129590.0], [20.5, 129591.0], [20.6, 129593.0], [20.7, 129595.0], [20.8, 129596.0], [20.9, 129598.0], [21.0, 129602.0], [21.1, 129603.0], [21.2, 129604.0], [21.3, 129605.0], [21.4, 129607.0], [21.5, 129609.0], [21.6, 129610.0], [21.7, 129612.0], [21.8, 129614.0], [21.9, 129617.0], [22.0, 129618.0], [22.1, 129619.0], [22.2, 129621.0], [22.3, 129623.0], [22.4, 129624.0], [22.5, 129626.0], [22.6, 129627.0], [22.7, 129629.0], [22.8, 129631.0], [22.9, 129633.0], [23.0, 129634.0], [23.1, 129635.0], [23.2, 129637.0], [23.3, 129639.0], [23.4, 129641.0], [23.5, 129642.0], [23.6, 129644.0], [23.7, 129646.0], [23.8, 129647.0], [23.9, 129649.0], [24.0, 129650.0], [24.1, 129653.0], [24.2, 129655.0], [24.3, 129656.0], [24.4, 129658.0], [24.5, 129659.0], [24.6, 129661.0], [24.7, 129663.0], [24.8, 129665.0], [24.9, 129668.0], [25.0, 129670.0], [25.1, 129672.0], [25.2, 129673.0], [25.3, 129675.0], [25.4, 129677.0], [25.5, 129678.0], [25.6, 129680.0], [25.7, 129681.0], [25.8, 129683.0], [25.9, 129685.0], [26.0, 129686.0], [26.1, 129688.0], [26.2, 129689.0], [26.3, 129690.0], [26.4, 129692.0], [26.5, 129693.0], [26.6, 129694.0], [26.7, 129696.0], [26.8, 129697.0], [26.9, 129699.0], [27.0, 129700.0], [27.1, 129702.0], [27.2, 129703.0], [27.3, 129704.0], [27.4, 129706.0], [27.5, 129707.0], [27.6, 129708.0], [27.7, 129710.0], [27.8, 129712.0], [27.9, 129713.0], [28.0, 129714.0], [28.1, 129715.0], [28.2, 129717.0], [28.3, 129718.0], [28.4, 129720.0], [28.5, 129722.0], [28.6, 129724.0], [28.7, 129726.0], [28.8, 129727.0], [28.9, 129729.0], [29.0, 129731.0], [29.1, 129733.0], [29.2, 129734.0], [29.3, 129736.0], [29.4, 129737.0], [29.5, 129739.0], [29.6, 129740.0], [29.7, 129742.0], [29.8, 129744.0], [29.9, 129747.0], [30.0, 129749.0], [30.1, 129751.0], [30.2, 129752.0], [30.3, 129754.0], [30.4, 129756.0], [30.5, 129758.0], [30.6, 129760.0], [30.7, 129761.0], [30.8, 129763.0], [30.9, 129764.0], [31.0, 129766.0], [31.1, 129767.0], [31.2, 129769.0], [31.3, 129771.0], [31.4, 129773.0], [31.5, 129774.0], [31.6, 129776.0], [31.7, 129778.0], [31.8, 129779.0], [31.9, 129781.0], [32.0, 129783.0], [32.1, 129786.0], [32.2, 129789.0], [32.3, 129790.0], [32.4, 129791.0], [32.5, 129793.0], [32.6, 129795.0], [32.7, 129797.0], [32.8, 129800.0], [32.9, 129801.0], [33.0, 129803.0], [33.1, 129805.0], [33.2, 129806.0], [33.3, 129807.0], [33.4, 129810.0], [33.5, 129811.0], [33.6, 129813.0], [33.7, 129815.0], [33.8, 129816.0], [33.9, 129819.0], [34.0, 129821.0], [34.1, 129822.0], [34.2, 129825.0], [34.3, 129827.0], [34.4, 129828.0], [34.5, 129830.0], [34.6, 129832.0], [34.7, 129833.0], [34.8, 129836.0], [34.9, 129838.0], [35.0, 129839.0], [35.1, 129841.0], [35.2, 129843.0], [35.3, 129844.0], [35.4, 129846.0], [35.5, 129848.0], [35.6, 129850.0], [35.7, 129852.0], [35.8, 129854.0], [35.9, 129856.0], [36.0, 129858.0], [36.1, 129861.0], [36.2, 129862.0], [36.3, 129864.0], [36.4, 129865.0], [36.5, 129866.0], [36.6, 129868.0], [36.7, 129869.0], [36.8, 129871.0], [36.9, 129873.0], [37.0, 129874.0], [37.1, 129875.0], [37.2, 129877.0], [37.3, 129879.0], [37.4, 129881.0], [37.5, 129882.0], [37.6, 129883.0], [37.7, 129885.0], [37.8, 129886.0], [37.9, 129888.0], [38.0, 129890.0], [38.1, 129892.0], [38.2, 129894.0], [38.3, 129895.0], [38.4, 129897.0], [38.5, 129898.0], [38.6, 129900.0], [38.7, 129903.0], [38.8, 129905.0], [38.9, 129906.0], [39.0, 129908.0], [39.1, 129910.0], [39.2, 129911.0], [39.3, 129912.0], [39.4, 129914.0], [39.5, 129915.0], [39.6, 129916.0], [39.7, 129919.0], [39.8, 129920.0], [39.9, 129922.0], [40.0, 129923.0], [40.1, 129925.0], [40.2, 129927.0], [40.3, 129929.0], [40.4, 129930.0], [40.5, 129931.0], [40.6, 129932.0], [40.7, 129934.0], [40.8, 129936.0], [40.9, 129938.0], [41.0, 129939.0], [41.1, 129941.0], [41.2, 129942.0], [41.3, 129943.0], [41.4, 129944.0], [41.5, 129946.0], [41.6, 129948.0], [41.7, 129949.0], [41.8, 129951.0], [41.9, 129952.0], [42.0, 129953.0], [42.1, 129954.0], [42.2, 129956.0], [42.3, 129959.0], [42.4, 129960.0], [42.5, 129962.0], [42.6, 129963.0], [42.7, 129965.0], [42.8, 129966.0], [42.9, 129968.0], [43.0, 129970.0], [43.1, 129971.0], [43.2, 129973.0], [43.3, 129974.0], [43.4, 129977.0], [43.5, 129978.0], [43.6, 129980.0], [43.7, 129982.0], [43.8, 129984.0], [43.9, 129986.0], [44.0, 129988.0], [44.1, 129991.0], [44.2, 129993.0], [44.3, 129994.0], [44.4, 129996.0], [44.5, 129997.0], [44.6, 129999.0], [44.7, 130002.0], [44.8, 130003.0], [44.9, 130006.0], [45.0, 130007.0], [45.1, 130009.0], [45.2, 130011.0], [45.3, 130013.0], [45.4, 130015.0], [45.5, 130017.0], [45.6, 130019.0], [45.7, 130021.0], [45.8, 130023.0], [45.9, 130025.0], [46.0, 130028.0], [46.1, 130030.0], [46.2, 130033.0], [46.3, 130035.0], [46.4, 130036.0], [46.5, 130038.0], [46.6, 130040.0], [46.7, 130042.0], [46.8, 130046.0], [46.9, 130048.0], [47.0, 130050.0], [47.1, 130052.0], [47.2, 130055.0], [47.3, 130057.0], [47.4, 130059.0], [47.5, 130062.0], [47.6, 130064.0], [47.7, 130066.0], [47.8, 130069.0], [47.9, 130070.0], [48.0, 130072.0], [48.1, 130075.0], [48.2, 130077.0], [48.3, 130079.0], [48.4, 130082.0], [48.5, 130084.0], [48.6, 130086.0], [48.7, 130088.0], [48.8, 130091.0], [48.9, 130092.0], [49.0, 130095.0], [49.1, 130098.0], [49.2, 130100.0], [49.3, 130101.0], [49.4, 130104.0], [49.5, 130107.0], [49.6, 130110.0], [49.7, 130111.0], [49.8, 130112.0], [49.9, 130115.0], [50.0, 130117.0], [50.1, 130118.0], [50.2, 130121.0], [50.3, 130122.0], [50.4, 130124.0], [50.5, 130126.0], [50.6, 130129.0], [50.7, 130130.0], [50.8, 130132.0], [50.9, 130133.0], [51.0, 130135.0], [51.1, 130137.0], [51.2, 130138.0], [51.3, 130140.0], [51.4, 130142.0], [51.5, 130144.0], [51.6, 130147.0], [51.7, 130148.0], [51.8, 130150.0], [51.9, 130152.0], [52.0, 130154.0], [52.1, 130155.0], [52.2, 130157.0], [52.3, 130158.0], [52.4, 130160.0], [52.5, 130162.0], [52.6, 130164.0], [52.7, 130165.0], [52.8, 130168.0], [52.9, 130170.0], [53.0, 130172.0], [53.1, 130174.0], [53.2, 130176.0], [53.3, 130177.0], [53.4, 130179.0], [53.5, 130181.0], [53.6, 130182.0], [53.7, 130185.0], [53.8, 130187.0], [53.9, 130189.0], [54.0, 130191.0], [54.1, 130193.0], [54.2, 130194.0], [54.3, 130195.0], [54.4, 130197.0], [54.5, 130199.0], [54.6, 130201.0], [54.7, 130204.0], [54.8, 130206.0], [54.9, 130207.0], [55.0, 130209.0], [55.1, 130211.0], [55.2, 130213.0], [55.3, 130215.0], [55.4, 130217.0], [55.5, 130218.0], [55.6, 130220.0], [55.7, 130222.0], [55.8, 130223.0], [55.9, 130226.0], [56.0, 130227.0], [56.1, 130228.0], [56.2, 130231.0], [56.3, 130232.0], [56.4, 130234.0], [56.5, 130236.0], [56.6, 130238.0], [56.7, 130239.0], [56.8, 130241.0], [56.9, 130242.0], [57.0, 130245.0], [57.1, 130247.0], [57.2, 130248.0], [57.3, 130250.0], [57.4, 130253.0], [57.5, 130254.0], [57.6, 130256.0], [57.7, 130258.0], [57.8, 130259.0], [57.9, 130262.0], [58.0, 130263.0], [58.1, 130265.0], [58.2, 130267.0], [58.3, 130268.0], [58.4, 130270.0], [58.5, 130272.0], [58.6, 130274.0], [58.7, 130276.0], [58.8, 130278.0], [58.9, 130280.0], [59.0, 130282.0], [59.1, 130283.0], [59.2, 130285.0], [59.3, 130287.0], [59.4, 130289.0], [59.5, 130291.0], [59.6, 130293.0], [59.7, 130295.0], [59.8, 130297.0], [59.9, 130299.0], [60.0, 130302.0], [60.1, 130304.0], [60.2, 130306.0], [60.3, 130308.0], [60.4, 130309.0], [60.5, 130311.0], [60.6, 130313.0], [60.7, 130315.0], [60.8, 130316.0], [60.9, 130318.0], [61.0, 130321.0], [61.1, 130322.0], [61.2, 130324.0], [61.3, 130325.0], [61.4, 130327.0], [61.5, 130329.0], [61.6, 130332.0], [61.7, 130333.0], [61.8, 130335.0], [61.9, 130337.0], [62.0, 130338.0], [62.1, 130340.0], [62.2, 130341.0], [62.3, 130343.0], [62.4, 130345.0], [62.5, 130347.0], [62.6, 130349.0], [62.7, 130351.0], [62.8, 130353.0], [62.9, 130355.0], [63.0, 130356.0], [63.1, 130358.0], [63.2, 130360.0], [63.3, 130361.0], [63.4, 130363.0], [63.5, 130364.0], [63.6, 130365.0], [63.7, 130367.0], [63.8, 130369.0], [63.9, 130371.0], [64.0, 130372.0], [64.1, 130373.0], [64.2, 130375.0], [64.3, 130377.0], [64.4, 130378.0], [64.5, 130379.0], [64.6, 130382.0], [64.7, 130383.0], [64.8, 130385.0], [64.9, 130386.0], [65.0, 130388.0], [65.1, 130390.0], [65.2, 130391.0], [65.3, 130393.0], [65.4, 130395.0], [65.5, 130397.0], [65.6, 130398.0], [65.7, 130400.0], [65.8, 130402.0], [65.9, 130403.0], [66.0, 130405.0], [66.1, 130407.0], [66.2, 130407.0], [66.3, 130409.0], [66.4, 130410.0], [66.5, 130412.0], [66.6, 130413.0], [66.7, 130414.0], [66.8, 130417.0], [66.9, 130418.0], [67.0, 130419.0], [67.1, 130421.0], [67.2, 130423.0], [67.3, 130425.0], [67.4, 130426.0], [67.5, 130428.0], [67.6, 130429.0], [67.7, 130431.0], [67.8, 130432.0], [67.9, 130434.0], [68.0, 130435.0], [68.1, 130437.0], [68.2, 130439.0], [68.3, 130440.0], [68.4, 130441.0], [68.5, 130442.0], [68.6, 130443.0], [68.7, 130444.0], [68.8, 130445.0], [68.9, 130446.0], [69.0, 130448.0], [69.1, 130449.0], [69.2, 130449.0], [69.3, 130450.0], [69.4, 130451.0], [69.5, 130452.0], [69.6, 130453.0], [69.7, 130454.0], [69.8, 130455.0], [69.9, 130456.0], [70.0, 130456.0], [70.1, 130457.0], [70.2, 130459.0], [70.3, 130460.0], [70.4, 130461.0], [70.5, 130462.0], [70.6, 130463.0], [70.7, 130464.0], [70.8, 130465.0], [70.9, 130466.0], [71.0, 130467.0], [71.1, 130468.0], [71.2, 130469.0], [71.3, 130470.0], [71.4, 130472.0], [71.5, 130473.0], [71.6, 130475.0], [71.7, 130475.0], [71.8, 130476.0], [71.9, 130478.0], [72.0, 130479.0], [72.1, 130480.0], [72.2, 130481.0], [72.3, 130481.0], [72.4, 130482.0], [72.5, 130484.0], [72.6, 130485.0], [72.7, 130486.0], [72.8, 130487.0], [72.9, 130488.0], [73.0, 130489.0], [73.1, 130490.0], [73.2, 130492.0], [73.3, 130493.0], [73.4, 130494.0], [73.5, 130496.0], [73.6, 130497.0], [73.7, 130498.0], [73.8, 130500.0], [73.9, 130500.0], [74.0, 130503.0], [74.1, 130504.0], [74.2, 130506.0], [74.3, 130507.0], [74.4, 130508.0], [74.5, 130509.0], [74.6, 130511.0], [74.7, 130512.0], [74.8, 130514.0], [74.9, 130515.0], [75.0, 130516.0], [75.1, 130518.0], [75.2, 130520.0], [75.3, 130521.0], [75.4, 130523.0], [75.5, 130524.0], [75.6, 130526.0], [75.7, 130528.0], [75.8, 130530.0], [75.9, 130531.0], [76.0, 130534.0], [76.1, 130535.0], [76.2, 130536.0], [76.3, 130538.0], [76.4, 130540.0], [76.5, 130542.0], [76.6, 130544.0], [76.7, 130546.0], [76.8, 130547.0], [76.9, 130548.0], [77.0, 130550.0], [77.1, 130551.0], [77.2, 130553.0], [77.3, 130555.0], [77.4, 130557.0], [77.5, 130559.0], [77.6, 130560.0], [77.7, 130561.0], [77.8, 130563.0], [77.9, 130564.0], [78.0, 130566.0], [78.1, 130568.0], [78.2, 130569.0], [78.3, 130571.0], [78.4, 130572.0], [78.5, 130574.0], [78.6, 130575.0], [78.7, 130578.0], [78.8, 130579.0], [78.9, 130581.0], [79.0, 130584.0], [79.1, 130585.0], [79.2, 130587.0], [79.3, 130590.0], [79.4, 130592.0], [79.5, 130594.0], [79.6, 130596.0], [79.7, 130598.0], [79.8, 130599.0], [79.9, 130602.0], [80.0, 130604.0], [80.1, 130605.0], [80.2, 130608.0], [80.3, 130610.0], [80.4, 130611.0], [80.5, 130613.0], [80.6, 130615.0], [80.7, 130617.0], [80.8, 130619.0], [80.9, 130621.0], [81.0, 130623.0], [81.1, 130626.0], [81.2, 130627.0], [81.3, 130629.0], [81.4, 130632.0], [81.5, 130633.0], [81.6, 130636.0], [81.7, 130637.0], [81.8, 130639.0], [81.9, 130641.0], [82.0, 130643.0], [82.1, 130645.0], [82.2, 130647.0], [82.3, 130650.0], [82.4, 130651.0], [82.5, 130653.0], [82.6, 130656.0], [82.7, 130658.0], [82.8, 130661.0], [82.9, 130663.0], [83.0, 130665.0], [83.1, 130667.0], [83.2, 130669.0], [83.3, 130671.0], [83.4, 130673.0], [83.5, 130675.0], [83.6, 130677.0], [83.7, 130680.0], [83.8, 130682.0], [83.9, 130684.0], [84.0, 130686.0], [84.1, 130688.0], [84.2, 130690.0], [84.3, 130694.0], [84.4, 130695.0], [84.5, 130697.0], [84.6, 130699.0], [84.7, 130701.0], [84.8, 130704.0], [84.9, 130706.0], [85.0, 130707.0], [85.1, 130709.0], [85.2, 130710.0], [85.3, 130713.0], [85.4, 130715.0], [85.5, 130717.0], [85.6, 130719.0], [85.7, 130722.0], [85.8, 130723.0], [85.9, 130726.0], [86.0, 130727.0], [86.1, 130730.0], [86.2, 130731.0], [86.3, 130733.0], [86.4, 130735.0], [86.5, 130737.0], [86.6, 130740.0], [86.7, 130742.0], [86.8, 130746.0], [86.9, 130748.0], [87.0, 130750.0], [87.1, 130754.0], [87.2, 130756.0], [87.3, 130759.0], [87.4, 130760.0], [87.5, 130762.0], [87.6, 130765.0], [87.7, 130767.0], [87.8, 130770.0], [87.9, 130773.0], [88.0, 130775.0], [88.1, 130778.0], [88.2, 130782.0], [88.3, 130784.0], [88.4, 130787.0], [88.5, 130790.0], [88.6, 130794.0], [88.7, 130797.0], [88.8, 130799.0], [88.9, 130804.0], [89.0, 130808.0], [89.1, 130811.0], [89.2, 130816.0], [89.3, 130820.0], [89.4, 130823.0], [89.5, 130826.0], [89.6, 130830.0], [89.7, 130833.0], [89.8, 130835.0], [89.9, 130839.0], [90.0, 130843.0], [90.1, 130847.0], [90.2, 130850.0], [90.3, 130854.0], [90.4, 130857.0], [90.5, 130862.0], [90.6, 130866.0], [90.7, 130870.0], [90.8, 130875.0], [90.9, 130880.0], [91.0, 130884.0], [91.1, 130889.0], [91.2, 130894.0], [91.3, 130900.0], [91.4, 130904.0], [91.5, 130911.0], [91.6, 130914.0], [91.7, 130919.0], [91.8, 130923.0], [91.9, 130929.0], [92.0, 130932.0], [92.1, 130937.0], [92.2, 130941.0], [92.3, 130945.0], [92.4, 130949.0], [92.5, 130953.0], [92.6, 130957.0], [92.7, 130960.0], [92.8, 130965.0], [92.9, 130967.0], [93.0, 130971.0], [93.1, 130976.0], [93.2, 130980.0], [93.3, 130984.0], [93.4, 130986.0], [93.5, 130991.0], [93.6, 130996.0], [93.7, 131000.0], [93.8, 131004.0], [93.9, 131009.0], [94.0, 131014.0], [94.1, 131019.0], [94.2, 131024.0], [94.3, 131027.0], [94.4, 131031.0], [94.5, 131034.0], [94.6, 131038.0], [94.7, 131043.0], [94.8, 131046.0], [94.9, 131049.0], [95.0, 131053.0], [95.1, 131056.0], [95.2, 131060.0], [95.3, 131064.0], [95.4, 131068.0], [95.5, 131074.0], [95.6, 131079.0], [95.7, 131082.0], [95.8, 131088.0], [95.9, 131093.0], [96.0, 131097.0], [96.1, 131101.0], [96.2, 131106.0], [96.3, 131109.0], [96.4, 131114.0], [96.5, 131119.0], [96.6, 131124.0], [96.7, 131128.0], [96.8, 131131.0], [96.9, 131133.0], [97.0, 131139.0], [97.1, 131142.0], [97.2, 131147.0], [97.3, 131151.0], [97.4, 131157.0], [97.5, 131160.0], [97.6, 131167.0], [97.7, 131170.0], [97.8, 131175.0], [97.9, 131181.0], [98.0, 131186.0], [98.1, 131190.0], [98.2, 131194.0], [98.3, 131202.0], [98.4, 131205.0], [98.5, 131211.0], [98.6, 131215.0], [98.7, 131221.0], [98.8, 131228.0], [98.9, 131240.0], [99.0, 145893.0], [99.1, 178264.0], [99.2, 181912.0], [99.3, 194619.0], [99.4, 200254.0], [99.5, 251941.0], [99.6, 346149.0], [99.7, 346250.0], [99.8, 359470.0], [99.9, 442340.0], [100.0, 442487.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 0.0], [94.5, 0.0], [94.6, 0.0], [94.7, 0.0], [94.8, 0.0], [94.9, 0.0], [95.0, 0.0], [95.1, 0.0], [95.2, 0.0], [95.3, 0.0], [95.4, 0.0], [95.5, 0.0], [95.6, 0.0], [95.7, 0.0], [95.8, 0.0], [95.9, 0.0], [96.0, 0.0], [96.1, 0.0], [96.2, 0.0], [96.3, 0.0], [96.4, 0.0], [96.5, 0.0], [96.6, 0.0], [96.7, 0.0], [96.8, 0.0], [96.9, 0.0], [97.0, 0.0], [97.1, 0.0], [97.2, 0.0], [97.3, 0.0], [97.4, 0.0], [97.5, 0.0], [97.6, 0.0], [97.7, 0.0], [97.8, 0.0], [97.9, 0.0], [98.0, 0.0], [98.1, 0.0], [98.2, 0.0], [98.3, 0.0], [98.4, 0.0], [98.5, 0.0], [98.6, 0.0], [98.7, 0.0], [98.8, 0.0], [98.9, 0.0], [99.0, 0.0], [99.1, 0.0], [99.2, 0.0], [99.3, 0.0], [99.4, 0.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 36889.0], [100.0, 111652.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 3.0], [99.8, 5.0], [99.9, 12.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1491275.0, "series": [{"data": [[0.0, 9.0], [131200.0, 140.0], [320900.0, 1.0], [182400.0, 3.0], [188000.0, 6.0], [181600.0, 1.0], [252000.0, 1.0], [182500.0, 1.0], [181700.0, 1.0], [194500.0, 1.0], [242500.0, 5.0], [74700.0, 2.0], [73900.0, 2.0], [75900.0, 2.0], [119500.0, 3.0], [129100.0, 70.0], [129500.0, 1120.0], [130700.0, 790.0], [130300.0, 1093.0], [129900.0, 1145.0], [145800.0, 1.0], [181800.0, 5.0], [182600.0, 2.0], [194600.0, 17.0], [200200.0, 5.0], [242600.0, 1.0], [280400.0, 1.0], [100.0, 1.0], [145900.0, 4.0], [42900.0, 2.0], [44900.0, 2.0], [353500.0, 1.0], [45700.0, 2.0], [181900.0, 5.0], [48900.0, 2.0], [49100.0, 2.0], [194700.0, 1.0], [51100.0, 3.0], [257100.0, 1.0], [74600.0, 5.0], [75000.0, 1.0], [346200.0, 8.0], [442200.0, 5.0], [125800.0, 2.0], [131000.0, 442.0], [129400.0, 1126.0], [130600.0, 914.0], [130200.0, 1020.0], [129800.0, 1089.0], [353700.0, 14.0], [213200.0, 2.0], [251600.0, 3.0], [252400.0, 2.0], [442400.0, 2.0], [3600.0, 2.0], [250900.0, 4.0], [251700.0, 2.0], [4400.0, 3.0], [74500.0, 9.0], [321000.0, 2.0], [359400.0, 6.0], [7600.0, 3.0], [7700.0, 1.0], [125700.0, 10.0], [123300.0, 4.0], [123700.0, 5.0], [130900.0, 452.0], [129300.0, 889.0], [130500.0, 1139.0], [129700.0, 1102.0], [130100.0, 1007.0], [151800.0, 10.0], [346100.0, 14.0], [178200.0, 13.0], [12400.0, 6.0], [13000.0, 4.0], [12900.0, 18.0], [257400.0, 5.0], [18300.0, 2.0], [24000.0, 5.0], [25000.0, 1.0], [25100.0, 1.0], [24600.0, 1.0], [25600.0, 3.0], [27400.0, 1.0], [27600.0, 1.0], [27700.0, 5.0], [30600.0, 3.0], [30500.0, 1.0], [32600.0, 2.0], [131100.0, 422.0], [41800.0, 5.0], [42800.0, 1.0], [42600.0, 1.0], [43600.0, 2.0], [178300.0, 1.0], [45600.0, 1.0], [51200.0, 1.0], [442300.0, 28.0], [251900.0, 5.0], [74400.0, 3.0], [120000.0, 3.0], [123200.0, 2.0], [123600.0, 1.0], [129200.0, 604.0], [129600.0, 1139.0], [130800.0, 469.0], [130400.0, 1532.0], [130000.0, 867.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[0.0, 1491275.0], [66700.0, 2.0], [73100.0, 5.0], [76300.0, 1.0], [74700.0, 5.0], [79500.0, 1.0], [85900.0, 1.0], [89100.0, 2.0], [90700.0, 3.0], [92300.0, 34.0], [98700.0, 1.0], [101900.0, 2.0], [105100.0, 1.0], [103500.0, 14.0], [109900.0, 1.0], [108300.0, 1.0], [111500.0, 2.0], [100.0, 27.0], [32900.0, 1.0], [33700.0, 3.0], [38500.0, 2.0], [36900.0, 2.0], [37700.0, 2.0], [45700.0, 1.0], [48100.0, 2.0], [48900.0, 1.0], [49700.0, 1.0], [52100.0, 14.0], [53700.0, 1.0], [54500.0, 1.0], [55300.0, 1.0], [56100.0, 1.0], [56900.0, 4.0], [59300.0, 3.0], [58500.0, 7.0], [57700.0, 2.0], [60100.0, 2.0], [60900.0, 1.0], [62500.0, 4.0], [63300.0, 2.0], [64100.0, 2.0], [64900.0, 1.0], [65800.0, 1.0], [67400.0, 14.0], [72200.0, 8.0], [75400.0, 2.0], [73800.0, 4.0], [85000.0, 1.0], [86600.0, 1.0], [88200.0, 3.0], [89800.0, 2.0], [91400.0, 2.0], [96200.0, 1.0], [99400.0, 1.0], [101000.0, 2.0], [102600.0, 21.0], [104200.0, 7.0], [105800.0, 1.0], [110600.0, 2.0], [1900.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [3300.0, 5.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [66500.0, 1.0], [69700.0, 8.0], [72900.0, 4.0], [4700.0, 1.0], [4800.0, 2.0], [76100.0, 5.0], [74500.0, 5.0], [5000.0, 1.0], [5600.0, 3.0], [5400.0, 1.0], [5500.0, 1.0], [87300.0, 1.0], [88900.0, 2.0], [5700.0, 1.0], [92100.0, 21.0], [90500.0, 2.0], [93700.0, 1.0], [6100.0, 2.0], [95300.0, 2.0], [96900.0, 1.0], [6300.0, 1.0], [6200.0, 3.0], [101700.0, 1.0], [6600.0, 2.0], [6800.0, 2.0], [6900.0, 3.0], [6700.0, 1.0], [108100.0, 2.0], [106500.0, 1.0], [7100.0, 1.0], [111300.0, 3.0], [7300.0, 1.0], [7200.0, 5.0], [7500.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8600.0, 2.0], [8800.0, 1.0], [9600.0, 1.0], [9400.0, 1.0], [11000.0, 1.0], [12400.0, 2.0], [13800.0, 1.0], [14600.0, 1.0], [15400.0, 1.0], [16800.0, 2.0], [17600.0, 7.0], [20400.0, 2.0], [19600.0, 1.0], [21200.0, 1.0], [22000.0, 1.0], [24400.0, 4.0], [25600.0, 1.0], [26400.0, 4.0], [26800.0, 5.0], [27200.0, 1.0], [29200.0, 1.0], [31200.0, 1.0], [36800.0, 4.0], [37600.0, 3.0], [38400.0, 5.0], [42400.0, 1.0], [43200.0, 1.0], [44000.0, 1.0], [44800.0, 1.0], [46400.0, 1.0], [51200.0, 2.0], [52000.0, 12.0], [56800.0, 4.0], [57600.0, 5.0], [58400.0, 4.0], [59200.0, 4.0], [60000.0, 3.0], [60800.0, 2.0], [61600.0, 1.0], [64000.0, 6.0], [64800.0, 2.0], [67200.0, 18.0], [72000.0, 1.0], [73600.0, 4.0], [75200.0, 3.0], [76800.0, 1.0], [78400.0, 1.0], [80000.0, 1.0], [88000.0, 3.0], [89600.0, 1.0], [91200.0, 3.0], [92800.0, 1.0], [97600.0, 8.0], [94400.0, 1.0], [102400.0, 33.0], [105600.0, 1.0], [104000.0, 29.0], [110400.0, 1.0], [107200.0, 2.0], [67100.0, 22.0], [73500.0, 8.0], [75100.0, 2.0], [81500.0, 1.0], [89500.0, 1.0], [91100.0, 2.0], [97500.0, 7.0], [102300.0, 20.0], [103900.0, 15.0], [110300.0, 4.0], [108700.0, 2.0], [33900.0, 3.0], [34700.0, 1.0], [36300.0, 1.0], [35500.0, 1.0], [37100.0, 4.0], [37900.0, 4.0], [38700.0, 2.0], [46700.0, 1.0], [47500.0, 1.0], [48300.0, 1.0], [49100.0, 1.0], [49900.0, 2.0], [50700.0, 1.0], [51500.0, 4.0], [52300.0, 6.0], [53100.0, 1.0], [57100.0, 2.0], [58700.0, 7.0], [57900.0, 1.0], [60300.0, 4.0], [59500.0, 2.0], [61100.0, 3.0], [62700.0, 5.0], [61900.0, 3.0], [63500.0, 2.0], [64300.0, 3.0], [69400.0, 3.0], [72600.0, 4.0], [75800.0, 2.0], [74200.0, 2.0], [77400.0, 1.0], [82200.0, 1.0], [88600.0, 2.0], [91800.0, 10.0], [90200.0, 1.0], [95000.0, 3.0], [101400.0, 1.0], [106200.0, 2.0], [104600.0, 1.0], [107800.0, 2.0], [109400.0, 2.0], [111000.0, 6.0], [66900.0, 5.0], [71700.0, 1.0], [70100.0, 1.0], [73300.0, 3.0], [74900.0, 5.0], [78100.0, 1.0], [89300.0, 1.0], [90900.0, 2.0], [92500.0, 1.0], [97300.0, 4.0], [98900.0, 1.0], [100500.0, 2.0], [102100.0, 9.0], [103700.0, 25.0], [105300.0, 1.0], [110100.0, 2.0], [108500.0, 1.0], [16900.0, 6.0], [17300.0, 2.0], [18100.0, 2.0], [18900.0, 2.0], [19700.0, 1.0], [20500.0, 1.0], [21300.0, 1.0], [24500.0, 3.0], [24100.0, 1.0], [25300.0, 1.0], [24900.0, 1.0], [26100.0, 1.0], [26500.0, 15.0], [26900.0, 11.0], [28500.0, 1.0], [30500.0, 1.0], [30900.0, 1.0], [31300.0, 1.0], [32100.0, 1.0], [33800.0, 2.0], [37000.0, 3.0], [37800.0, 5.0], [38600.0, 2.0], [48200.0, 4.0], [51400.0, 1.0], [52200.0, 15.0], [57000.0, 3.0], [58600.0, 8.0], [57800.0, 3.0], [59400.0, 4.0], [61000.0, 2.0], [61800.0, 2.0], [62600.0, 4.0], [63400.0, 3.0], [64200.0, 4.0], [65000.0, 1.0], [69200.0, 2.0], [67600.0, 4.0], [72400.0, 6.0], [74000.0, 8.0], [75600.0, 2.0], [77200.0, 1.0], [83600.0, 1.0], [86800.0, 1.0], [88400.0, 3.0], [91600.0, 9.0], [94800.0, 1.0], [96400.0, 1.0], [104400.0, 1.0], [110800.0, 1.0], [65900.0, 1.0], [67500.0, 16.0], [70700.0, 1.0], [72300.0, 2.0], [73900.0, 14.0], [75500.0, 2.0], [88300.0, 5.0], [89900.0, 1.0], [91500.0, 14.0], [94700.0, 1.0], [101100.0, 1.0], [105900.0, 1.0], [102700.0, 4.0], [109100.0, 1.0], [107500.0, 1.0], [110700.0, 2.0], [34100.0, 1.0], [36500.0, 3.0], [37300.0, 2.0], [38100.0, 2.0], [38900.0, 2.0], [42900.0, 1.0], [43700.0, 1.0], [44500.0, 1.0], [45300.0, 1.0], [48500.0, 1.0], [49300.0, 2.0], [51700.0, 7.0], [52500.0, 2.0], [53300.0, 1.0], [57300.0, 4.0], [56500.0, 1.0], [58900.0, 5.0], [58100.0, 2.0], [59700.0, 5.0], [60500.0, 2.0], [62900.0, 3.0], [64500.0, 3.0], [65300.0, 1.0], [66600.0, 1.0], [69800.0, 4.0], [71400.0, 1.0], [73000.0, 15.0], [76200.0, 4.0], [74600.0, 3.0], [77800.0, 1.0], [81000.0, 1.0], [82600.0, 1.0], [87400.0, 1.0], [89000.0, 1.0], [92200.0, 20.0], [95400.0, 2.0], [98600.0, 1.0], [100200.0, 1.0], [101800.0, 1.0], [103400.0, 7.0], [105000.0, 1.0], [111400.0, 4.0], [65700.0, 1.0], [67300.0, 5.0], [72100.0, 2.0], [73700.0, 3.0], [75300.0, 1.0], [76900.0, 1.0], [88100.0, 1.0], [89700.0, 1.0], [91300.0, 5.0], [92900.0, 1.0], [94500.0, 1.0], [97700.0, 2.0], [99300.0, 1.0], [100900.0, 1.0], [102500.0, 58.0], [105700.0, 2.0], [104100.0, 18.0], [110500.0, 7.0], [107300.0, 1.0], [108900.0, 1.0], [9300.0, 1.0], [10100.0, 1.0], [10300.0, 1.0], [10900.0, 1.0], [11700.0, 2.0], [13100.0, 2.0], [13900.0, 1.0], [14500.0, 1.0], [15300.0, 1.0], [15900.0, 1.0], [16100.0, 1.0], [17400.0, 5.0], [18200.0, 10.0], [23400.0, 2.0], [24200.0, 2.0], [24600.0, 4.0], [26600.0, 5.0], [27000.0, 6.0], [28600.0, 1.0], [27800.0, 1.0], [29400.0, 1.0], [29800.0, 1.0], [30200.0, 1.0], [31000.0, 1.0], [31800.0, 1.0], [32600.0, 1.0], [34000.0, 4.0], [36400.0, 1.0], [38800.0, 2.0], [37200.0, 1.0], [46000.0, 1.0], [48400.0, 1.0], [50800.0, 1.0], [51600.0, 3.0], [52400.0, 2.0], [57200.0, 2.0], [58800.0, 9.0], [58000.0, 6.0], [59600.0, 3.0], [62800.0, 2.0], [63600.0, 3.0], [64400.0, 3.0], [65200.0, 1.0], [66400.0, 4.0], [68000.0, 1.0], [69600.0, 2.0], [72800.0, 2.0], [76000.0, 3.0], [74400.0, 5.0], [85600.0, 1.0], [88800.0, 2.0], [92000.0, 12.0], [90400.0, 1.0], [93600.0, 1.0], [95200.0, 3.0], [98400.0, 2.0], [100000.0, 1.0], [106400.0, 1.0], [109600.0, 3.0], [111200.0, 4.0], [72700.0, 9.0], [75900.0, 1.0], [74300.0, 2.0], [80700.0, 1.0], [83900.0, 1.0], [88700.0, 4.0], [91900.0, 12.0], [95100.0, 2.0], [99900.0, 1.0], [101500.0, 1.0], [104700.0, 2.0], [111100.0, 2.0], [33500.0, 3.0], [36700.0, 4.0], [37500.0, 4.0], [38300.0, 3.0], [40700.0, 1.0], [39100.0, 1.0], [39900.0, 1.0], [41500.0, 1.0], [47100.0, 1.0], [47900.0, 1.0], [48700.0, 1.0], [50300.0, 2.0], [51100.0, 2.0], [51900.0, 15.0], [55100.0, 1.0], [55900.0, 1.0], [56700.0, 2.0], [59100.0, 6.0], [58300.0, 3.0], [57500.0, 3.0], [59900.0, 1.0], [60700.0, 1.0], [61500.0, 2.0], [63100.0, 1.0], [63900.0, 1.0], [64700.0, 3.0], [65500.0, 1.0], [67000.0, 5.0], [68600.0, 1.0], [73400.0, 2.0], [75000.0, 2.0], [76600.0, 1.0], [83000.0, 1.0], [84600.0, 1.0], [89400.0, 2.0], [91000.0, 3.0], [97400.0, 10.0], [99000.0, 1.0], [102200.0, 17.0], [105400.0, 1.0], [103800.0, 17.0], [110200.0, 3.0], [107000.0, 1.0], [108600.0, 1.0], [67700.0, 1.0], [69300.0, 11.0], [70900.0, 1.0], [72500.0, 6.0], [75700.0, 2.0], [74100.0, 5.0], [78900.0, 1.0], [88500.0, 3.0], [90100.0, 3.0], [91700.0, 4.0], [98100.0, 1.0], [99700.0, 1.0], [101300.0, 2.0], [104500.0, 2.0], [102900.0, 1.0], [110900.0, 6.0], [16700.0, 1.0], [17500.0, 8.0], [18300.0, 2.0], [17900.0, 1.0], [21100.0, 1.0], [21900.0, 1.0], [22700.0, 2.0], [24300.0, 1.0], [24700.0, 1.0], [26700.0, 1.0], [27900.0, 1.0], [34200.0, 1.0], [35000.0, 1.0], [35800.0, 1.0], [36600.0, 2.0], [37400.0, 2.0], [38200.0, 1.0], [39800.0, 1.0], [40600.0, 1.0], [39000.0, 1.0], [41400.0, 1.0], [42200.0, 1.0], [47800.0, 1.0], [51800.0, 6.0], [52600.0, 1.0], [53400.0, 1.0], [54200.0, 1.0], [56600.0, 3.0], [59000.0, 4.0], [58200.0, 3.0], [57400.0, 1.0], [59800.0, 2.0], [61400.0, 1.0], [62200.0, 2.0], [63000.0, 1.0], [64600.0, 1.0], [63800.0, 2.0], [66800.0, 1.0], [68400.0, 1.0], [70000.0, 1.0], [71600.0, 1.0], [73200.0, 5.0], [74800.0, 3.0], [78000.0, 1.0], [90800.0, 4.0], [92400.0, 17.0], [95600.0, 2.0], [102000.0, 2.0], [105200.0, 2.0], [103600.0, 13.0], [110000.0, 1.0], [106800.0, 2.0], [111600.0, 3.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[0.0, 14909.0], [100.0, 5.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 442400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2095.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1509861.0, "series": [{"data": [[0.0, 14924.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2095.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1509861.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.68665287E12, "maxY": 1000.0, "series": [{"data": [[1.6866534E12, 1000.0], [1.68665357E12, 5.0], [1.68665289E12, 1000.0], [1.68665323E12, 1000.0], [1.68665306E12, 1000.0], [1.68665332E12, 1000.0], [1.68665349E12, 958.6756756756757], [1.68665315E12, 1000.0], [1.68665298E12, 1000.0], [1.68665358E12, 2.5], [1.68665324E12, 1000.0], [1.68665341E12, 1000.0], [1.68665307E12, 1000.0], [1.6866529E12, 1000.0], [1.68665333E12, 1000.0], [1.6866535E12, 931.5], [1.68665316E12, 1000.0], [1.68665299E12, 1000.0], [1.68665342E12, 1000.0], [1.68665291E12, 1000.0], [1.68665317E12, 1000.0], [1.686653E12, 1000.0], [1.68665351E12, 922.5], [1.68665309E12, 1000.0], [1.68665292E12, 1000.0], [1.68665343E12, 1000.0], [1.68665326E12, 1000.0], [1.68665352E12, 921.0], [1.68665301E12, 1000.0], [1.68665335E12, 1000.0], [1.68665318E12, 1000.0], [1.68665344E12, 1000.0], [1.68665293E12, 1000.0], [1.68665327E12, 1000.0], [1.6866531E12, 1000.0], [1.68665336E12, 1000.0], [1.68665353E12, 882.804054054054], [1.68665319E12, 1000.0], [1.68665302E12, 1000.0], [1.68665328E12, 1000.0], [1.68665345E12, 1000.0], [1.68665311E12, 1000.0], [1.68665294E12, 1000.0], [1.68665337E12, 1000.0], [1.68665354E12, 597.3576309794994], [1.6866532E12, 1000.0], [1.68665303E12, 1000.0], [1.68665329E12, 1000.0], [1.68665346E12, 1000.0], [1.68665312E12, 1000.0], [1.68665295E12, 1000.0], [1.68665321E12, 1000.0], [1.68665338E12, 1000.0], [1.68665304E12, 1000.0], [1.68665355E12, 226.59567901234576], [1.68665313E12, 1000.0], [1.68665296E12, 1000.0], [1.68665347E12, 1000.0], [1.6866533E12, 1000.0], [1.68665356E12, 7.5], [1.68665339E12, 1000.0], [1.68665348E12, 988.9599999999999], [1.68665331E12, 1000.0], [1.68665314E12, 1000.0]], "isOverall": false, "label": "192.168.122.59-Thread Group", "isController": false}, {"data": [[1.6866534E12, 1000.0], [1.68665357E12, 27.0], [1.68665289E12, 1000.0], [1.68665323E12, 1000.0], [1.68665306E12, 1000.0], [1.68665332E12, 1000.0], [1.68665349E12, 1000.0], [1.68665315E12, 1000.0], [1.68665298E12, 1000.0], [1.68665358E12, 9.555555555555555], [1.68665324E12, 1000.0], [1.68665341E12, 1000.0], [1.68665307E12, 1000.0], [1.6866529E12, 1000.0], [1.68665333E12, 1000.0], [1.6866535E12, 996.0], [1.68665316E12, 1000.0], [1.68665299E12, 1000.0], [1.68665325E12, 1000.0], [1.68665342E12, 1000.0], [1.68665308E12, 1000.0], [1.68665291E12, 1000.0], [1.68665317E12, 1000.0], [1.686653E12, 1000.0], [1.68665351E12, 984.0], [1.68665334E12, 1000.0], [1.68665309E12, 1000.0], [1.68665292E12, 1000.0], [1.68665343E12, 1000.0], [1.68665326E12, 1000.0], [1.68665352E12, 967.5], [1.68665301E12, 1000.0], [1.68665335E12, 1000.0], [1.68665318E12, 1000.0], [1.68665344E12, 1000.0], [1.68665293E12, 1000.0], [1.68665327E12, 1000.0], [1.6866531E12, 1000.0], [1.68665336E12, 1000.0], [1.68665353E12, 904.5418719211827], [1.68665319E12, 1000.0], [1.68665302E12, 1000.0], [1.68665328E12, 1000.0], [1.68665345E12, 1000.0], [1.68665311E12, 1000.0], [1.68665294E12, 1000.0], [1.68665337E12, 1000.0], [1.68665354E12, 552.6301886792452], [1.6866532E12, 1000.0], [1.68665303E12, 1000.0], [1.68665329E12, 1000.0], [1.68665346E12, 1000.0], [1.68665312E12, 1000.0], [1.68665295E12, 1000.0], [1.68665321E12, 1000.0], [1.68665338E12, 1000.0], [1.68665304E12, 1000.0], [1.68665355E12, 164.22994652406408], [1.68665287E12, 8.0], [1.68665313E12, 1000.0], [1.68665296E12, 1000.0], [1.68665347E12, 1000.0], [1.6866533E12, 1000.0], [1.68665356E12, 37.5], [1.68665305E12, 1000.0], [1.68665288E12, 508.34615384615387], [1.68665339E12, 1000.0], [1.68665322E12, 1000.0], [1.68665297E12, 1000.0], [1.68665331E12, 1000.0], [1.68665314E12, 1000.0]], "isOverall": false, "label": "192.168.122.22-Thread Group", "isController": false}, {"data": [[1.6866534E12, 1000.0], [1.68665357E12, 20.5], [1.68665289E12, 1000.0], [1.68665323E12, 1000.0], [1.68665306E12, 1000.0], [1.68665332E12, 1000.0], [1.68665349E12, 1000.0], [1.68665315E12, 1000.0], [1.68665298E12, 1000.0], [1.68665358E12, 9.588235294117647], [1.68665324E12, 1000.0], [1.68665341E12, 1000.0], [1.68665307E12, 1000.0], [1.6866529E12, 1000.0], [1.68665333E12, 1000.0], [1.6866535E12, 998.0], [1.68665316E12, 1000.0], [1.68665299E12, 1000.0], [1.68665342E12, 1000.0], [1.68665291E12, 1000.0], [1.68665317E12, 1000.0], [1.686653E12, 1000.0], [1.68665351E12, 993.5], [1.68665334E12, 1000.0], [1.68665309E12, 1000.0], [1.68665292E12, 1000.0], [1.68665343E12, 1000.0], [1.68665326E12, 1000.0], [1.68665301E12, 1000.0], [1.68665335E12, 1000.0], [1.68665318E12, 1000.0], [1.68665344E12, 1000.0], [1.68665293E12, 1000.0], [1.68665327E12, 1000.0], [1.6866531E12, 1000.0], [1.68665336E12, 1000.0], [1.68665353E12, 820.7490039840643], [1.68665319E12, 1000.0], [1.68665302E12, 1000.0], [1.68665328E12, 1000.0], [1.68665345E12, 1000.0], [1.68665294E12, 1000.0], [1.68665337E12, 1000.0], [1.68665354E12, 349.717289719626], [1.6866532E12, 1000.0], [1.68665303E12, 1000.0], [1.68665329E12, 1000.0], [1.68665346E12, 1000.0], [1.68665312E12, 1000.0], [1.68665295E12, 1000.0], [1.68665321E12, 1000.0], [1.68665338E12, 1000.0], [1.68665304E12, 1000.0], [1.68665355E12, 56.31578947368421], [1.68665313E12, 1000.0], [1.68665296E12, 1000.0], [1.68665347E12, 1000.0], [1.6866533E12, 1000.0], [1.68665356E12, 32.5], [1.68665305E12, 1000.0], [1.68665339E12, 1000.0], [1.68665331E12, 1000.0], [1.68665314E12, 1000.0]], "isOverall": false, "label": "192.168.122.208-Thread Group", "isController": false}, {"data": [[1.6866534E12, 1000.0], [1.68665289E12, 1000.0], [1.68665323E12, 1000.0], [1.68665332E12, 1000.0], [1.68665349E12, 998.1666666666666], [1.68665315E12, 1000.0], [1.68665298E12, 1000.0], [1.68665358E12, 18.34285714285714], [1.68665324E12, 1000.0], [1.68665341E12, 1000.0], [1.68665307E12, 1000.0], [1.6866529E12, 1000.0], [1.68665333E12, 1000.0], [1.6866535E12, 993.0], [1.68665316E12, 1000.0], [1.68665299E12, 1000.0], [1.68665325E12, 1000.0], [1.68665342E12, 1000.0], [1.68665308E12, 1000.0], [1.68665291E12, 1000.0], [1.68665317E12, 1000.0], [1.686653E12, 1000.0], [1.68665351E12, 987.5], [1.68665334E12, 1000.0], [1.68665309E12, 1000.0], [1.68665292E12, 1000.0], [1.68665343E12, 1000.0], [1.68665352E12, 981.0], [1.68665301E12, 1000.0], [1.68665344E12, 1000.0], [1.68665293E12, 1000.0], [1.68665327E12, 1000.0], [1.6866531E12, 1000.0], [1.68665353E12, 929.5963855421687], [1.68665302E12, 1000.0], [1.68665328E12, 1000.0], [1.68665311E12, 1000.0], [1.68665294E12, 1000.0], [1.68665354E12, 592.0828729281767], [1.68665303E12, 1000.0], [1.68665329E12, 1000.0], [1.68665295E12, 1000.0], [1.68665321E12, 1000.0], [1.68665304E12, 1000.0], [1.68665355E12, 208.16017316017317], [1.68665296E12, 1000.0], [1.68665305E12, 1000.0], [1.68665288E12, 700.5], [1.68665322E12, 1000.0], [1.68665297E12, 1000.0], [1.68665331E12, 1000.0], [1.68665314E12, 1000.0]], "isOverall": false, "label": "192.168.122.223-Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665358E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.14918868177551178, "minX": 1.0, "maxY": 442365.0, "series": [{"data": [[2.0, 110927.25], [3.0, 236518.0], [4.0, 185029.75], [5.0, 246691.66666666666], [6.0, 165057.5], [7.0, 303698.75], [8.0, 165054.0], [9.0, 442362.0], [10.0, 60768.4], [11.0, 266294.8333333334], [12.0, 199729.25], [13.0, 89150.0], [14.0, 221206.0], [15.0, 442351.5], [17.0, 266319.3333333333], [18.0, 442333.0], [20.0, 442355.5], [22.0, 442365.0], [23.0, 442340.0], [24.0, 442341.0], [25.0, 442344.0], [27.0, 294960.0], [29.0, 442343.0], [30.0, 442293.0], [31.0, 442297.0], [32.0, 442292.0], [35.0, 442297.0], [34.0, 442307.0], [55.0, 131025.28571428572], [60.0, 131048.8], [66.0, 131049.6], [113.0, 130575.46078431372], [134.0, 130811.6779661017], [133.0, 129984.0], [132.0, 130084.0], [131.0, 130096.0], [129.0, 130973.0], [151.0, 130557.32758620693], [145.0, 130590.76842105265], [159.0, 130717.0], [166.0, 130670.0], [165.0, 130689.0], [164.0, 130689.0], [162.0, 130695.0], [161.0, 130709.0], [170.0, 130679.1111111111], [169.0, 130629.5], [168.0, 130661.0], [171.0, 130680.10416666667], [183.0, 130993.0], [201.0, 130559.0], [220.0, 131232.0], [226.0, 130312.59183673469], [251.0, 130235.0], [266.0, 130319.57522123896], [260.0, 130306.0], [271.0, 129956.0], [270.0, 130519.0], [278.0, 130524.34000000001], [277.0, 130115.27272727272], [276.0, 130105.33333333334], [275.0, 129940.0], [274.0, 129952.0], [273.0, 129954.0], [272.0, 129956.0], [310.0, 129731.50837988827], [315.0, 130134.0], [332.0, 130301.76923076923], [322.0, 130436.51162790698], [331.0, 130292.54545454544], [330.0, 130307.10344827588], [329.0, 130030.0625], [328.0, 130111.1875], [333.0, 130564.74074074077], [327.0, 130145.0], [326.0, 130144.0], [325.0, 130088.66666666667], [379.0, 3678.5], [399.0, 130373.33333333333], [398.0, 130379.0], [397.0, 130388.33333333333], [396.0, 130412.0], [395.0, 130430.0], [394.0, 130980.0], [401.0, 130554.42592592594], [400.0, 130292.33333333333], [428.0, 130426.49019607843], [427.0, 130090.6], [446.0, 4421.666666666667], [460.0, 129750.93382352937], [459.0, 129247.0], [486.0, 129713.37572254338], [483.0, 130796.0], [511.0, 130347.45454545454], [510.0, 130707.0], [509.0, 130314.0], [508.0, 130457.90909090907], [540.0, 129855.0], [543.0, 129328.0], [542.0, 129340.0], [541.0, 129448.875], [519.0, 130333.50000000001], [526.0, 130539.30434782612], [524.0, 130263.75], [523.0, 130347.25], [522.0, 130330.75], [574.0, 129615.0], [570.0, 129646.0], [565.0, 129669.0], [559.0, 129670.0], [555.0, 129689.0], [552.0, 129297.0], [548.0, 129298.0], [593.0, 129770.04587155968], [592.0, 129570.5], [591.0, 129589.0], [590.0, 129603.0], [585.0, 129605.0], [580.0, 129612.0], [607.0, 129762.11494252869], [628.0, 129819.23000000004], [652.0, 129854.263803681], [641.0, 129483.0], [688.0, 130217.0], [691.0, 129758.71999999997], [690.0, 129391.0], [689.0, 129403.0], [687.0, 129954.0], [686.0, 129312.0], [685.0, 129805.0], [684.0, 129493.0], [683.0, 129977.0], [723.0, 129783.24731182794], [756.0, 129798.32499999995], [745.0, 130909.0], [780.0, 7674.0], [773.0, 7693.333333333333], [772.0, 129986.80769230769], [771.0, 131021.0], [770.0, 129680.0], [809.0, 130000.60714285714], [808.0, 130003.0], [850.0, 129515.0], [832.0, 129926.74301675973], [855.0, 129934.8611111111], [853.0, 129513.0], [851.0, 129512.0], [848.0, 129519.0], [847.0, 129523.0], [846.0, 129525.0], [845.0, 129648.0], [844.0, 129664.0], [843.0, 129669.0], [842.0, 129673.0], [841.0, 129676.0], [840.0, 130762.0], [868.0, 129903.06542056077], [867.0, 129635.0], [866.0, 129682.0], [892.0, 130038.8333333333], [891.0, 129846.0], [889.0, 129896.0], [888.0, 129536.0], [920.0, 130267.6923076923], [954.0, 130225.47368421052], [955.0, 353771.0], [953.0, 129880.0], [952.0, 129899.0], [951.0, 129910.0], [950.0, 130483.0], [949.0, 130651.0], [991.0, 359465.0], [971.0, 129603.92207792208], [985.0, 130468.58552631583], [964.0, 320996.5], [962.0, 337377.0], [960.0, 353766.71428571426], [1000.0, 130260.89108780237], [999.0, 353788.0], [998.0, 353755.5], [997.0, 353749.5], [994.0, 359474.25], [1.0, 297165.5]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[910.2317047377321, 130999.21425549881]], "isOverall": false, "label": "Bind-Aggregated", "isController": false}, {"data": [[2.0, 103814.0], [3.0, 103818.0], [4.0, 103686.0], [5.0, 103576.0], [6.0, 103554.0], [7.0, 104149.0], [8.0, 104141.0], [9.0, 103581.0], [10.0, 104137.0], [11.0, 103642.0], [13.0, 103778.0], [14.0, 103945.0], [15.0, 103567.0], [16.0, 104075.0], [17.0, 103480.0], [18.0, 104074.0], [19.0, 103768.5], [20.0, 103807.5], [21.0, 103766.5], [22.0, 104120.0], [23.0, 103507.5], [24.0, 104113.5], [25.0, 103594.0], [26.0, 103824.5], [27.0, 103903.0], [28.0, 103843.5], [29.0, 103513.0], [30.0, 103849.5], [31.0, 103848.0], [33.0, 104143.5], [32.0, 103873.0], [35.0, 104107.5], [34.0, 103579.0], [37.0, 104155.0], [36.0, 103627.5], [39.0, 104246.5], [38.0, 103607.0], [41.0, 104121.0], [40.0, 103544.0], [43.0, 104024.0], [42.0, 103729.0], [45.0, 104027.0], [44.0, 103733.0], [47.0, 103923.0], [46.0, 103744.0], [49.0, 104059.0], [48.0, 103875.0], [50.0, 103770.0], [61.0, 103881.0], [67.0, 103862.0], [70.0, 103874.0], [69.0, 103947.0], [68.0, 103847.0], [135.0, 104002.0], [151.0, 103943.0], [150.0, 103763.0], [149.0, 104030.0], [148.0, 103776.0], [147.0, 104036.0], [146.0, 103769.0], [175.0, 103927.0], [174.0, 103849.0], [173.0, 103903.0], [172.0, 103876.0], [171.0, 103830.0], [269.0, 103853.0], [268.0, 103985.0], [267.0, 103831.0], [312.0, 103824.0], [311.0, 103955.0], [323.0, 103797.0], [342.0, 3345.5], [343.0, 3337.0], [366.0, 3531.0], [379.0, 3694.0], [382.0, 3702.0], [429.0, 103846.0], [428.0, 103901.0], [453.0, 4385.0], [457.0, 4305.0], [488.0, 104001.0], [487.0, 104005.0], [537.0, 1956.0], [538.0, 1962.0], [520.0, 103946.0], [528.0, 104011.0], [527.0, 103795.0], [595.0, 104018.0], [594.0, 103717.0], [608.0, 2658.0], [613.0, 2710.0], [630.0, 104000.0], [629.0, 103792.0], [653.0, 104075.0], [687.0, 3213.0], [692.0, 53634.0], [724.0, 103751.0], [758.0, 103720.0], [757.0, 103995.0], [779.0, 3996.0], [780.0, 4001.0], [811.0, 103721.0], [810.0, 103811.0], [855.0, 4728.0], [858.0, 103789.0], [866.0, 4859.0], [874.0, 104020.0], [869.0, 103745.0], [894.0, 104012.0], [893.0, 104066.0], [927.0, 110988.0], [926.0, 110573.0], [925.0, 110823.0], [924.0, 110579.0], [923.0, 110527.0], [922.0, 108504.0], [921.0, 103923.0], [957.0, 104167.0], [933.0, 57907.0], [943.0, 111609.0], [928.0, 110553.0], [930.0, 110630.0], [929.0, 111045.0], [932.0, 110794.0], [931.0, 111052.0], [942.0, 111652.0], [941.0, 111629.0], [940.0, 111460.0], [939.0, 111208.0], [938.0, 111234.0], [937.0, 111164.0], [936.0, 111059.0], [947.0, 57995.5], [946.0, 111026.0], [945.0, 110979.0], [944.0, 110902.0], [949.0, 110212.0], [948.0, 110350.0], [959.0, 104029.0], [958.0, 103730.0], [956.0, 104141.0], [955.0, 103980.0], [952.0, 108902.0], [935.0, 111151.0], [934.0, 110952.0], [951.0, 109447.0], [950.0, 109619.0], [988.0, 106241.75], [991.0, 107266.33333333333], [977.0, 105459.0], [976.0, 105516.66666666667], [979.0, 105482.66666666667], [978.0, 105732.66666666667], [981.0, 105745.66666666667], [980.0, 105698.0], [990.0, 105549.66666666667], [989.0, 105409.0], [987.0, 105997.75], [986.0, 105991.25], [985.0, 106364.66666666667], [984.0, 106170.0], [975.0, 105270.0], [961.0, 103732.0], [960.0, 104035.0], [963.0, 103948.0], [962.0, 103850.0], [965.0, 106441.5], [964.0, 103899.0], [967.0, 106225.0], [966.0, 106174.0], [974.0, 105184.66666666667], [973.0, 105246.0], [972.0, 105324.33333333333], [971.0, 105945.5], [970.0, 106159.5], [969.0, 106154.5], [968.0, 106361.5], [983.0, 106111.33333333333], [982.0, 105849.33333333333], [996.0, 108256.0], [1000.0, 65.12096773112911], [999.0, 108412.66666666667], [998.0, 108410.0], [997.0, 108257.66666666667], [995.0, 108150.33333333333], [994.0, 108067.33333333333], [993.0, 108023.0], [992.0, 107496.33333333333], [1.0, 103762.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[999.9255472340635, 83.70301743942477]], "isOverall": false, "label": "Search-Aggregated", "isController": false}, {"data": [[1000.0, 0.14918868177551178]], "isOverall": false, "label": "Unbind", "isController": false}, {"data": [[1000.0, 0.14918868177551178]], "isOverall": false, "label": "Unbind-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68665287E12, "maxY": 8953669.2, "series": [{"data": [[1.6866534E12, 4349777.3], [1.68665357E12, 893.5], [1.68665289E12, 1646.1], [1.68665323E12, 929.8], [1.68665306E12, 1407.1], [1.68665332E12, 929.5], [1.68665349E12, 1390.5], [1.68665315E12, 6434654.4], [1.68665298E12, 929.9], [1.68665358E12, 1741.7], [1.68665324E12, 966.6], [1.68665341E12, 7273086.7], [1.68665307E12, 928.7], [1.6866529E12, 1425.9], [1.68665333E12, 929.6], [1.6866535E12, 1095.2], [1.68665316E12, 814860.7], [1.68665299E12, 929.4], [1.68665325E12, 893.7], [1.68665342E12, 1866287.0], [1.68665308E12, 930.7], [1.68665291E12, 1095.1], [1.68665317E12, 37776.8], [1.686653E12, 239827.0], [1.68665351E12, 1003.1], [1.68665334E12, 893.4], [1.68665309E12, 929.5], [1.68665292E12, 1298.0], [1.68665343E12, 56260.5], [1.68665326E12, 966.7], [1.68665352E12, 1042.2], [1.68665301E12, 8953669.2], [1.68665335E12, 966.9], [1.68665318E12, 1004.3], [1.68665344E12, 930.7], [1.68665293E12, 1260.4], [1.68665327E12, 5211249.5], [1.6866531E12, 1041.2], [1.68665336E12, 893.9], [1.68665353E12, 34289.6], [1.68665319E12, 1004.6], [1.68665302E12, 4205895.7], [1.68665328E12, 6773405.1], [1.68665345E12, 929.5], [1.68665311E12, 1005.3], [1.68665294E12, 1041.5], [1.68665337E12, 929.6], [1.68665354E12, 65733.7], [1.6866532E12, 1447.8], [1.68665303E12, 642058.7], [1.68665329E12, 1508130.2], [1.68665346E12, 930.4], [1.68665312E12, 1132.4], [1.68665295E12, 1004.0], [1.68665321E12, 1110.0], [1.68665338E12, 1441.8], [1.68665304E12, 55566.7], [1.68665355E12, 25893.2], [1.68665287E12, 171.2], [1.68665313E12, 1389.9], [1.68665296E12, 1442.4], [1.68665347E12, 893.3], [1.6866533E12, 56256.9], [1.68665356E12, 966.7], [1.68665305E12, 893.5], [1.68665288E12, 1091.0], [1.68665339E12, 892.7], [1.68665322E12, 930.5], [1.68665348E12, 929.0], [1.68665297E12, 930.4], [1.68665331E12, 892.9], [1.68665314E12, 6484498.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 0.0], [1.68665289E12, 0.0], [1.68665323E12, 0.0], [1.68665306E12, 0.0], [1.68665332E12, 0.0], [1.68665349E12, 0.0], [1.68665315E12, 0.0], [1.68665298E12, 0.0], [1.68665358E12, 0.0], [1.68665324E12, 0.0], [1.68665341E12, 0.0], [1.68665307E12, 0.0], [1.6866529E12, 0.0], [1.68665333E12, 0.0], [1.6866535E12, 0.0], [1.68665316E12, 0.0], [1.68665299E12, 0.0], [1.68665325E12, 0.0], [1.68665342E12, 0.0], [1.68665308E12, 0.0], [1.68665291E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665351E12, 0.0], [1.68665334E12, 0.0], [1.68665309E12, 0.0], [1.68665292E12, 0.0], [1.68665343E12, 0.0], [1.68665326E12, 0.0], [1.68665352E12, 0.0], [1.68665301E12, 0.0], [1.68665335E12, 0.0], [1.68665318E12, 0.0], [1.68665344E12, 0.0], [1.68665293E12, 0.0], [1.68665327E12, 0.0], [1.6866531E12, 0.0], [1.68665336E12, 0.0], [1.68665353E12, 0.0], [1.68665319E12, 0.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 0.0], [1.68665311E12, 0.0], [1.68665294E12, 0.0], [1.68665337E12, 0.0], [1.68665354E12, 0.0], [1.6866532E12, 0.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665346E12, 0.0], [1.68665312E12, 0.0], [1.68665295E12, 0.0], [1.68665321E12, 0.0], [1.68665338E12, 0.0], [1.68665304E12, 0.0], [1.68665355E12, 0.0], [1.68665287E12, 0.0], [1.68665313E12, 0.0], [1.68665296E12, 0.0], [1.68665347E12, 0.0], [1.6866533E12, 0.0], [1.68665356E12, 0.0], [1.68665305E12, 0.0], [1.68665288E12, 0.0], [1.68665339E12, 0.0], [1.68665322E12, 0.0], [1.68665348E12, 0.0], [1.68665297E12, 0.0], [1.68665331E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665358E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665287E12, "maxY": 359471.1666666667, "series": [{"data": [[1.68665293E12, 47518.583333333336], [1.68665327E12, 129964.40248962647], [1.6866534E12, 130002.56629213494], [1.68665289E12, 13239.366666666667], [1.68665306E12, 183574.4166666667], [1.68665353E12, 130021.25728643218], [1.68665302E12, 130578.12], [1.68665349E12, 348292.888888889], [1.68665328E12, 130204.96549520761], [1.68665315E12, 130002.80075662046], [1.68665358E12, 316033.31249999994], [1.68665341E12, 130088.14449660924], [1.68665354E12, 130005.22506527402], [1.6866532E12, 194649.52631578947], [1.6866529E12, 25883.61111111112], [1.6866535E12, 359471.1666666667], [1.68665316E12, 130699.99999999997], [1.68665329E12, 137493.24480369527], [1.68665312E12, 242579.16666666666], [1.68665342E12, 130595.4474327629], [1.68665321E12, 200245.4], [1.68665338E12, 335104.5833333334], [1.68665355E12, 130462.2333785617], [1.68665291E12, 31284.666666666664], [1.68665317E12, 129895.1], [1.686653E12, 128489.04273504275], [1.68665287E12, 29.749999999999996], [1.68665313E12, 125387.66666666666], [1.68665296E12, 74658.79166666666], [1.6866533E12, 131042.59999999999], [1.68665292E12, 43819.0], [1.68665343E12, 131043.26666666666], [1.68665288E12, 4689.909090909091], [1.68665301E12, 130272.6905608754], [1.68665314E12, 129842.92395833331]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.6866534E12, 17.40289732294185], [1.68665357E12, 103811.54166666666], [1.68665289E12, 6605.296296296295], [1.68665323E12, 72389.52], [1.68665306E12, 58091.04166666666], [1.68665332E12, 91915.95999999999], [1.68665349E12, 108838.07407407407], [1.68665315E12, 7.257498811984396], [1.68665298E12, 37576.31999999999], [1.68665358E12, 103798.6], [1.68665324E12, 72966.73076923077], [1.68665341E12, 9.16525024563673], [1.68665307E12, 61179.56000000001], [1.6866529E12, 12182.250000000002], [1.68665333E12, 92009.56], [1.6866535E12, 111060.50000000003], [1.68665316E12, 82.09938084692911], [1.68665299E12, 38513.2], [1.68665325E12, 73545.66666666667], [1.68665342E12, 46.40741179256445], [1.68665308E12, 59064.479999999996], [1.68665291E12, 17481.69230769231], [1.68665317E12, 1769.7594936708847], [1.686653E12, 171.46159789831503], [1.68665351E12, 109692.70370370371], [1.68665334E12, 92330.95833333334], [1.68665309E12, 58869.52], [1.68665292E12, 18782.928571428565], [1.68665343E12, 1612.765091863517], [1.68665326E12, 74388.1923076923], [1.68665352E12, 105154.67857142857], [1.68665301E12, 3.6690665906621023], [1.68665335E12, 92383.5], [1.68665318E12, 67401.11111111111], [1.68665344E12, 102462.44], [1.68665293E12, 24322.518518518515], [1.68665327E12, 10.723756319299664], [1.6866531E12, 58110.03571428572], [1.68665336E12, 92149.25000000001], [1.68665353E12, 103887.37499999999], [1.68665319E12, 69265.18518518517], [1.68665302E12, 9.905629009374449], [1.68665328E12, 7.931376491815322], [1.68665345E12, 102454.68000000001], [1.68665311E12, 57095.407407407416], [1.68665294E12, 26744.964285714283], [1.68665337E12, 89200.31999999999], [1.68665354E12, 103888.88], [1.6866532E12, 71738.82142857145], [1.68665303E12, 77.24404558404554], [1.68665329E12, 51.683779689179914], [1.68665346E12, 102508.24], [1.68665312E12, 61517.74074074074], [1.68665295E12, 27438.85185185185], [1.68665321E12, 75275.14814814813], [1.68665338E12, 93319.28], [1.68665304E12, 855.8808426596449], [1.68665355E12, 103873.75], [1.68665313E12, 63980.99999999999], [1.68665296E12, 33058.920000000006], [1.68665347E12, 102579.37499999999], [1.6866533E12, 1495.0373770491815], [1.68665356E12, 103882.0], [1.68665305E12, 52385.66666666668], [1.68665288E12, 3706.304347826087], [1.68665339E12, 96861.66666666666], [1.68665322E12, 73901.31999999999], [1.68665348E12, 102598.04000000002], [1.68665297E12, 36434.720000000016], [1.68665331E12, 91846.08333333334], [1.68665314E12, 8.051556995113065]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665342E12, 0.07258064516129042], [1.68665327E12, 0.09050112191473456], [1.6866534E12, 0.06627101879327396], [1.68665304E12, 0.049999999999999996], [1.68665317E12, 0.0], [1.686653E12, 0.0576923076923077], [1.68665302E12, 0.5664516129032259], [1.68665328E12, 0.15195822454308075], [1.68665315E12, 0.07798165137614677], [1.6866533E12, 0.06666666666666667], [1.68665343E12, 0.06666666666666667], [1.68665341E12, 0.11970443349753676], [1.68665301E12, 0.08613659531090724], [1.68665316E12, 0.07239819004524888], [1.68665303E12, 0.21991701244813264], [1.68665329E12, 0.06601466992665041], [1.68665314E12, 0.10103626943005205]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68665358E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665287E12, "maxY": 4.9E-324, "series": [{"data": [[1.68665293E12, 0.0], [1.68665327E12, 0.0], [1.6866534E12, 0.0], [1.68665289E12, 0.0], [1.68665306E12, 0.0], [1.68665353E12, 0.0], [1.68665302E12, 0.0], [1.68665349E12, 0.0], [1.68665328E12, 0.0], [1.68665315E12, 0.0], [1.68665358E12, 0.0], [1.68665341E12, 0.0], [1.68665354E12, 0.0], [1.6866532E12, 0.0], [1.6866529E12, 0.0], [1.6866535E12, 0.0], [1.68665316E12, 0.0], [1.68665329E12, 0.0], [1.68665312E12, 0.0], [1.68665342E12, 0.0], [1.68665321E12, 0.0], [1.68665338E12, 0.0], [1.68665355E12, 0.0], [1.68665291E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665287E12, 0.0], [1.68665313E12, 0.0], [1.68665296E12, 0.0], [1.6866533E12, 0.0], [1.68665292E12, 0.0], [1.68665343E12, 0.0], [1.68665288E12, 0.0], [1.68665301E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 0.0], [1.68665289E12, 0.0], [1.68665323E12, 0.0], [1.68665306E12, 0.0], [1.68665332E12, 0.0], [1.68665349E12, 0.0], [1.68665315E12, 0.0], [1.68665298E12, 0.0], [1.68665358E12, 0.0], [1.68665324E12, 0.0], [1.68665341E12, 0.0], [1.68665307E12, 0.0], [1.6866529E12, 0.0], [1.68665333E12, 0.0], [1.6866535E12, 0.0], [1.68665316E12, 0.0], [1.68665299E12, 0.0], [1.68665325E12, 0.0], [1.68665342E12, 0.0], [1.68665308E12, 0.0], [1.68665291E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665351E12, 0.0], [1.68665334E12, 0.0], [1.68665309E12, 0.0], [1.68665292E12, 0.0], [1.68665343E12, 0.0], [1.68665326E12, 0.0], [1.68665352E12, 0.0], [1.68665301E12, 0.0], [1.68665335E12, 0.0], [1.68665318E12, 0.0], [1.68665344E12, 0.0], [1.68665293E12, 0.0], [1.68665327E12, 0.0], [1.6866531E12, 0.0], [1.68665336E12, 0.0], [1.68665353E12, 0.0], [1.68665319E12, 0.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 0.0], [1.68665311E12, 0.0], [1.68665294E12, 0.0], [1.68665337E12, 0.0], [1.68665354E12, 0.0], [1.6866532E12, 0.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665346E12, 0.0], [1.68665312E12, 0.0], [1.68665295E12, 0.0], [1.68665321E12, 0.0], [1.68665338E12, 0.0], [1.68665304E12, 0.0], [1.68665355E12, 0.0], [1.68665313E12, 0.0], [1.68665296E12, 0.0], [1.68665347E12, 0.0], [1.6866533E12, 0.0], [1.68665356E12, 0.0], [1.68665305E12, 0.0], [1.68665288E12, 0.0], [1.68665339E12, 0.0], [1.68665322E12, 0.0], [1.68665348E12, 0.0], [1.68665297E12, 0.0], [1.68665331E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665342E12, 0.0], [1.68665327E12, 0.0], [1.6866534E12, 0.0], [1.68665304E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665315E12, 0.0], [1.6866533E12, 0.0], [1.68665343E12, 0.0], [1.68665341E12, 0.0], [1.68665301E12, 0.0], [1.68665316E12, 0.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68665358E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665287E12, "maxY": 4.9E-324, "series": [{"data": [[1.68665293E12, 0.0], [1.68665327E12, 0.0], [1.6866534E12, 0.0], [1.68665289E12, 0.0], [1.68665306E12, 0.0], [1.68665353E12, 0.0], [1.68665302E12, 0.0], [1.68665349E12, 0.0], [1.68665328E12, 0.0], [1.68665315E12, 0.0], [1.68665358E12, 0.0], [1.68665341E12, 0.0], [1.68665354E12, 0.0], [1.6866532E12, 0.0], [1.6866529E12, 0.0], [1.6866535E12, 0.0], [1.68665316E12, 0.0], [1.68665329E12, 0.0], [1.68665312E12, 0.0], [1.68665342E12, 0.0], [1.68665321E12, 0.0], [1.68665338E12, 0.0], [1.68665355E12, 0.0], [1.68665291E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665287E12, 0.0], [1.68665313E12, 0.0], [1.68665296E12, 0.0], [1.6866533E12, 0.0], [1.68665292E12, 0.0], [1.68665343E12, 0.0], [1.68665288E12, 0.0], [1.68665301E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 0.0], [1.68665289E12, 0.0], [1.68665323E12, 0.0], [1.68665306E12, 0.0], [1.68665332E12, 0.0], [1.68665349E12, 0.0], [1.68665315E12, 0.0], [1.68665298E12, 0.0], [1.68665358E12, 0.0], [1.68665324E12, 0.0], [1.68665341E12, 0.0], [1.68665307E12, 0.0], [1.6866529E12, 0.0], [1.68665333E12, 0.0], [1.6866535E12, 0.0], [1.68665316E12, 0.0], [1.68665299E12, 0.0], [1.68665325E12, 0.0], [1.68665342E12, 0.0], [1.68665308E12, 0.0], [1.68665291E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665351E12, 0.0], [1.68665334E12, 0.0], [1.68665309E12, 0.0], [1.68665292E12, 0.0], [1.68665343E12, 0.0], [1.68665326E12, 0.0], [1.68665352E12, 0.0], [1.68665301E12, 0.0], [1.68665335E12, 0.0], [1.68665318E12, 0.0], [1.68665344E12, 0.0], [1.68665293E12, 0.0], [1.68665327E12, 0.0], [1.6866531E12, 0.0], [1.68665336E12, 0.0], [1.68665353E12, 0.0], [1.68665319E12, 0.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 0.0], [1.68665311E12, 0.0], [1.68665294E12, 0.0], [1.68665337E12, 0.0], [1.68665354E12, 0.0], [1.6866532E12, 0.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665346E12, 0.0], [1.68665312E12, 0.0], [1.68665295E12, 0.0], [1.68665321E12, 0.0], [1.68665338E12, 0.0], [1.68665304E12, 0.0], [1.68665355E12, 0.0], [1.68665313E12, 0.0], [1.68665296E12, 0.0], [1.68665347E12, 0.0], [1.6866533E12, 0.0], [1.68665356E12, 0.0], [1.68665305E12, 0.0], [1.68665288E12, 0.0], [1.68665339E12, 0.0], [1.68665322E12, 0.0], [1.68665348E12, 0.0], [1.68665297E12, 0.0], [1.68665331E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665342E12, 0.0], [1.68665327E12, 0.0], [1.6866534E12, 0.0], [1.68665304E12, 0.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665315E12, 0.0], [1.6866533E12, 0.0], [1.68665343E12, 0.0], [1.68665341E12, 0.0], [1.68665301E12, 0.0], [1.68665316E12, 0.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68665358E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665287E12, "maxY": 442487.0, "series": [{"data": [[1.6866534E12, 98709.0], [1.68665357E12, 104162.0], [1.68665289E12, 18332.0], [1.68665323E12, 72743.0], [1.68665306E12, 188099.0], [1.68665332E12, 92215.0], [1.68665349E12, 353788.0], [1.68665315E12, 67103.0], [1.68665298E12, 38146.0], [1.68665358E12, 442487.0], [1.68665324E12, 73275.0], [1.68665341E12, 101598.0], [1.68665307E12, 62706.0], [1.6866529E12, 27719.0], [1.68665333E12, 92213.0], [1.6866535E12, 359499.0], [1.68665316E12, 67464.0], [1.68665299E12, 39130.0], [1.68665325E12, 73899.0], [1.68665342E12, 102588.0], [1.68665308E12, 59909.0], [1.68665291E12, 32640.0], [1.68665317E12, 67583.0], [1.686653E12, 125807.0], [1.68665351E12, 110709.0], [1.68665334E12, 92470.0], [1.68665309E12, 59177.0], [1.68665292E12, 48906.0], [1.68665343E12, 102633.0], [1.68665326E12, 74864.0], [1.68665352E12, 107241.0], [1.68665301E12, 130544.0], [1.68665335E12, 92479.0], [1.68665318E12, 67660.0], [1.68665344E12, 102665.0], [1.68665293E12, 51200.0], [1.68665327E12, 77259.0], [1.6866531E12, 58624.0], [1.68665336E12, 92539.0], [1.68665353E12, 104167.0], [1.68665319E12, 69830.0], [1.68665302E12, 52323.0], [1.68665328E12, 85054.0], [1.68665345E12, 102654.0], [1.68665311E12, 57838.0], [1.68665294E12, 27050.0], [1.68665337E12, 91100.0], [1.68665354E12, 104018.0], [1.6866532E12, 194779.0], [1.68665303E12, 52601.0], [1.68665329E12, 280463.0], [1.68665346E12, 102623.0], [1.68665312E12, 242611.0], [1.68665295E12, 30235.0], [1.68665321E12, 200254.0], [1.68665338E12, 346250.0], [1.68665304E12, 52240.0], [1.68665355E12, 104137.0], [1.68665287E12, 53.0], [1.68665313E12, 129158.0], [1.68665296E12, 75944.0], [1.68665347E12, 102750.0], [1.6866533E12, 91995.0], [1.68665356E12, 104253.0], [1.68665305E12, 53796.0], [1.68665288E12, 7716.0], [1.68665339E12, 97677.0], [1.68665322E12, 75607.0], [1.68665348E12, 103741.0], [1.68665297E12, 37110.0], [1.68665331E12, 92191.0], [1.68665314E12, 65712.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 104142.5], [1.68665289E12, 13032.4], [1.68665323E12, 72683.8], [1.68665306E12, 188022.9], [1.68665332E12, 92200.6], [1.68665349E12, 353769.2], [1.68665315E12, 0.0], [1.68665298E12, 37957.6], [1.68665358E12, 442369.0], [1.68665324E12, 73136.3], [1.68665341E12, 0.0], [1.68665307E12, 62541.8], [1.6866529E12, 27703.0], [1.68665333E12, 92198.6], [1.6866535E12, 359467.0], [1.68665316E12, 67155.0], [1.68665299E12, 38985.6], [1.68665325E12, 73866.0], [1.68665342E12, 0.6000000000000227], [1.68665308E12, 59518.4], [1.68665291E12, 30618.4], [1.68665317E12, 67528.0], [1.686653E12, 125725.8], [1.68665351E12, 110599.8], [1.68665334E12, 92423.5], [1.68665309E12, 59158.2], [1.68665292E12, 44726.0], [1.68665343E12, 102590.0], [1.68665326E12, 74780.8], [1.68665352E12, 106880.8], [1.68665301E12, 0.0], [1.68665335E12, 92475.2], [1.68665318E12, 67634.0], [1.68665344E12, 102647.2], [1.68665293E12, 51171.0], [1.68665327E12, 0.0], [1.6866531E12, 58583.7], [1.68665336E12, 92451.0], [1.68665353E12, 104118.0], [1.68665319E12, 69816.8], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 102570.4], [1.68665311E12, 57574.4], [1.68665294E12, 27015.6], [1.68665337E12, 90609.2], [1.68665354E12, 104007.4], [1.6866532E12, 194671.2], [1.68665303E12, 10350.60000000088], [1.68665329E12, 86669.4], [1.68665346E12, 102607.8], [1.68665312E12, 242580.2], [1.68665295E12, 29556.0], [1.68665321E12, 200242.4], [1.68665338E12, 346208.0], [1.68665304E12, 52192.6], [1.68665355E12, 104047.5], [1.68665287E12, 53.0], [1.68665313E12, 129143.8], [1.68665296E12, 74702.0], [1.68665347E12, 102674.0], [1.6866533E12, 91683.5], [1.68665356E12, 104226.0], [1.68665305E12, 53415.5], [1.68665288E12, 7671.5], [1.68665339E12, 97645.5], [1.68665322E12, 75445.8], [1.68665348E12, 103134.6], [1.68665297E12, 37049.8], [1.68665331E12, 92182.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6866534E12, 97545.68], [1.68665357E12, 104162.0], [1.68665289E12, 18332.0], [1.68665323E12, 72743.0], [1.68665306E12, 188099.0], [1.68665332E12, 92215.0], [1.68665349E12, 353788.0], [1.68665315E12, 11808.120000004172], [1.68665298E12, 38146.0], [1.68665358E12, 442487.0], [1.68665324E12, 73275.0], [1.68665341E12, 21.72999999999979], [1.68665307E12, 62706.0], [1.6866529E12, 27719.0], [1.68665333E12, 92213.0], [1.6866535E12, 359499.0], [1.68665316E12, 67436.04], [1.68665299E12, 39130.0], [1.68665325E12, 73899.0], [1.68665342E12, 102359.84], [1.68665308E12, 59909.0], [1.68665291E12, 32640.0], [1.68665317E12, 67583.0], [1.686653E12, 125807.0], [1.68665351E12, 110709.0], [1.68665334E12, 92470.0], [1.68665309E12, 59177.0], [1.68665292E12, 48906.0], [1.68665343E12, 102633.0], [1.68665326E12, 74864.0], [1.68665352E12, 107241.0], [1.68665301E12, 48329.89999999999], [1.68665335E12, 92479.0], [1.68665318E12, 67660.0], [1.68665344E12, 102665.0], [1.68665293E12, 51200.0], [1.68665327E12, 75111.38], [1.6866531E12, 58624.0], [1.68665336E12, 92539.0], [1.68665353E12, 104167.0], [1.68665319E12, 69830.0], [1.68665302E12, 51522.659999999996], [1.68665328E12, 75.44000000000278], [1.68665345E12, 102654.0], [1.68665311E12, 57838.0], [1.68665294E12, 27050.0], [1.68665337E12, 91100.0], [1.68665354E12, 104018.0], [1.6866532E12, 194779.0], [1.68665303E12, 52495.84], [1.68665329E12, 257452.36], [1.68665346E12, 102623.0], [1.68665312E12, 242611.0], [1.68665295E12, 30235.0], [1.68665321E12, 200254.0], [1.68665338E12, 346250.0], [1.68665304E12, 52240.0], [1.68665355E12, 104137.0], [1.68665287E12, 53.0], [1.68665313E12, 129158.0], [1.68665296E12, 75944.0], [1.68665347E12, 102750.0], [1.6866533E12, 91995.0], [1.68665356E12, 104253.0], [1.68665305E12, 53796.0], [1.68665288E12, 7716.0], [1.68665339E12, 97677.0], [1.68665322E12, 75607.0], [1.68665348E12, 103741.0], [1.68665297E12, 37110.0], [1.68665331E12, 92191.0], [1.68665314E12, 64064.97]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6866534E12, 1.0], [1.68665357E12, 104157.5], [1.68665289E12, 13565.59999999997], [1.68665323E12, 72727.4], [1.68665306E12, 188065.95], [1.68665332E12, 92213.2], [1.68665349E12, 353781.6], [1.68665315E12, 1.0], [1.68665298E12, 38101.9], [1.68665358E12, 442390.5], [1.68665324E12, 73251.2], [1.68665341E12, 1.0], [1.68665307E12, 62667.0], [1.6866529E12, 27710.6], [1.68665333E12, 92212.1], [1.6866535E12, 359494.45], [1.68665316E12, 67299.25], [1.68665299E12, 39100.9], [1.68665325E12, 73894.5], [1.68665342E12, 1.0], [1.68665308E12, 59817.2], [1.68665291E12, 32630.9], [1.68665317E12, 67562.3], [1.686653E12, 125770.8], [1.68665351E12, 110685.8], [1.68665334E12, 92463.0], [1.68665309E12, 59174.6], [1.68665292E12, 48703.849999999984], [1.68665343E12, 102618.0], [1.68665326E12, 74841.25], [1.68665352E12, 107240.1], [1.68665301E12, 1.0], [1.68665335E12, 92478.65], [1.68665318E12, 67652.8], [1.68665344E12, 102662.0], [1.68665293E12, 51181.0], [1.68665327E12, 1.0], [1.6866531E12, 58620.85], [1.68665336E12, 92520.5], [1.68665353E12, 104160.5], [1.68665319E12, 69826.0], [1.68665302E12, 1.0], [1.68665328E12, 1.0], [1.68665345E12, 102630.0], [1.68665311E12, 57763.6], [1.68665294E12, 27041.0], [1.68665337E12, 90991.1], [1.68665354E12, 104015.9], [1.6866532E12, 194691.8], [1.68665303E12, 52169.6], [1.68665329E12, 250959.5], [1.68665346E12, 102620.6], [1.68665312E12, 242599.1], [1.68665295E12, 30099.399999999998], [1.68665321E12, 200253.35], [1.68665338E12, 346236.5], [1.68665304E12, 52220.3], [1.68665355E12, 104117.5], [1.68665287E12, 53.0], [1.68665313E12, 129154.6], [1.68665296E12, 75505.5], [1.68665347E12, 102739.5], [1.6866533E12, 91878.15], [1.68665356E12, 104248.45], [1.68665305E12, 53721.5], [1.68665288E12, 7700.25], [1.68665339E12, 97670.25], [1.68665322E12, 75559.0], [1.68665348E12, 103655.2], [1.68665297E12, 37107.6], [1.68665331E12, 92189.5], [1.68665314E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 103454.0], [1.68665289E12, 5459.0], [1.68665323E12, 72161.0], [1.68665306E12, 54277.0], [1.68665332E12, 91583.0], [1.68665349E12, 104280.0], [1.68665315E12, 0.0], [1.68665298E12, 37027.0], [1.68665358E12, 103480.0], [1.68665324E12, 72591.0], [1.68665341E12, 0.0], [1.68665307E12, 59707.0], [1.6866529E12, 7876.0], [1.68665333E12, 91813.0], [1.6866535E12, 110553.0], [1.68665316E12, 0.0], [1.68665299E12, 37885.0], [1.68665325E12, 73168.0], [1.68665342E12, 0.0], [1.68665308E12, 58518.0], [1.68665291E12, 16854.0], [1.68665317E12, 0.0], [1.686653E12, 0.0], [1.68665351E12, 107586.0], [1.68665334E12, 92226.0], [1.68665309E12, 58483.0], [1.68665292E12, 17545.0], [1.68665343E12, 0.0], [1.68665326E12, 73936.0], [1.68665352E12, 103732.0], [1.68665301E12, 0.0], [1.68665335E12, 92259.0], [1.68665318E12, 67129.0], [1.68665344E12, 102262.0], [1.68665293E12, 21998.0], [1.68665327E12, 0.0], [1.6866531E12, 57461.0], [1.68665336E12, 91054.0], [1.68665353E12, 103612.0], [1.68665319E12, 67229.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 102289.0], [1.68665311E12, 56566.0], [1.68665294E12, 26460.0], [1.68665337E12, 88009.0], [1.68665354E12, 103717.0], [1.6866532E12, 69319.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665346E12, 102404.0], [1.68665312E12, 58093.0], [1.68665295E12, 26515.0], [1.68665321E12, 73962.0], [1.68665338E12, 89828.0], [1.68665304E12, 0.0], [1.68665355E12, 103583.0], [1.68665287E12, 6.0], [1.68665313E12, 62531.0], [1.68665296E12, 30576.0], [1.68665347E12, 102475.0], [1.6866533E12, 0.0], [1.68665356E12, 103488.0], [1.68665305E12, 51918.0], [1.68665288E12, 45.0], [1.68665339E12, 95089.0], [1.68665322E12, 72711.0], [1.68665348E12, 102109.0], [1.68665297E12, 34267.0], [1.68665331E12, 91441.0], [1.68665314E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6866534E12, 0.0], [1.68665357E12, 103817.0], [1.68665289E12, 12466.0], [1.68665323E12, 72406.0], [1.68665306E12, 120901.0], [1.68665332E12, 91921.0], [1.68665349E12, 111516.0], [1.68665315E12, 0.0], [1.68665298E12, 37550.0], [1.68665358E12, 178292.5], [1.68665324E12, 73032.0], [1.68665341E12, 0.0], [1.68665307E12, 61180.0], [1.6866529E12, 15357.0], [1.68665333E12, 92021.0], [1.6866535E12, 111186.0], [1.68665316E12, 0.0], [1.68665299E12, 38435.0], [1.68665325E12, 73551.5], [1.68665342E12, 0.0], [1.68665308E12, 59035.0], [1.68665291E12, 17559.0], [1.68665317E12, 67176.0], [1.686653E12, 0.0], [1.68665351E12, 110114.0], [1.68665334E12, 92321.0], [1.68665309E12, 58860.0], [1.68665292E12, 19347.0], [1.68665343E12, 102245.0], [1.68665326E12, 74437.0], [1.68665352E12, 104977.0], [1.68665301E12, 0.0], [1.68665335E12, 92387.0], [1.68665318E12, 67481.0], [1.68665344E12, 102536.0], [1.68665293E12, 24633.0], [1.68665327E12, 0.0], [1.6866531E12, 58102.5], [1.68665336E12, 92348.5], [1.68665353E12, 103895.5], [1.68665319E12, 69373.0], [1.68665302E12, 0.0], [1.68665328E12, 0.0], [1.68665345E12, 102446.0], [1.68665311E12, 57070.0], [1.68665294E12, 26735.0], [1.68665337E12, 89056.0], [1.68665354E12, 103874.0], [1.6866532E12, 73964.0], [1.68665303E12, 0.0], [1.68665329E12, 0.0], [1.68665346E12, 102519.0], [1.68665312E12, 62686.0], [1.68665295E12, 26962.0], [1.68665321E12, 75974.0], [1.68665338E12, 95642.0], [1.68665304E12, 51739.0], [1.68665355E12, 103875.5], [1.68665287E12, 34.0], [1.68665313E12, 64586.0], [1.68665296E12, 34125.0], [1.68665347E12, 102585.0], [1.6866533E12, 90852.0], [1.68665356E12, 103895.5], [1.68665305E12, 52269.5], [1.68665288E12, 3698.0], [1.68665339E12, 97414.5], [1.68665322E12, 73823.0], [1.68665348E12, 102541.0], [1.68665297E12, 36725.0], [1.68665331E12, 91852.5], [1.68665314E12, 0.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665358E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 442293.5, "series": [{"data": [[2.0, 74812.0], [33863.0, 0.0], [3.0, 67554.5], [4.0, 73974.0], [16823.0, 0.0], [20163.0, 0.0], [5.0, 29795.5], [20703.0, 0.0], [20491.0, 0.0], [21391.0, 0.0], [23515.0, 0.0], [22679.0, 0.0], [23335.0, 0.0], [23847.0, 0.0], [6.0, 7469.0], [26199.0, 0.0], [25823.0, 0.0], [7.0, 200241.0], [30255.0, 0.0], [8.0, 55439.5], [36910.0, 0.0], [9.0, 123310.0], [10.0, 9131.0], [12.0, 26690.5], [14.0, 42391.5], [19.0, 181904.0], [21.0, 194619.0], [26.0, 74553.5], [46.0, 0.0], [15407.0, 0.0], [16414.0, 0.0], [66.0, 442293.5], [68.0, 44032.5], [18950.0, 0.0], [18550.0, 0.0], [20318.0, 0.0], [20198.0, 0.0], [19790.0, 0.0], [20154.0, 0.0], [21458.0, 0.0], [80.0, 104012.0], [22858.0, 0.0], [23286.0, 0.0], [23494.0, 0.0], [28038.0, 0.0], [29706.0, 0.0], [30754.0, 0.0], [32562.0, 0.0], [135.0, 0.0], [166.0, 103903.0], [181.0, 103905.5], [177.0, 104005.0], [200.0, 103853.0], [214.0, 103770.0], [277.0, 103721.0], [285.0, 103891.0], [303.0, 103868.5], [310.0, 0.0], [313.0, 103824.0], [328.0, 103891.0], [326.0, 103874.0], [330.0, 103888.0], [416.0, 0.0], [501.0, 103903.0], [513.0, 0.0], [512.0, 0.0], [575.0, 0.0], [792.0, 0.0], [797.0, 0.0], [1023.0, 0.0], [1022.0, 0.0], [17585.0, 0.0], [18225.0, 0.0], [1174.0, 0.0], [19361.0, 0.0], [22305.0, 0.0], [22709.0, 0.0], [23869.0, 0.0], [24345.0, 0.0], [25381.0, 0.0], [25573.0, 0.0], [25669.0, 0.0], [25625.0, 0.0], [2259.0, 0.0], [2328.0, 0.0], [2464.0, 0.0], [2691.0, 0.0], [3413.0, 0.0], [3510.0, 0.0], [3621.0, 0.0], [4214.0, 0.0], [4544.0, 0.0], [4525.0, 0.0], [6599.0, 0.0], [6734.0, 0.0], [7088.0, 0.0], [7887.0, 0.0], [9966.0, 0.0], [10554.0, 97472.0], [11688.0, 0.0], [13698.0, 0.0], [13884.0, 0.0], [14936.0, 0.0], [15482.0, 0.0], [16316.0, 0.0], [17648.0, 0.0], [20052.0, 0.0], [19644.0, 0.0], [21524.0, 0.0], [22948.0, 0.0], [22736.0, 0.0], [24232.0, 0.0], [24316.0, 0.0], [23632.0, 0.0], [24584.0, 0.0], [25132.0, 0.0], [26372.0, 0.0], [26856.0, 0.0], [27512.0, 0.0], [27844.0, 0.0], [29392.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33863.0, 0.0], [16823.0, 0.0], [20163.0, 0.0], [20703.0, 0.0], [20491.0, 0.0], [21391.0, 0.0], [23515.0, 0.0], [22679.0, 0.0], [23335.0, 0.0], [23847.0, 0.0], [26199.0, 0.0], [25823.0, 0.0], [30255.0, 0.0], [36910.0, 0.0], [46.0, 0.0], [15407.0, 0.0], [16414.0, 0.0], [68.0, 0.0], [18950.0, 0.0], [18550.0, 0.0], [20318.0, 0.0], [20198.0, 0.0], [19790.0, 0.0], [20154.0, 0.0], [21458.0, 0.0], [80.0, 129585.0], [22858.0, 0.0], [23286.0, 0.0], [23494.0, 0.0], [28038.0, 0.0], [29706.0, 0.0], [30754.0, 0.0], [32562.0, 0.0], [135.0, 0.0], [166.0, 129785.0], [181.0, 129863.0], [177.0, 129667.5], [200.0, 130572.0], [214.0, 130565.0], [277.0, 129896.5], [285.0, 130455.0], [303.0, 130409.0], [310.0, 0.0], [313.0, 129671.5], [328.0, 129809.0], [326.0, 130412.0], [330.0, 130239.0], [416.0, 0.0], [501.0, 129700.0], [513.0, 0.0], [512.0, 0.0], [575.0, 0.0], [792.0, 0.0], [797.0, 0.0], [1023.0, 0.0], [1022.0, 0.0], [17585.0, 0.0], [18225.0, 0.0], [1174.0, 0.0], [19361.0, 0.0], [22305.0, 0.0], [22709.0, 0.0], [23869.0, 0.0], [24345.0, 0.0], [25381.0, 0.0], [25573.0, 0.0], [25669.0, 0.0], [25625.0, 0.0], [2259.0, 0.0], [2328.0, 0.0], [2464.0, 0.0], [2691.0, 0.0], [3413.0, 0.0], [3510.0, 0.0], [3621.0, 0.0], [4214.0, 0.0], [4544.0, 0.0], [4525.0, 0.0], [6599.0, 0.0], [6734.0, 0.0], [7088.0, 0.0], [7887.0, 0.0], [9966.0, 0.0], [10554.0, 0.0], [11688.0, 0.0], [13698.0, 0.0], [13884.0, 0.0], [14936.0, 0.0], [15482.0, 0.0], [16316.0, 0.0], [17648.0, 0.0], [20052.0, 0.0], [19644.0, 0.0], [21524.0, 0.0], [22948.0, 0.0], [22736.0, 0.0], [24232.0, 0.0], [24316.0, 0.0], [23632.0, 0.0], [24584.0, 0.0], [25132.0, 0.0], [26372.0, 0.0], [26856.0, 0.0], [27512.0, 0.0], [27844.0, 0.0], [29392.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36910.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [33863.0, 0.0], [3.0, 0.0], [4.0, 0.0], [16823.0, 0.0], [20163.0, 0.0], [5.0, 0.0], [20703.0, 0.0], [20491.0, 0.0], [21391.0, 0.0], [23515.0, 0.0], [22679.0, 0.0], [23335.0, 0.0], [23847.0, 0.0], [6.0, 0.0], [26199.0, 0.0], [25823.0, 0.0], [7.0, 0.0], [30255.0, 0.0], [8.0, 0.0], [36910.0, 0.0], [9.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [19.0, 0.0], [21.0, 0.0], [26.0, 0.0], [46.0, 0.0], [15407.0, 0.0], [16414.0, 0.0], [66.0, 0.0], [68.0, 0.0], [18950.0, 0.0], [18550.0, 0.0], [20318.0, 0.0], [20198.0, 0.0], [19790.0, 0.0], [20154.0, 0.0], [21458.0, 0.0], [80.0, 0.0], [22858.0, 0.0], [23286.0, 0.0], [23494.0, 0.0], [28038.0, 0.0], [29706.0, 0.0], [30754.0, 0.0], [32562.0, 0.0], [135.0, 0.0], [166.0, 0.0], [181.0, 0.0], [177.0, 0.0], [200.0, 0.0], [214.0, 0.0], [277.0, 0.0], [285.0, 0.0], [303.0, 0.0], [310.0, 0.0], [313.0, 0.0], [328.0, 0.0], [326.0, 0.0], [330.0, 0.0], [416.0, 0.0], [501.0, 0.0], [513.0, 0.0], [512.0, 0.0], [575.0, 0.0], [792.0, 0.0], [797.0, 0.0], [1023.0, 0.0], [1022.0, 0.0], [17585.0, 0.0], [18225.0, 0.0], [1174.0, 0.0], [19361.0, 0.0], [22305.0, 0.0], [22709.0, 0.0], [23869.0, 0.0], [24345.0, 0.0], [25381.0, 0.0], [25573.0, 0.0], [25669.0, 0.0], [25625.0, 0.0], [2259.0, 0.0], [2328.0, 0.0], [2464.0, 0.0], [2691.0, 0.0], [3413.0, 0.0], [3510.0, 0.0], [3621.0, 0.0], [4214.0, 0.0], [4544.0, 0.0], [4525.0, 0.0], [6599.0, 0.0], [6734.0, 0.0], [7088.0, 0.0], [7887.0, 0.0], [9966.0, 0.0], [10554.0, 0.0], [11688.0, 0.0], [13698.0, 0.0], [13884.0, 0.0], [14936.0, 0.0], [15482.0, 0.0], [16316.0, 0.0], [17648.0, 0.0], [20052.0, 0.0], [19644.0, 0.0], [21524.0, 0.0], [22948.0, 0.0], [22736.0, 0.0], [24232.0, 0.0], [24316.0, 0.0], [23632.0, 0.0], [24584.0, 0.0], [25132.0, 0.0], [26372.0, 0.0], [26856.0, 0.0], [27512.0, 0.0], [27844.0, 0.0], [29392.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33863.0, 0.0], [16823.0, 0.0], [20163.0, 0.0], [20703.0, 0.0], [20491.0, 0.0], [21391.0, 0.0], [23515.0, 0.0], [22679.0, 0.0], [23335.0, 0.0], [23847.0, 0.0], [26199.0, 0.0], [25823.0, 0.0], [30255.0, 0.0], [36910.0, 0.0], [46.0, 0.0], [15407.0, 0.0], [16414.0, 0.0], [68.0, 0.0], [18950.0, 0.0], [18550.0, 0.0], [20318.0, 0.0], [20198.0, 0.0], [19790.0, 0.0], [20154.0, 0.0], [21458.0, 0.0], [80.0, 0.0], [22858.0, 0.0], [23286.0, 0.0], [23494.0, 0.0], [28038.0, 0.0], [29706.0, 0.0], [30754.0, 0.0], [32562.0, 0.0], [135.0, 0.0], [166.0, 0.0], [181.0, 0.0], [177.0, 0.0], [200.0, 0.0], [214.0, 0.0], [277.0, 0.0], [285.0, 0.0], [303.0, 0.0], [310.0, 0.0], [313.0, 0.0], [328.0, 0.0], [326.0, 0.0], [330.0, 0.0], [416.0, 0.0], [501.0, 0.0], [513.0, 0.0], [512.0, 0.0], [575.0, 0.0], [792.0, 0.0], [797.0, 0.0], [1023.0, 0.0], [1022.0, 0.0], [17585.0, 0.0], [18225.0, 0.0], [1174.0, 0.0], [19361.0, 0.0], [22305.0, 0.0], [22709.0, 0.0], [23869.0, 0.0], [24345.0, 0.0], [25381.0, 0.0], [25573.0, 0.0], [25669.0, 0.0], [25625.0, 0.0], [2259.0, 0.0], [2328.0, 0.0], [2464.0, 0.0], [2691.0, 0.0], [3413.0, 0.0], [3510.0, 0.0], [3621.0, 0.0], [4214.0, 0.0], [4544.0, 0.0], [4525.0, 0.0], [6599.0, 0.0], [6734.0, 0.0], [7088.0, 0.0], [7887.0, 0.0], [9966.0, 0.0], [10554.0, 0.0], [11688.0, 0.0], [13698.0, 0.0], [13884.0, 0.0], [14936.0, 0.0], [15482.0, 0.0], [16316.0, 0.0], [17648.0, 0.0], [20052.0, 0.0], [19644.0, 0.0], [21524.0, 0.0], [22948.0, 0.0], [22736.0, 0.0], [24232.0, 0.0], [24316.0, 0.0], [23632.0, 0.0], [24584.0, 0.0], [25132.0, 0.0], [26372.0, 0.0], [26856.0, 0.0], [27512.0, 0.0], [27844.0, 0.0], [29392.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36910.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68665287E12, "maxY": 24601.7, "series": [{"data": [[1.6866534E12, 12006.0], [1.68665289E12, 6.6], [1.68665323E12, 2.5], [1.68665306E12, 4.8], [1.68665332E12, 2.5], [1.68665315E12, 17858.6], [1.68665298E12, 2.5], [1.68665324E12, 2.6], [1.68665341E12, 20150.6], [1.68665307E12, 2.5], [1.6866529E12, 4.6], [1.68665333E12, 2.5], [1.68665316E12, 2256.9], [1.68665299E12, 2.5], [1.68665325E12, 2.4], [1.68665342E12, 5191.8], [1.68665308E12, 2.5], [1.68665291E12, 3.2], [1.68665317E12, 104.7], [1.686653E12, 659.4], [1.68665334E12, 2.4], [1.68665309E12, 2.5], [1.68665292E12, 4.0], [1.68665343E12, 155.4], [1.68665326E12, 2.6], [1.68665301E12, 24601.7], [1.68665335E12, 2.6], [1.68665318E12, 2.7], [1.68665344E12, 2.5], [1.68665293E12, 3.9], [1.68665327E12, 14391.3], [1.6866531E12, 2.8], [1.68665336E12, 2.4], [1.68665319E12, 2.7], [1.68665302E12, 11799.0], [1.68665328E12, 18782.9], [1.68665345E12, 2.5], [1.68665311E12, 2.7], [1.68665294E12, 2.8], [1.68665337E12, 2.5], [1.6866532E12, 4.7], [1.68665303E12, 1803.2], [1.68665329E12, 4176.6], [1.68665346E12, 2.5], [1.68665312E12, 3.3], [1.68665295E12, 2.7], [1.68665321E12, 3.2], [1.68665338E12, 4.9], [1.68665304E12, 155.9], [1.68665287E12, 2.6], [1.68665313E12, 4.5], [1.68665296E12, 4.9], [1.68665347E12, 2.4], [1.6866533E12, 155.5], [1.68665305E12, 2.4], [1.68665288E12, 400.5], [1.68665339E12, 2.4], [1.68665322E12, 2.5], [1.68665348E12, 0.1], [1.68665297E12, 2.5], [1.68665331E12, 2.4], [1.68665314E12, 17906.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665348E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.68665287E12, "maxY": 24572.2, "series": [{"data": [[1.6866534E12, 103.2], [1.68665357E12, 2.4], [1.68665289E12, 5.7], [1.68665323E12, 2.5], [1.68665306E12, 4.8], [1.68665332E12, 2.5], [1.68665349E12, 4.5], [1.68665315E12, 198.1], [1.68665298E12, 2.5], [1.68665358E12, 7.4], [1.68665324E12, 2.6], [1.68665341E12, 204.8], [1.68665307E12, 2.5], [1.6866529E12, 4.6], [1.68665333E12, 2.5], [1.6866535E12, 3.2], [1.68665316E12, 24.8], [1.68665299E12, 2.5], [1.68665325E12, 2.4], [1.68665342E12, 64.3], [1.68665308E12, 2.5], [1.68665291E12, 3.2], [1.68665317E12, 3.7], [1.686653E12, 9.5], [1.68665351E12, 2.7], [1.68665334E12, 2.4], [1.68665309E12, 2.5], [1.68665292E12, 4.0], [1.68665343E12, 3.9], [1.68665326E12, 2.6], [1.68665352E12, 2.8], [1.68665301E12, 198.6], [1.68665335E12, 2.6], [1.68665318E12, 2.7], [1.68665344E12, 2.5], [1.68665293E12, 3.9], [1.68665327E12, 135.7], [1.6866531E12, 2.8], [1.68665336E12, 2.4], [1.68665353E12, 2.4], [1.68665319E12, 2.7], [1.68665302E12, 157.2], [1.68665328E12, 193.3], [1.68665345E12, 2.5], [1.68665311E12, 2.7], [1.68665294E12, 2.8], [1.68665337E12, 2.5], [1.68665354E12, 2.5], [1.6866532E12, 4.7], [1.68665303E12, 26.7], [1.68665329E12, 45.7], [1.68665346E12, 2.5], [1.68665312E12, 3.3], [1.68665295E12, 2.7], [1.68665321E12, 3.2], [1.68665338E12, 4.9], [1.68665304E12, 4.5], [1.68665355E12, 2.4], [1.68665287E12, 0.8], [1.68665313E12, 4.5], [1.68665296E12, 4.9], [1.68665347E12, 2.4], [1.6866533E12, 4.0], [1.68665356E12, 2.6], [1.68665305E12, 2.4], [1.68665288E12, 3.4], [1.68665339E12, 2.4], [1.68665322E12, 2.5], [1.68665348E12, 2.5], [1.68665297E12, 2.5], [1.68665331E12, 2.4], [1.68665314E12, 156.6]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.68665342E12, 5106.2], [1.68665327E12, 14290.1], [1.6866534E12, 11935.4], [1.68665304E12, 149.4], [1.68665355E12, 73.7], [1.68665353E12, 99.5], [1.68665317E12, 101.0], [1.686653E12, 654.5], [1.68665302E12, 11494.0], [1.68665328E12, 18555.1], [1.68665315E12, 17622.8], [1.6866533E12, 151.5], [1.68665343E12, 151.5], [1.68665341E12, 19934.5], [1.68665354E12, 191.5], [1.68665301E12, 24572.2], [1.68665316E12, 2232.1], [1.68665303E12, 1752.4], [1.68665329E12, 4130.9], [1.68665314E12, 17787.8]], "isOverall": false, "label": "800", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665358E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.68665287E12, "maxY": 24207.3, "series": [{"data": [[1.6866534E12, 2.1], [1.68665357E12, 2.4], [1.68665289E12, 2.7], [1.68665323E12, 2.5], [1.68665306E12, 2.4], [1.68665332E12, 2.5], [1.68665349E12, 2.7], [1.68665315E12, 1.9], [1.68665298E12, 2.5], [1.68665358E12, 1.0], [1.68665324E12, 2.6], [1.68665341E12, 1.8], [1.68665307E12, 2.5], [1.6866529E12, 2.8], [1.68665333E12, 2.5], [1.6866535E12, 2.6], [1.68665316E12, 2.7], [1.68665299E12, 2.5], [1.68665325E12, 2.4], [1.68665342E12, 2.3], [1.68665308E12, 2.5], [1.68665291E12, 2.6], [1.68665317E12, 2.7], [1.686653E12, 2.5], [1.68665351E12, 2.7], [1.68665334E12, 2.4], [1.68665309E12, 2.5], [1.68665292E12, 2.8], [1.68665343E12, 2.4], [1.68665326E12, 2.6], [1.68665352E12, 2.8], [1.68665301E12, 1.8], [1.68665335E12, 2.6], [1.68665318E12, 2.7], [1.68665344E12, 2.5], [1.68665293E12, 2.7], [1.68665327E12, 2.0], [1.6866531E12, 2.8], [1.68665336E12, 2.4], [1.68665353E12, 2.4], [1.68665319E12, 2.7], [1.68665302E12, 2.2], [1.68665328E12, 1.8], [1.68665345E12, 2.5], [1.68665311E12, 2.7], [1.68665294E12, 2.8], [1.68665337E12, 2.5], [1.68665354E12, 2.5], [1.6866532E12, 2.8], [1.68665303E12, 2.6], [1.68665329E12, 2.4], [1.68665346E12, 2.5], [1.68665312E12, 2.7], [1.68665295E12, 2.7], [1.68665321E12, 2.7], [1.68665338E12, 2.5], [1.68665304E12, 2.5], [1.68665355E12, 2.4], [1.68665313E12, 2.7], [1.68665296E12, 2.5], [1.68665347E12, 2.4], [1.6866533E12, 2.5], [1.68665356E12, 2.6], [1.68665305E12, 2.4], [1.68665288E12, 2.3], [1.68665339E12, 2.4], [1.68665322E12, 2.5], [1.68665348E12, 2.5], [1.68665297E12, 2.5], [1.68665331E12, 2.4], [1.68665314E12, 2.2]], "isOverall": false, "label": "Search-success", "isController": false}, {"data": [[1.68665342E12, 5065.3], [1.68665327E12, 14121.4], [1.6866534E12, 11801.9], [1.68665304E12, 149.4], [1.68665317E12, 100.0], [1.686653E12, 644.6], [1.68665302E12, 11486.5], [1.68665328E12, 18398.6], [1.68665315E12, 17464.2], [1.6866533E12, 150.0], [1.68665343E12, 150.0], [1.68665341E12, 19742.8], [1.68665301E12, 24207.3], [1.68665316E12, 2210.0], [1.68665303E12, 1752.4], [1.68665329E12, 4090.0], [1.68665314E12, 17595.8]], "isOverall": false, "label": "Search-failure", "isController": false}, {"data": [[1.68665293E12, 1.2], [1.68665289E12, 3.0], [1.68665321E12, 0.5], [1.68665338E12, 2.4], [1.68665291E12, 0.6], [1.68665306E12, 2.4], [1.686653E12, 1.8], [1.68665287E12, 0.8], [1.68665349E12, 1.8], [1.68665313E12, 1.8], [1.68665296E12, 2.4], [1.68665358E12, 6.4], [1.68665292E12, 1.2], [1.68665288E12, 1.1], [1.6866532E12, 1.9], [1.6866529E12, 1.8], [1.68665301E12, 0.6], [1.6866535E12, 0.6], [1.68665329E12, 2.4], [1.68665312E12, 0.6]], "isOverall": false, "label": "Bind-success", "isController": false}, {"data": [[1.68665342E12, 40.9], [1.68665327E12, 168.7], [1.6866534E12, 133.5], [1.68665355E12, 73.7], [1.68665353E12, 99.5], [1.68665317E12, 1.0], [1.686653E12, 9.9], [1.68665302E12, 7.5], [1.68665328E12, 156.5], [1.68665315E12, 158.6], [1.6866533E12, 1.5], [1.68665343E12, 1.5], [1.68665341E12, 191.7], [1.68665354E12, 191.5], [1.68665301E12, 364.9], [1.68665316E12, 22.1], [1.68665329E12, 40.9], [1.68665314E12, 192.0]], "isOverall": false, "label": "Bind-failure", "isController": false}, {"data": [[1.68665342E12, 62.0], [1.68665327E12, 133.7], [1.6866534E12, 101.1], [1.68665304E12, 2.0], [1.68665317E12, 1.0], [1.686653E12, 5.2], [1.68665302E12, 155.0], [1.68665328E12, 191.5], [1.68665315E12, 196.2], [1.6866533E12, 1.5], [1.68665343E12, 1.5], [1.68665341E12, 203.0], [1.68665301E12, 196.2], [1.68665316E12, 22.1], [1.68665303E12, 24.1], [1.68665329E12, 40.9], [1.68665314E12, 154.4]], "isOverall": false, "label": "Unbind-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68665358E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.68665287E12, "maxY": 24572.2, "series": [{"data": [[1.6866534E12, 103.2], [1.68665357E12, 2.4], [1.68665289E12, 5.7], [1.68665323E12, 2.5], [1.68665306E12, 4.8], [1.68665332E12, 2.5], [1.68665349E12, 4.5], [1.68665315E12, 198.1], [1.68665298E12, 2.5], [1.68665358E12, 7.4], [1.68665324E12, 2.6], [1.68665341E12, 204.8], [1.68665307E12, 2.5], [1.6866529E12, 4.6], [1.68665333E12, 2.5], [1.6866535E12, 3.2], [1.68665316E12, 24.8], [1.68665299E12, 2.5], [1.68665325E12, 2.4], [1.68665342E12, 64.3], [1.68665308E12, 2.5], [1.68665291E12, 3.2], [1.68665317E12, 3.7], [1.686653E12, 9.5], [1.68665351E12, 2.7], [1.68665334E12, 2.4], [1.68665309E12, 2.5], [1.68665292E12, 4.0], [1.68665343E12, 3.9], [1.68665326E12, 2.6], [1.68665352E12, 2.8], [1.68665301E12, 198.6], [1.68665335E12, 2.6], [1.68665318E12, 2.7], [1.68665344E12, 2.5], [1.68665293E12, 3.9], [1.68665327E12, 135.7], [1.6866531E12, 2.8], [1.68665336E12, 2.4], [1.68665353E12, 2.4], [1.68665319E12, 2.7], [1.68665302E12, 157.2], [1.68665328E12, 193.3], [1.68665345E12, 2.5], [1.68665311E12, 2.7], [1.68665294E12, 2.8], [1.68665337E12, 2.5], [1.68665354E12, 2.5], [1.6866532E12, 4.7], [1.68665303E12, 26.7], [1.68665329E12, 45.7], [1.68665346E12, 2.5], [1.68665312E12, 3.3], [1.68665295E12, 2.7], [1.68665321E12, 3.2], [1.68665338E12, 4.9], [1.68665304E12, 4.5], [1.68665355E12, 2.4], [1.68665287E12, 0.8], [1.68665313E12, 4.5], [1.68665296E12, 4.9], [1.68665347E12, 2.4], [1.6866533E12, 4.0], [1.68665356E12, 2.6], [1.68665305E12, 2.4], [1.68665288E12, 3.4], [1.68665339E12, 2.4], [1.68665322E12, 2.5], [1.68665348E12, 2.5], [1.68665297E12, 2.5], [1.68665331E12, 2.4], [1.68665314E12, 156.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68665342E12, 5106.2], [1.68665327E12, 14290.1], [1.6866534E12, 11935.4], [1.68665304E12, 149.4], [1.68665355E12, 73.7], [1.68665353E12, 99.5], [1.68665317E12, 101.0], [1.686653E12, 654.5], [1.68665302E12, 11494.0], [1.68665328E12, 18555.1], [1.68665315E12, 17622.8], [1.6866533E12, 151.5], [1.68665343E12, 151.5], [1.68665341E12, 19934.5], [1.68665354E12, 191.5], [1.68665301E12, 24572.2], [1.68665316E12, 2232.1], [1.68665303E12, 1752.4], [1.68665329E12, 4130.9], [1.68665314E12, 17787.8]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.68665358E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

