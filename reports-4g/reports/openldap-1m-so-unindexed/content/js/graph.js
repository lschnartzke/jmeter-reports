/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 620341.0, "series": [{"data": [[0.0, 34.0], [0.1, 68.0], [0.2, 74.0], [0.3, 100.0], [0.4, 122.0], [0.5, 150.0], [0.6, 11661.0], [0.7, 42225.0], [0.8, 58014.0], [0.9, 58204.0], [1.0, 97774.0], [1.1, 97779.0], [1.2, 97786.0], [1.3, 97792.0], [1.4, 97800.0], [1.5, 97804.0], [1.6, 97807.0], [1.7, 97811.0], [1.8, 97814.0], [1.9, 97815.0], [2.0, 97817.0], [2.1, 97821.0], [2.2, 97824.0], [2.3, 97844.0], [2.4, 97849.0], [2.5, 97886.0], [2.6, 97889.0], [2.7, 97891.0], [2.8, 97894.0], [2.9, 97915.0], [3.0, 97927.0], [3.1, 97950.0], [3.2, 97982.0], [3.3, 98014.0], [3.4, 98067.0], [3.5, 98150.0], [3.6, 98255.0], [3.7, 98326.0], [3.8, 102878.0], [3.9, 110555.0], [4.0, 114115.0], [4.1, 114178.0], [4.2, 114236.0], [4.3, 114315.0], [4.4, 114350.0], [4.5, 114463.0], [4.6, 114592.0], [4.7, 114610.0], [4.8, 114866.0], [4.9, 115047.0], [5.0, 122023.0], [5.1, 122028.0], [5.2, 122033.0], [5.3, 122038.0], [5.4, 122041.0], [5.5, 122046.0], [5.6, 122055.0], [5.7, 122061.0], [5.8, 122069.0], [5.9, 122077.0], [6.0, 122083.0], [6.1, 122086.0], [6.2, 122090.0], [6.3, 122102.0], [6.4, 122112.0], [6.5, 122119.0], [6.6, 122788.0], [6.7, 128111.0], [6.8, 129207.0], [6.9, 129237.0], [7.0, 129255.0], [7.1, 129272.0], [7.2, 129287.0], [7.3, 129291.0], [7.4, 129297.0], [7.5, 129301.0], [7.6, 129305.0], [7.7, 129308.0], [7.8, 129311.0], [7.9, 129315.0], [8.0, 129321.0], [8.1, 129326.0], [8.2, 129329.0], [8.3, 129334.0], [8.4, 129340.0], [8.5, 129345.0], [8.6, 129351.0], [8.7, 129355.0], [8.8, 129357.0], [8.9, 129366.0], [9.0, 129371.0], [9.1, 129377.0], [9.2, 129382.0], [9.3, 129389.0], [9.4, 129396.0], [9.5, 129406.0], [9.6, 129413.0], [9.7, 129421.0], [9.8, 129427.0], [9.9, 129433.0], [10.0, 129441.0], [10.1, 129448.0], [10.2, 129455.0], [10.3, 129467.0], [10.4, 129477.0], [10.5, 129490.0], [10.6, 129496.0], [10.7, 129505.0], [10.8, 129515.0], [10.9, 129520.0], [11.0, 129528.0], [11.1, 129533.0], [11.2, 129542.0], [11.3, 129549.0], [11.4, 129559.0], [11.5, 129567.0], [11.6, 129573.0], [11.7, 129584.0], [11.8, 129591.0], [11.9, 129598.0], [12.0, 129607.0], [12.1, 129614.0], [12.2, 129623.0], [12.3, 129633.0], [12.4, 129643.0], [12.5, 129653.0], [12.6, 129665.0], [12.7, 129675.0], [12.8, 129692.0], [12.9, 129701.0], [13.0, 129712.0], [13.1, 129723.0], [13.2, 129732.0], [13.3, 129740.0], [13.4, 129749.0], [13.5, 129756.0], [13.6, 129761.0], [13.7, 129771.0], [13.8, 129777.0], [13.9, 129784.0], [14.0, 129788.0], [14.1, 129793.0], [14.2, 129795.0], [14.3, 129800.0], [14.4, 129805.0], [14.5, 129806.0], [14.6, 129809.0], [14.7, 129816.0], [14.8, 129819.0], [14.9, 129822.0], [15.0, 129834.0], [15.1, 129842.0], [15.2, 129849.0], [15.3, 129857.0], [15.4, 129868.0], [15.5, 129881.0], [15.6, 129896.0], [15.7, 129899.0], [15.8, 129902.0], [15.9, 129906.0], [16.0, 129913.0], [16.1, 129919.0], [16.2, 129923.0], [16.3, 129927.0], [16.4, 129933.0], [16.5, 129937.0], [16.6, 129940.0], [16.7, 129945.0], [16.8, 129947.0], [16.9, 129949.0], [17.0, 129950.0], [17.1, 129953.0], [17.2, 129955.0], [17.3, 129957.0], [17.4, 129959.0], [17.5, 129960.0], [17.6, 129962.0], [17.7, 129965.0], [17.8, 129966.0], [17.9, 129968.0], [18.0, 129970.0], [18.1, 129971.0], [18.2, 129972.0], [18.3, 129974.0], [18.4, 129975.0], [18.5, 129976.0], [18.6, 129978.0], [18.7, 129980.0], [18.8, 129982.0], [18.9, 129984.0], [19.0, 129985.0], [19.1, 129988.0], [19.2, 129989.0], [19.3, 129993.0], [19.4, 129996.0], [19.5, 130000.0], [19.6, 130004.0], [19.7, 130007.0], [19.8, 130014.0], [19.9, 130020.0], [20.0, 130027.0], [20.1, 130031.0], [20.2, 130040.0], [20.3, 130047.0], [20.4, 130052.0], [20.5, 130055.0], [20.6, 130060.0], [20.7, 130066.0], [20.8, 130073.0], [20.9, 130078.0], [21.0, 130081.0], [21.1, 130088.0], [21.2, 130091.0], [21.3, 130097.0], [21.4, 130100.0], [21.5, 130105.0], [21.6, 130108.0], [21.7, 130114.0], [21.8, 130119.0], [21.9, 130123.0], [22.0, 130135.0], [22.1, 130145.0], [22.2, 130151.0], [22.3, 130157.0], [22.4, 130168.0], [22.5, 130171.0], [22.6, 130177.0], [22.7, 130179.0], [22.8, 130185.0], [22.9, 130191.0], [23.0, 130199.0], [23.1, 130208.0], [23.2, 130221.0], [23.3, 130229.0], [23.4, 130234.0], [23.5, 130243.0], [23.6, 130249.0], [23.7, 130256.0], [23.8, 130258.0], [23.9, 130262.0], [24.0, 130263.0], [24.1, 130267.0], [24.2, 130272.0], [24.3, 130273.0], [24.4, 130276.0], [24.5, 130277.0], [24.6, 130280.0], [24.7, 130283.0], [24.8, 130285.0], [24.9, 130288.0], [25.0, 130290.0], [25.1, 130293.0], [25.2, 130295.0], [25.3, 130297.0], [25.4, 130299.0], [25.5, 130300.0], [25.6, 130302.0], [25.7, 130304.0], [25.8, 130307.0], [25.9, 130308.0], [26.0, 130308.0], [26.1, 130308.0], [26.2, 130309.0], [26.3, 130309.0], [26.4, 130309.0], [26.5, 130311.0], [26.6, 130312.0], [26.7, 130316.0], [26.8, 130318.0], [26.9, 130320.0], [27.0, 130323.0], [27.1, 130324.0], [27.2, 130326.0], [27.3, 130329.0], [27.4, 130335.0], [27.5, 130337.0], [27.6, 130339.0], [27.7, 130343.0], [27.8, 130346.0], [27.9, 130348.0], [28.0, 130351.0], [28.1, 130354.0], [28.2, 130359.0], [28.3, 130362.0], [28.4, 130363.0], [28.5, 130367.0], [28.6, 130369.0], [28.7, 130372.0], [28.8, 130376.0], [28.9, 130379.0], [29.0, 130381.0], [29.1, 130383.0], [29.2, 130386.0], [29.3, 130390.0], [29.4, 130392.0], [29.5, 130394.0], [29.6, 130396.0], [29.7, 130399.0], [29.8, 130401.0], [29.9, 130404.0], [30.0, 130405.0], [30.1, 130406.0], [30.2, 130408.0], [30.3, 130411.0], [30.4, 130414.0], [30.5, 130416.0], [30.6, 130419.0], [30.7, 130421.0], [30.8, 130423.0], [30.9, 130427.0], [31.0, 130428.0], [31.1, 130431.0], [31.2, 130434.0], [31.3, 130436.0], [31.4, 130438.0], [31.5, 130440.0], [31.6, 130441.0], [31.7, 130442.0], [31.8, 130443.0], [31.9, 130444.0], [32.0, 130446.0], [32.1, 130447.0], [32.2, 130448.0], [32.3, 130449.0], [32.4, 130451.0], [32.5, 130452.0], [32.6, 130453.0], [32.7, 130454.0], [32.8, 130456.0], [32.9, 130457.0], [33.0, 130459.0], [33.1, 130460.0], [33.2, 130462.0], [33.3, 130463.0], [33.4, 130465.0], [33.5, 130467.0], [33.6, 130468.0], [33.7, 130470.0], [33.8, 130472.0], [33.9, 130473.0], [34.0, 130475.0], [34.1, 130476.0], [34.2, 130477.0], [34.3, 130478.0], [34.4, 130480.0], [34.5, 130482.0], [34.6, 130484.0], [34.7, 130484.0], [34.8, 130485.0], [34.9, 130487.0], [35.0, 130488.0], [35.1, 130489.0], [35.2, 130492.0], [35.3, 130492.0], [35.4, 130494.0], [35.5, 130496.0], [35.6, 130498.0], [35.7, 130501.0], [35.8, 130505.0], [35.9, 130508.0], [36.0, 130511.0], [36.1, 130513.0], [36.2, 130515.0], [36.3, 130517.0], [36.4, 130518.0], [36.5, 130520.0], [36.6, 130521.0], [36.7, 130523.0], [36.8, 130524.0], [36.9, 130525.0], [37.0, 130527.0], [37.1, 130530.0], [37.2, 130531.0], [37.3, 130534.0], [37.4, 130535.0], [37.5, 130536.0], [37.6, 130539.0], [37.7, 130540.0], [37.8, 130542.0], [37.9, 130542.0], [38.0, 130546.0], [38.1, 130548.0], [38.2, 130550.0], [38.3, 130551.0], [38.4, 130553.0], [38.5, 130555.0], [38.6, 130556.0], [38.7, 130557.0], [38.8, 130558.0], [38.9, 130562.0], [39.0, 130563.0], [39.1, 130565.0], [39.2, 130569.0], [39.3, 130570.0], [39.4, 130572.0], [39.5, 130574.0], [39.6, 130575.0], [39.7, 130577.0], [39.8, 130581.0], [39.9, 130582.0], [40.0, 130586.0], [40.1, 130588.0], [40.2, 130590.0], [40.3, 130591.0], [40.4, 130593.0], [40.5, 130594.0], [40.6, 130596.0], [40.7, 130597.0], [40.8, 130598.0], [40.9, 130599.0], [41.0, 130600.0], [41.1, 130601.0], [41.2, 130602.0], [41.3, 130603.0], [41.4, 130604.0], [41.5, 130606.0], [41.6, 130607.0], [41.7, 130609.0], [41.8, 130610.0], [41.9, 130612.0], [42.0, 130615.0], [42.1, 130616.0], [42.2, 130618.0], [42.3, 130620.0], [42.4, 130623.0], [42.5, 130625.0], [42.6, 130629.0], [42.7, 130630.0], [42.8, 130632.0], [42.9, 130633.0], [43.0, 130634.0], [43.1, 130638.0], [43.2, 130644.0], [43.3, 130650.0], [43.4, 130653.0], [43.5, 130655.0], [43.6, 130658.0], [43.7, 130662.0], [43.8, 130665.0], [43.9, 130667.0], [44.0, 130670.0], [44.1, 130673.0], [44.2, 130676.0], [44.3, 130679.0], [44.4, 130681.0], [44.5, 130684.0], [44.6, 130686.0], [44.7, 130688.0], [44.8, 130690.0], [44.9, 130692.0], [45.0, 130695.0], [45.1, 130698.0], [45.2, 130700.0], [45.3, 130703.0], [45.4, 130704.0], [45.5, 130705.0], [45.6, 130707.0], [45.7, 130709.0], [45.8, 130712.0], [45.9, 130715.0], [46.0, 130717.0], [46.1, 130719.0], [46.2, 130721.0], [46.3, 130723.0], [46.4, 130725.0], [46.5, 130727.0], [46.6, 130732.0], [46.7, 130734.0], [46.8, 130738.0], [46.9, 130740.0], [47.0, 130742.0], [47.1, 130746.0], [47.2, 130750.0], [47.3, 130753.0], [47.4, 130756.0], [47.5, 130759.0], [47.6, 130759.0], [47.7, 130763.0], [47.8, 130764.0], [47.9, 130768.0], [48.0, 130771.0], [48.1, 130775.0], [48.2, 130776.0], [48.3, 130778.0], [48.4, 130780.0], [48.5, 130782.0], [48.6, 130785.0], [48.7, 130788.0], [48.8, 130791.0], [48.9, 130792.0], [49.0, 130794.0], [49.1, 130796.0], [49.2, 130797.0], [49.3, 130798.0], [49.4, 130799.0], [49.5, 130801.0], [49.6, 130803.0], [49.7, 130805.0], [49.8, 130808.0], [49.9, 130810.0], [50.0, 130812.0], [50.1, 130815.0], [50.2, 130818.0], [50.3, 130821.0], [50.4, 130822.0], [50.5, 130827.0], [50.6, 130828.0], [50.7, 130830.0], [50.8, 130831.0], [50.9, 130834.0], [51.0, 130835.0], [51.1, 130838.0], [51.2, 130839.0], [51.3, 130841.0], [51.4, 130843.0], [51.5, 130844.0], [51.6, 130847.0], [51.7, 130847.0], [51.8, 130849.0], [51.9, 130850.0], [52.0, 130854.0], [52.1, 130857.0], [52.2, 130859.0], [52.3, 130860.0], [52.4, 130863.0], [52.5, 130865.0], [52.6, 130867.0], [52.7, 130868.0], [52.8, 130870.0], [52.9, 130872.0], [53.0, 130873.0], [53.1, 130875.0], [53.2, 130875.0], [53.3, 130876.0], [53.4, 130877.0], [53.5, 130878.0], [53.6, 130879.0], [53.7, 130880.0], [53.8, 130882.0], [53.9, 130883.0], [54.0, 130884.0], [54.1, 130885.0], [54.2, 130886.0], [54.3, 130888.0], [54.4, 130889.0], [54.5, 130890.0], [54.6, 130892.0], [54.7, 130893.0], [54.8, 130894.0], [54.9, 130896.0], [55.0, 130897.0], [55.1, 130899.0], [55.2, 130900.0], [55.3, 130902.0], [55.4, 130903.0], [55.5, 130903.0], [55.6, 130904.0], [55.7, 130905.0], [55.8, 130906.0], [55.9, 130908.0], [56.0, 130908.0], [56.1, 130911.0], [56.2, 130911.0], [56.3, 130913.0], [56.4, 130914.0], [56.5, 130915.0], [56.6, 130916.0], [56.7, 130917.0], [56.8, 130918.0], [56.9, 130919.0], [57.0, 130921.0], [57.1, 130921.0], [57.2, 130923.0], [57.3, 130925.0], [57.4, 130926.0], [57.5, 130929.0], [57.6, 130930.0], [57.7, 130931.0], [57.8, 130932.0], [57.9, 130933.0], [58.0, 130935.0], [58.1, 130937.0], [58.2, 130939.0], [58.3, 130941.0], [58.4, 130943.0], [58.5, 130944.0], [58.6, 130946.0], [58.7, 130947.0], [58.8, 130949.0], [58.9, 130950.0], [59.0, 130952.0], [59.1, 130953.0], [59.2, 130954.0], [59.3, 130954.0], [59.4, 130955.0], [59.5, 130956.0], [59.6, 130957.0], [59.7, 130960.0], [59.8, 130961.0], [59.9, 130963.0], [60.0, 130964.0], [60.1, 130966.0], [60.2, 130968.0], [60.3, 130972.0], [60.4, 130974.0], [60.5, 130978.0], [60.6, 130980.0], [60.7, 130982.0], [60.8, 130984.0], [60.9, 130986.0], [61.0, 130987.0], [61.1, 130989.0], [61.2, 130996.0], [61.3, 130999.0], [61.4, 131000.0], [61.5, 131004.0], [61.6, 131005.0], [61.7, 131007.0], [61.8, 131011.0], [61.9, 131012.0], [62.0, 131015.0], [62.1, 131017.0], [62.2, 131018.0], [62.3, 131024.0], [62.4, 131025.0], [62.5, 131029.0], [62.6, 131030.0], [62.7, 131031.0], [62.8, 131033.0], [62.9, 131035.0], [63.0, 131036.0], [63.1, 131041.0], [63.2, 131047.0], [63.3, 131052.0], [63.4, 131056.0], [63.5, 131065.0], [63.6, 131070.0], [63.7, 131084.0], [63.8, 131105.0], [63.9, 131112.0], [64.0, 131121.0], [64.1, 131131.0], [64.2, 131146.0], [64.3, 131157.0], [64.4, 131173.0], [64.5, 131181.0], [64.6, 131192.0], [64.7, 131203.0], [64.8, 131213.0], [64.9, 131233.0], [65.0, 131652.0], [65.1, 138587.0], [65.2, 139224.0], [65.3, 170197.0], [65.4, 170291.0], [65.5, 170329.0], [65.6, 170418.0], [65.7, 170514.0], [65.8, 170574.0], [65.9, 170626.0], [66.0, 170717.0], [66.1, 170776.0], [66.2, 170830.0], [66.3, 170886.0], [66.4, 170953.0], [66.5, 171027.0], [66.6, 171098.0], [66.7, 171167.0], [66.8, 171224.0], [66.9, 171297.0], [67.0, 171377.0], [67.1, 171437.0], [67.2, 171494.0], [67.3, 171573.0], [67.4, 171615.0], [67.5, 171683.0], [67.6, 171752.0], [67.7, 171822.0], [67.8, 171882.0], [67.9, 171936.0], [68.0, 172008.0], [68.1, 172088.0], [68.2, 172149.0], [68.3, 172221.0], [68.4, 191821.0], [68.5, 232290.0], [68.6, 309190.0], [68.7, 340787.0], [68.8, 383330.0], [68.9, 444864.0], [69.0, 484188.0], [69.1, 562187.0], [69.2, 613537.0], [69.3, 615450.0], [69.4, 615465.0], [69.5, 615484.0], [69.6, 615507.0], [69.7, 615520.0], [69.8, 615531.0], [69.9, 615554.0], [70.0, 615565.0], [70.1, 615586.0], [70.2, 615605.0], [70.3, 615624.0], [70.4, 615641.0], [70.5, 615652.0], [70.6, 615670.0], [70.7, 615690.0], [70.8, 615710.0], [70.9, 615728.0], [71.0, 615747.0], [71.1, 615761.0], [71.2, 615781.0], [71.3, 615796.0], [71.4, 615814.0], [71.5, 615827.0], [71.6, 615847.0], [71.7, 615865.0], [71.8, 615889.0], [71.9, 615903.0], [72.0, 615913.0], [72.1, 615933.0], [72.2, 615948.0], [72.3, 615973.0], [72.4, 615979.0], [72.5, 616000.0], [72.6, 616023.0], [72.7, 616029.0], [72.8, 616034.0], [72.9, 616053.0], [73.0, 616078.0], [73.1, 616106.0], [73.2, 616124.0], [73.3, 616145.0], [73.4, 616169.0], [73.5, 616183.0], [73.6, 616201.0], [73.7, 616219.0], [73.8, 616237.0], [73.9, 616251.0], [74.0, 616270.0], [74.1, 616288.0], [74.2, 616307.0], [74.3, 616324.0], [74.4, 616327.0], [74.5, 616347.0], [74.6, 616367.0], [74.7, 616392.0], [74.8, 616405.0], [74.9, 616423.0], [75.0, 616441.0], [75.1, 616459.0], [75.2, 616476.0], [75.3, 616495.0], [75.4, 616517.0], [75.5, 616535.0], [75.6, 616549.0], [75.7, 616566.0], [75.8, 616592.0], [75.9, 616605.0], [76.0, 616622.0], [76.1, 616636.0], [76.2, 616659.0], [76.3, 616675.0], [76.4, 616694.0], [76.5, 616711.0], [76.6, 616729.0], [76.7, 616746.0], [76.8, 616757.0], [76.9, 616766.0], [77.0, 616771.0], [77.1, 616780.0], [77.2, 616787.0], [77.3, 616809.0], [77.4, 616827.0], [77.5, 616850.0], [77.6, 616866.0], [77.7, 616885.0], [77.8, 616896.0], [77.9, 616909.0], [78.0, 616922.0], [78.1, 616939.0], [78.2, 616957.0], [78.3, 616972.0], [78.4, 616986.0], [78.5, 617001.0], [78.6, 617024.0], [78.7, 617031.0], [78.8, 617051.0], [78.9, 617065.0], [79.0, 617088.0], [79.1, 617099.0], [79.2, 617104.0], [79.3, 617109.0], [79.4, 617123.0], [79.5, 617147.0], [79.6, 617169.0], [79.7, 617187.0], [79.8, 617200.0], [79.9, 617213.0], [80.0, 617224.0], [80.1, 617241.0], [80.2, 617255.0], [80.3, 617282.0], [80.4, 617294.0], [80.5, 617314.0], [80.6, 617330.0], [80.7, 617341.0], [80.8, 617359.0], [80.9, 617377.0], [81.0, 617392.0], [81.1, 617411.0], [81.2, 617426.0], [81.3, 617443.0], [81.4, 617464.0], [81.5, 617482.0], [81.6, 617494.0], [81.7, 617514.0], [81.8, 617535.0], [81.9, 617554.0], [82.0, 617572.0], [82.1, 617585.0], [82.2, 617601.0], [82.3, 617617.0], [82.4, 617634.0], [82.5, 617648.0], [82.6, 617668.0], [82.7, 617689.0], [82.8, 617692.0], [82.9, 617712.0], [83.0, 617739.0], [83.1, 617748.0], [83.2, 617754.0], [83.3, 617761.0], [83.4, 617786.0], [83.5, 617794.0], [83.6, 617801.0], [83.7, 617808.0], [83.8, 617825.0], [83.9, 617847.0], [84.0, 617870.0], [84.1, 617889.0], [84.2, 617908.0], [84.3, 617924.0], [84.4, 617942.0], [84.5, 617952.0], [84.6, 617967.0], [84.7, 617988.0], [84.8, 617997.0], [84.9, 618014.0], [85.0, 618032.0], [85.1, 618060.0], [85.2, 618076.0], [85.3, 618100.0], [85.4, 618115.0], [85.5, 618133.0], [85.6, 618157.0], [85.7, 618171.0], [85.8, 618196.0], [85.9, 618217.0], [86.0, 618233.0], [86.1, 618246.0], [86.2, 618256.0], [86.3, 618261.0], [86.4, 618264.0], [86.5, 618267.0], [86.6, 618273.0], [86.7, 618279.0], [86.8, 618281.0], [86.9, 618286.0], [87.0, 618288.0], [87.1, 618302.0], [87.2, 618303.0], [87.3, 618306.0], [87.4, 618309.0], [87.5, 618313.0], [87.6, 618317.0], [87.7, 618320.0], [87.8, 618334.0], [87.9, 618336.0], [88.0, 618361.0], [88.1, 618365.0], [88.2, 618368.0], [88.3, 618378.0], [88.4, 618380.0], [88.5, 618382.0], [88.6, 618385.0], [88.7, 618391.0], [88.8, 618392.0], [88.9, 618396.0], [89.0, 618397.0], [89.1, 618427.0], [89.2, 618428.0], [89.3, 618430.0], [89.4, 618446.0], [89.5, 618448.0], [89.6, 618451.0], [89.7, 618462.0], [89.8, 618464.0], [89.9, 618475.0], [90.0, 618476.0], [90.1, 618497.0], [90.2, 618515.0], [90.3, 618517.0], [90.4, 618544.0], [90.5, 618571.0], [90.6, 618578.0], [90.7, 618580.0], [90.8, 618593.0], [90.9, 618594.0], [91.0, 618602.0], [91.1, 618628.0], [91.2, 618637.0], [91.3, 618640.0], [91.4, 618663.0], [91.5, 618674.0], [91.6, 618680.0], [91.7, 618686.0], [91.8, 618711.0], [91.9, 618742.0], [92.0, 618744.0], [92.1, 618758.0], [92.2, 618777.0], [92.3, 618803.0], [92.4, 618823.0], [92.5, 618859.0], [92.6, 618884.0], [92.7, 618904.0], [92.8, 618911.0], [92.9, 618927.0], [93.0, 618949.0], [93.1, 618953.0], [93.2, 618959.0], [93.3, 618962.0], [93.4, 618963.0], [93.5, 618969.0], [93.6, 618988.0], [93.7, 618993.0], [93.8, 619018.0], [93.9, 619025.0], [94.0, 619054.0], [94.1, 619093.0], [94.2, 619102.0], [94.3, 619113.0], [94.4, 619125.0], [94.5, 619165.0], [94.6, 619185.0], [94.7, 619206.0], [94.8, 619220.0], [94.9, 619241.0], [95.0, 619264.0], [95.1, 619298.0], [95.2, 619315.0], [95.3, 619320.0], [95.4, 619348.0], [95.5, 619359.0], [95.6, 619370.0], [95.7, 619377.0], [95.8, 619406.0], [95.9, 619420.0], [96.0, 619424.0], [96.1, 619435.0], [96.2, 619459.0], [96.3, 619482.0], [96.4, 619519.0], [96.5, 619530.0], [96.6, 619548.0], [96.7, 619551.0], [96.8, 619555.0], [96.9, 619582.0], [97.0, 619592.0], [97.1, 619626.0], [97.2, 619654.0], [97.3, 619685.0], [97.4, 619707.0], [97.5, 619738.0], [97.6, 619765.0], [97.7, 619780.0], [97.8, 619785.0], [97.9, 619787.0], [98.0, 619794.0], [98.1, 619903.0], [98.2, 619916.0], [98.3, 619959.0], [98.4, 619993.0], [98.5, 620018.0], [98.6, 620052.0], [98.7, 620081.0], [98.8, 620112.0], [98.9, 620140.0], [99.0, 620165.0], [99.1, 620180.0], [99.2, 620194.0], [99.3, 620214.0], [99.4, 620226.0], [99.5, 620240.0], [99.6, 620262.0], [99.7, 620295.0], [99.8, 620308.0], [99.9, 620337.0], [100.0, 620341.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 0.0], [94.5, 0.0], [94.6, 0.0], [94.7, 0.0], [94.8, 0.0], [94.9, 0.0], [95.0, 0.0], [95.1, 0.0], [95.2, 0.0], [95.3, 0.0], [95.4, 0.0], [95.5, 0.0], [95.6, 0.0], [95.7, 0.0], [95.8, 0.0], [95.9, 0.0], [96.0, 0.0], [96.1, 0.0], [96.2, 0.0], [96.3, 0.0], [96.4, 0.0], [96.5, 0.0], [96.6, 0.0], [96.7, 0.0], [96.8, 0.0], [96.9, 0.0], [97.0, 0.0], [97.1, 0.0], [97.2, 0.0], [97.3, 0.0], [97.4, 0.0], [97.5, 0.0], [97.6, 0.0], [97.7, 0.0], [97.8, 0.0], [97.9, 0.0], [98.0, 0.0], [98.1, 0.0], [98.2, 0.0], [98.3, 0.0], [98.4, 0.0], [98.5, 0.0], [98.6, 0.0], [98.7, 0.0], [98.8, 0.0], [98.9, 0.0], [99.0, 0.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 7.0], [99.5, 15069.0], [99.6, 16967.0], [99.7, 20608.0], [99.8, 22205.0], [99.9, 25002.0], [100.0, 27944.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 2.0], [95.7, 2.0], [95.8, 3.0], [95.9, 4.0], [96.0, 4.0], [96.1, 4.0], [96.2, 4.0], [96.3, 5.0], [96.4, 7.0], [96.5, 8.0], [96.6, 9.0], [96.7, 11.0], [96.8, 12.0], [96.9, 14.0], [97.0, 16.0], [97.1, 17.0], [97.2, 18.0], [97.3, 20.0], [97.4, 23.0], [97.5, 25.0], [97.6, 27.0], [97.7, 28.0], [97.8, 30.0], [97.9, 32.0], [98.0, 37.0], [98.1, 38.0], [98.2, 42.0], [98.3, 46.0], [98.4, 48.0], [98.5, 50.0], [98.6, 55.0], [98.7, 56.0], [98.8, 59.0], [98.9, 60.0], [99.0, 66.0], [99.1, 69.0], [99.2, 77.0], [99.3, 81.0], [99.4, 83.0], [99.5, 88.0], [99.6, 92.0], [99.7, 93.0], [99.8, 102.0], [99.9, 107.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 354048.0, "series": [{"data": [[0.0, 19.0], [172000.0, 8.0], [170400.0, 7.0], [383300.0, 3.0], [428100.0, 1.0], [618900.0, 70.0], [482500.0, 1.0], [501700.0, 1.0], [603800.0, 1.0], [616600.0, 38.0], [363200.0, 1.0], [131300.0, 1.0], [617600.0, 44.0], [311500.0, 1.0], [171300.0, 8.0], [356300.0, 1.0], [72300.0, 1.0], [619400.0, 39.0], [97900.0, 29.0], [617100.0, 45.0], [122700.0, 8.0], [130700.0, 277.0], [129100.0, 4.0], [129900.0, 245.0], [615600.0, 38.0], [165800.0, 1.0], [170600.0, 10.0], [172200.0, 6.0], [562100.0, 1.0], [619700.0, 45.0], [613300.0, 1.0], [247400.0, 1.0], [617400.0, 38.0], [373200.0, 1.0], [100.0, 17.0], [618400.0, 72.0], [171500.0, 10.0], [340700.0, 1.0], [200.0, 2.0], [616100.0, 33.0], [232300.0, 1.0], [620200.0, 34.0], [346200.0, 1.0], [97800.0, 94.0], [617900.0, 46.0], [114600.0, 7.0], [130600.0, 277.0], [129800.0, 95.0], [616400.0, 37.0], [170800.0, 11.0], [618200.0, 81.0], [408800.0, 1.0], [615900.0, 40.0], [131700.0, 1.0], [309100.0, 1.0], [619200.0, 33.0], [170100.0, 2.0], [171700.0, 9.0], [616900.0, 43.0], [582600.0, 1.0], [311400.0, 1.0], [90500.0, 1.0], [97700.0, 25.0], [541900.0, 1.0], [98500.0, 1.0], [110500.0, 4.0], [618700.0, 34.0], [107300.0, 1.0], [114500.0, 8.0], [121700.0, 1.0], [128100.0, 1.0], [130500.0, 344.0], [129700.0, 92.0], [275700.0, 1.0], [617200.0, 42.0], [171000.0, 10.0], [346100.0, 1.0], [11600.0, 3.0], [11700.0, 1.0], [191800.0, 1.0], [203000.0, 1.0], [223800.0, 1.0], [16800.0, 1.0], [619000.0, 26.0], [616700.0, 53.0], [620000.0, 23.0], [171900.0, 6.0], [170300.0, 9.0], [49200.0, 1.0], [617700.0, 47.0], [219900.0, 1.0], [58000.0, 10.0], [615400.0, 20.0], [82400.0, 1.0], [619500.0, 44.0], [114400.0, 4.0], [478200.0, 3.0], [130400.0, 390.0], [129600.0, 61.0], [131200.0, 19.0], [139200.0, 4.0], [618000.0, 28.0], [171200.0, 11.0], [615700.0, 37.0], [484100.0, 1.0], [619800.0, 3.0], [613400.0, 1.0], [617500.0, 38.0], [444800.0, 1.0], [138500.0, 3.0], [170500.0, 11.0], [172100.0, 10.0], [618500.0, 56.0], [612100.0, 1.0], [616200.0, 39.0], [98300.0, 7.0], [620300.0, 17.0], [114300.0, 12.0], [115100.0, 1.0], [497800.0, 1.0], [130300.0, 278.0], [129500.0, 84.0], [618800.0, 26.0], [171400.0, 12.0], [391700.0, 1.0], [616500.0, 35.0], [232200.0, 2.0], [614200.0, 1.0], [618300.0, 127.0], [262300.0, 1.0], [36700.0, 1.0], [149900.0, 1.0], [170700.0, 9.0], [52300.0, 1.0], [619300.0, 44.0], [62300.0, 1.0], [617000.0, 40.0], [92600.0, 1.0], [98200.0, 6.0], [113400.0, 1.0], [114200.0, 10.0], [115000.0, 4.0], [122200.0, 1.0], [129400.0, 78.0], [130200.0, 161.0], [131000.0, 157.0], [131600.0, 3.0], [150800.0, 1.0], [619600.0, 20.0], [171600.0, 10.0], [176400.0, 1.0], [617300.0, 39.0], [497700.0, 1.0], [615000.0, 1.0], [311200.0, 1.0], [619100.0, 30.0], [138900.0, 1.0], [616000.0, 38.0], [170900.0, 10.0], [620100.0, 29.0], [464300.0, 1.0], [617800.0, 38.0], [98100.0, 5.0], [615500.0, 40.0], [108500.0, 2.0], [114100.0, 9.0], [114900.0, 1.0], [122100.0, 15.0], [122900.0, 1.0], [129300.0, 131.0], [130100.0, 108.0], [130900.0, 408.0], [131800.0, 1.0], [325300.0, 1.0], [170200.0, 8.0], [171800.0, 15.0], [618100.0, 36.0], [248600.0, 1.0], [615800.0, 37.0], [26700.0, 1.0], [619900.0, 22.0], [613500.0, 3.0], [442800.0, 1.0], [131100.0, 58.0], [139100.0, 3.0], [616800.0, 38.0], [311100.0, 1.0], [42200.0, 1.0], [171100.0, 9.0], [172700.0, 2.0], [217500.0, 1.0], [58200.0, 1.0], [291000.0, 1.0], [618600.0, 51.0], [86800.0, 1.0], [98000.0, 15.0], [101200.0, 1.0], [102800.0, 1.0], [107600.0, 1.0], [616300.0, 38.0], [114000.0, 3.0], [114800.0, 6.0], [122800.0, 1.0], [122000.0, 88.0], [483000.0, 1.0], [129200.0, 45.0], [130800.0, 376.0], [130000.0, 123.0], [521400.0, 1.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[0.0, 354048.0], [100.0, 38.0], [200.0, 9.0], [300.0, 3.0], [400.0, 1.0], [500.0, 1.0], [6400.0, 11.0], [6500.0, 4.0], [6600.0, 1.0], [10100.0, 1.0], [10200.0, 4.0], [10300.0, 6.0], [10400.0, 20.0], [10500.0, 10.0], [10600.0, 4.0], [10700.0, 4.0], [10900.0, 2.0], [11000.0, 2.0], [11500.0, 1.0], [11600.0, 7.0], [11700.0, 1.0], [11800.0, 4.0], [11900.0, 3.0], [14800.0, 3.0], [15100.0, 72.0], [15200.0, 51.0], [15000.0, 47.0], [14900.0, 35.0], [15300.0, 12.0], [15500.0, 27.0], [15600.0, 32.0], [15400.0, 10.0], [15700.0, 16.0], [15800.0, 8.0], [15900.0, 14.0], [16000.0, 17.0], [16100.0, 16.0], [16300.0, 9.0], [16200.0, 9.0], [17200.0, 4.0], [16500.0, 13.0], [16600.0, 9.0], [16800.0, 5.0], [16700.0, 8.0], [16400.0, 9.0], [17300.0, 10.0], [17400.0, 6.0], [17100.0, 3.0], [16900.0, 4.0], [17000.0, 5.0], [17700.0, 3.0], [17500.0, 1.0], [17800.0, 1.0], [17600.0, 1.0], [19200.0, 1.0], [19300.0, 2.0], [19400.0, 8.0], [18500.0, 1.0], [18600.0, 1.0], [19600.0, 21.0], [19700.0, 17.0], [19500.0, 12.0], [19900.0, 34.0], [19800.0, 24.0], [20000.0, 53.0], [20100.0, 23.0], [20200.0, 40.0], [20400.0, 26.0], [20300.0, 20.0], [21300.0, 27.0], [21500.0, 36.0], [21400.0, 28.0], [21000.0, 17.0], [21200.0, 30.0], [21100.0, 34.0], [20900.0, 22.0], [20500.0, 34.0], [20700.0, 21.0], [20600.0, 36.0], [20800.0, 26.0], [22300.0, 6.0], [21600.0, 17.0], [21700.0, 12.0], [21900.0, 12.0], [21800.0, 17.0], [22000.0, 15.0], [22200.0, 13.0], [22400.0, 3.0], [22500.0, 10.0], [22100.0, 8.0], [23400.0, 10.0], [23100.0, 10.0], [23200.0, 1.0], [23500.0, 11.0], [22700.0, 5.0], [23000.0, 6.0], [22800.0, 4.0], [22900.0, 3.0], [23300.0, 3.0], [22600.0, 15.0], [23800.0, 9.0], [23700.0, 14.0], [24100.0, 25.0], [23600.0, 11.0], [23900.0, 7.0], [24000.0, 15.0], [24200.0, 8.0], [24400.0, 35.0], [24500.0, 26.0], [24300.0, 9.0], [24800.0, 22.0], [24600.0, 30.0], [24900.0, 21.0], [25000.0, 32.0], [25100.0, 31.0], [25300.0, 28.0], [24700.0, 25.0], [25200.0, 29.0], [25400.0, 22.0], [25500.0, 32.0], [25800.0, 14.0], [25600.0, 21.0], [25700.0, 14.0], [26000.0, 16.0], [25900.0, 21.0], [26100.0, 10.0], [26200.0, 12.0], [26300.0, 19.0], [26400.0, 12.0], [26600.0, 11.0], [26500.0, 9.0], [27000.0, 3.0], [26700.0, 4.0], [27100.0, 1.0], [27600.0, 2.0], [26800.0, 3.0], [27500.0, 2.0], [27300.0, 1.0], [27200.0, 2.0], [27800.0, 3.0], [27900.0, 2.0], [27700.0, 1.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[0.0, 3533.0], [100.0, 8.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 620300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3077.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 359460.0, "series": [{"data": [[0.0, 3579.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3077.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 359460.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 36.97368421052632, "minX": 1.68665913E12, "maxY": 1000.0, "series": [{"data": [[1.68665955E12, 1000.0], [1.68665972E12, 1000.0], [1.68665938E12, 1000.0], [1.68665921E12, 1000.0], [1.68665963E12, 1000.0], [1.6866598E12, 178.27755102040823], [1.68665946E12, 1000.0], [1.68665929E12, 1000.0], [1.68665939E12, 1000.0], [1.68665922E12, 1000.0], [1.68665973E12, 999.53125], [1.68665956E12, 1000.0], [1.68665947E12, 1000.0], [1.6866593E12, 1000.0], [1.68665913E12, 36.97368421052632], [1.68665964E12, 1000.0], [1.68665923E12, 1000.0], [1.68665974E12, 978.5312500000001], [1.68665957E12, 1000.0], [1.6866594E12, 1000.0], [1.68665931E12, 1000.0], [1.68665914E12, 862.2222222222224], [1.68665965E12, 1000.0], [1.68665948E12, 1000.0], [1.68665975E12, 627.0370919881301], [1.68665958E12, 1000.0], [1.68665941E12, 1000.0], [1.68665924E12, 1000.0], [1.68665915E12, 1000.0], [1.68665966E12, 1000.0], [1.68665949E12, 1000.0], [1.68665932E12, 1000.0], [1.68665959E12, 1000.0], [1.68665968E12, 1000.0], [1.68665942E12, 1000.0], [1.68665925E12, 1000.0], [1.68665967E12, 1000.0], [1.68665976E12, 277.61538461538464], [1.6866595E12, 1000.0], [1.68665933E12, 1000.0], [1.68665916E12, 1000.0], [1.68665952E12, 1000.0], [1.68665943E12, 1000.0], [1.68665926E12, 1000.0], [1.68665969E12, 1000.0], [1.6866596E12, 1000.0], [1.68665951E12, 1000.0], [1.68665934E12, 1000.0], [1.68665917E12, 1000.0], [1.68665953E12, 1000.0], [1.68665936E12, 1000.0], [1.68665927E12, 1000.0], [1.6866597E12, 1000.0], [1.68665961E12, 1000.0], [1.68665944E12, 1000.0], [1.68665935E12, 1000.0], [1.68665918E12, 1000.0], [1.68665954E12, 1000.0], [1.68665937E12, 1000.0], [1.6866592E12, 1000.0], [1.68665971E12, 1000.0], [1.68665962E12, 1000.0], [1.68665945E12, 1000.0], [1.68665928E12, 1000.0], [1.68665919E12, 1000.0], [1.68665979E12, 262.0]], "isOverall": false, "label": "192.168.122.22-Thread Group", "isController": false}, {"data": [[1.68665953E12, 1000.0], [1.68665927E12, 1000.0], [1.6866594E12, 1000.0], [1.68665963E12, 1000.0], [1.6866598E12, 197.55511811023615], [1.68665967E12, 1000.0], [1.68665976E12, 321.1], [1.6866595E12, 1000.0], [1.68665965E12, 1000.0], [1.68665978E12, 311.70000000000005], [1.68665939E12, 1000.0], [1.68665954E12, 1000.0], [1.68665937E12, 1000.0], [1.68665952E12, 1000.0], [1.68665975E12, 663.0870206489673], [1.68665926E12, 1000.0], [1.68665966E12, 1000.0], [1.68665949E12, 1000.0], [1.68665979E12, 302.0]], "isOverall": false, "label": "192.168.122.208-Thread Group", "isController": false}, {"data": [[1.68665953E12, 1000.0], [1.68665927E12, 1000.0], [1.6866594E12, 1000.0], [1.68665963E12, 1000.0], [1.6866598E12, 110.85234899328854], [1.68665967E12, 1000.0], [1.68665976E12, 270.8], [1.68665965E12, 1000.0], [1.68665978E12, 267.0], [1.68665939E12, 1000.0], [1.68665954E12, 1000.0], [1.68665952E12, 1000.0], [1.68665975E12, 640.1098901098903], [1.68665941E12, 1000.0], [1.68665928E12, 1000.0], [1.68665951E12, 1000.0], [1.68665966E12, 1000.0], [1.68665979E12, 253.0]], "isOverall": false, "label": "192.168.122.223-Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6866598E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.8294267156170623, "minX": 1.0, "maxY": 620332.2857142858, "series": [{"data": [[20.0, 49.0], [21.0, 26248.6], [24.0, 130956.0], [26.0, 21921.999999999996], [29.0, 130933.0], [32.0, 130929.0], [35.0, 150.5], [34.0, 130911.0], [37.0, 130907.0], [38.0, 150.0], [40.0, 130896.0], [42.0, 90043.0], [43.0, 68.0], [44.0, 55.333333333333336], [53.0, 130949.5], [54.0, 130909.21568627453], [138.0, 130645.53124999994], [143.0, 97926.4318181818], [142.0, 98243.0], [149.0, 125906.23076923077], [150.0, 97809.0], [148.0, 97806.0], [147.0, 97807.73333333334], [146.0, 97791.0], [144.0, 97800.5], [159.0, 97851.5], [158.0, 97848.0], [155.0, 97828.66666666666], [154.0, 97817.0], [153.0, 97815.66666666667], [152.0, 97817.0], [167.0, 97904.69696969695], [166.0, 97900.2], [165.0, 97941.0], [164.0, 97894.0], [162.0, 97849.0], [175.0, 98193.0], [174.0, 97950.0], [173.0, 97976.0], [177.0, 98127.66666666667], [176.0, 98188.0], [182.0, 97977.44444444444], [181.0, 97986.0], [180.0, 98068.0], [179.0, 98036.14285714286], [178.0, 98089.8], [188.0, 131051.16666666666], [191.0, 130491.0], [190.0, 130487.0], [198.0, 130445.0], [197.0, 130445.42857142857], [196.0, 130447.0], [195.0, 130456.0], [193.0, 130473.0], [192.0, 130471.5], [205.0, 130421.5], [204.0, 130430.55555555556], [202.0, 130444.0], [218.0, 130577.0], [231.0, 130405.26086956523], [229.0, 130414.33333333333], [238.0, 130367.0], [237.0, 130669.5], [235.0, 130633.0], [234.0, 130374.57142857142], [232.0, 130387.33333333333], [239.0, 130981.0], [247.0, 130563.0], [246.0, 130571.5], [244.0, 130700.0], [243.0, 130409.16666666666], [242.0, 130451.83333333333], [241.0, 130552.33333333333], [240.0, 130481.0], [245.0, 130907.06122448981], [253.0, 130638.6396396396], [254.0, 130509.36249999996], [252.0, 130554.5], [251.0, 130557.0], [250.0, 130561.0], [249.0, 130564.5], [270.0, 131032.66666666667], [267.0, 131009.64285714286], [262.0, 130957.70588235294], [287.0, 479289.5], [283.0, 351881.0], [280.0, 233625.33333333334], [278.0, 232283.0], [276.0, 104302.25], [272.0, 108526.5], [273.0, 58036.818181818184], [291.0, 615456.0], [303.0, 615535.0], [300.0, 615519.0], [297.0, 557967.3333333334], [296.0, 372172.4], [294.0, 615475.0], [293.0, 615467.5], [292.0, 198268.0], [290.0, 504759.75], [289.0, 49219.0], [302.0, 140778.0612244898], [301.0, 614016.25], [307.0, 615582.0], [317.0, 615652.0], [318.0, 615619.25], [316.0, 615586.3333333334], [314.0, 615591.25], [313.0, 373297.5], [312.0, 227946.30000000002], [311.0, 454053.3333333334], [310.0, 454044.6666666666], [308.0, 615591.0], [309.0, 615506.6666666666], [306.0, 615527.5], [305.0, 615532.0], [304.0, 615458.5], [333.0, 615744.0], [335.0, 615774.6666666666], [334.0, 614899.3333333334], [332.0, 614138.4], [323.0, 353111.0], [322.0, 252181.0], [321.0, 615657.0], [320.0, 615630.5], [331.0, 615741.6666666666], [330.0, 615673.0], [329.0, 568538.6], [328.0, 615716.3333333334], [327.0, 524450.75], [325.0, 569189.4], [326.0, 383330.0], [324.0, 615719.0], [349.0, 615766.6666666666], [348.0, 615776.25], [339.0, 615662.0], [338.0, 615681.6666666666], [337.0, 615703.6666666666], [343.0, 615605.6666666666], [336.0, 615550.0], [347.0, 615634.75], [346.0, 615848.0], [345.0, 615835.0], [344.0, 615699.5], [351.0, 615712.5], [350.0, 615701.0], [342.0, 615800.6666666666], [341.0, 615677.25], [340.0, 615795.5], [364.0, 615812.0], [366.0, 615834.0], [367.0, 615979.2857142857], [360.0, 615645.0], [365.0, 615905.25], [362.0, 615818.4], [363.0, 615677.0], [361.0, 615924.4], [357.0, 615940.0], [358.0, 615639.0], [356.0, 615752.0], [352.0, 615788.0], [359.0, 615907.5], [354.0, 615864.4], [355.0, 615616.0], [353.0, 615797.3333333334], [370.0, 615986.0], [382.0, 616049.4], [380.0, 616058.0], [371.0, 615933.1666666666], [381.0, 615960.6], [378.0, 615976.5], [377.0, 616129.5], [379.0, 616156.5], [376.0, 615903.0], [383.0, 616016.0], [374.0, 616027.0], [373.0, 615971.0], [372.0, 615948.0], [368.0, 615850.0], [369.0, 615730.0], [375.0, 615887.6666666666], [386.0, 615945.3333333334], [398.0, 616219.0], [396.0, 616205.0], [397.0, 615933.0], [387.0, 616107.6666666666], [394.0, 616099.0], [395.0, 616277.0], [392.0, 616128.25], [393.0, 616147.3333333334], [390.0, 616016.4], [389.0, 616212.3333333334], [388.0, 616136.0], [385.0, 616157.5], [384.0, 615971.0], [391.0, 615907.0], [403.0, 616328.0], [414.0, 616426.0], [412.0, 616179.6666666666], [413.0, 616331.0], [411.0, 616371.0], [410.0, 616247.5555555555], [407.0, 616285.2], [404.0, 616174.8], [406.0, 616199.3333333334], [405.0, 616016.0], [400.0, 616153.4166666667], [402.0, 616163.3333333334], [401.0, 615976.0], [415.0, 616080.3333333334], [429.0, 616447.25], [427.0, 616510.3333333334], [426.0, 616354.3333333334], [425.0, 616448.5], [424.0, 616276.6666666666], [430.0, 616473.5], [420.0, 616313.5], [421.0, 616401.5], [419.0, 616347.7142857143], [418.0, 616240.5], [417.0, 616457.0], [416.0, 616321.8], [423.0, 616417.0], [422.0, 616234.3333333334], [428.0, 616198.5], [434.0, 616427.0], [447.0, 616674.3333333334], [445.0, 616580.5], [444.0, 616530.8], [435.0, 616501.0], [446.0, 616340.0], [443.0, 616501.0], [442.0, 616548.6666666666], [440.0, 616590.8], [441.0, 616302.5], [438.0, 616400.3333333334], [437.0, 616532.6], [436.0, 616457.5], [433.0, 616505.25], [432.0, 616372.8333333334], [439.0, 616291.0], [462.0, 616723.3333333334], [463.0, 616656.8], [461.0, 616569.0], [460.0, 616776.0], [458.0, 616607.5], [459.0, 616450.0], [457.0, 616600.5], [456.0, 616628.3333333334], [455.0, 616620.6666666666], [449.0, 616500.5], [448.0, 616486.75], [451.0, 616558.0], [450.0, 616729.3333333334], [454.0, 616561.75], [453.0, 616711.0], [452.0, 616600.0], [467.0, 616715.75], [478.0, 616841.5], [476.0, 616724.6666666666], [477.0, 616749.75], [473.0, 616834.0], [475.0, 616896.0], [474.0, 616644.0], [472.0, 616768.75], [479.0, 616605.0], [471.0, 616773.0], [469.0, 616652.5], [468.0, 616661.0], [465.0, 616638.0], [466.0, 616809.0], [464.0, 616753.0], [493.0, 616975.5], [491.0, 616964.5], [490.0, 616843.2], [488.0, 616793.0], [489.0, 616888.3333333334], [495.0, 616812.5], [494.0, 617028.0], [487.0, 616952.8], [480.0, 616772.0], [481.0, 616628.0], [486.0, 616741.0], [485.0, 616888.0], [484.0, 616826.6666666666], [483.0, 616785.6666666666], [492.0, 616716.5], [482.0, 616903.0], [511.0, 617101.5], [508.0, 617084.6666666666], [499.0, 616985.0], [498.0, 616918.75], [497.0, 616852.0], [496.0, 616910.3333333334], [506.0, 616947.0], [507.0, 616952.3333333334], [505.0, 616971.0], [504.0, 616981.2], [503.0, 616877.0], [502.0, 617080.3333333334], [501.0, 616885.5], [500.0, 616947.0], [510.0, 616936.75], [509.0, 616804.0], [519.0, 617022.75], [541.0, 617201.0], [543.0, 617272.75], [528.0, 617181.5], [542.0, 617285.0], [539.0, 617190.0], [540.0, 617262.5], [538.0, 617214.25], [537.0, 617174.75], [536.0, 617238.0], [518.0, 617151.0], [517.0, 617066.6666666666], [514.0, 617074.4], [512.0, 616833.0], [515.0, 616978.3333333334], [516.0, 617100.0], [527.0, 617248.0], [526.0, 617133.3333333334], [525.0, 617031.0], [524.0, 617229.5], [523.0, 616920.0], [522.0, 617101.4], [521.0, 617061.0], [520.0, 617052.5], [535.0, 617125.6666666666], [534.0, 617304.3333333334], [531.0, 617092.2857142857], [532.0, 617096.0], [533.0, 617215.0], [530.0, 617174.4], [568.0, 617345.3333333334], [573.0, 617526.0], [574.0, 617405.8571428572], [575.0, 617290.0], [561.0, 617265.75], [560.0, 617514.0], [572.0, 617545.3333333334], [570.0, 617331.0], [569.0, 617472.8888888889], [562.0, 617388.25], [571.0, 617594.5], [559.0, 617429.3333333334], [545.0, 617227.3333333334], [544.0, 617065.0], [558.0, 617153.3333333334], [547.0, 617288.5], [549.0, 617220.5], [548.0, 617216.5], [551.0, 617227.0], [550.0, 617224.5], [546.0, 617268.4], [557.0, 617455.375], [553.0, 617425.0], [552.0, 617357.0], [555.0, 617134.0], [554.0, 617238.75], [567.0, 617563.0], [566.0, 617324.3333333334], [563.0, 617369.0], [564.0, 617204.0], [601.0, 617740.0], [605.0, 617674.0], [603.0, 617612.0], [607.0, 617816.5], [602.0, 617781.6666666666], [600.0, 617533.8333333333], [583.0, 617579.0], [582.0, 617501.8], [580.0, 617495.0], [579.0, 617316.0], [578.0, 617429.6666666666], [577.0, 617601.5], [591.0, 617523.6666666666], [576.0, 617633.0], [590.0, 617565.8], [588.0, 617703.0], [589.0, 617559.0], [587.0, 617631.0], [585.0, 617655.5], [586.0, 617570.8], [584.0, 617561.0], [604.0, 617510.0], [606.0, 617761.0], [599.0, 617755.75], [597.0, 617702.25], [594.0, 617715.0], [596.0, 617764.5], [593.0, 617707.0], [592.0, 617705.5], [636.0, 617745.0], [624.0, 617967.0], [639.0, 617985.0], [638.0, 617876.0], [637.0, 617924.0], [635.0, 617755.0], [634.0, 617854.0], [633.0, 617703.8461538461], [615.0, 617593.0], [614.0, 617807.0], [632.0, 617951.0], [613.0, 617789.0], [611.0, 617703.625], [612.0, 617687.0], [608.0, 617797.5], [623.0, 617875.0], [609.0, 617656.25], [610.0, 617792.0], [629.0, 617998.0], [631.0, 617943.0], [630.0, 617933.5], [628.0, 617955.7142857143], [625.0, 617926.75], [621.0, 617830.2], [620.0, 617804.3333333334], [619.0, 617773.0], [618.0, 617922.0], [617.0, 617848.8], [616.0, 617604.0], [664.0, 618114.4666666667], [669.0, 618112.5], [671.0, 618173.6666666666], [668.0, 618228.5555555555], [667.0, 618145.0], [665.0, 618214.5], [652.0, 618213.0], [653.0, 617815.6666666666], [654.0, 618043.5], [640.0, 618034.8181818181], [641.0, 617776.0], [643.0, 617792.0], [642.0, 617786.0], [645.0, 617800.0], [644.0, 617801.0], [655.0, 617931.0], [651.0, 618149.1111111111], [650.0, 618171.0], [649.0, 617801.0], [670.0, 618095.0], [661.0, 618093.0], [663.0, 617974.0], [662.0, 618040.0], [660.0, 618109.25], [659.0, 618055.3333333334], [658.0, 617981.5], [656.0, 617885.2], [702.0, 618348.75], [692.0, 618283.5], [700.0, 618296.4400000001], [703.0, 618261.0], [689.0, 618370.5], [696.0, 618275.0], [687.0, 618350.25], [686.0, 618284.5], [674.0, 618285.0], [675.0, 618267.0], [673.0, 618275.0], [677.0, 618081.7142857143], [676.0, 618292.0], [679.0, 618275.6], [678.0, 618313.0], [683.0, 618152.8333333333], [681.0, 618276.4], [682.0, 618013.0], [680.0, 618174.5], [695.0, 618294.0], [694.0, 618380.0], [693.0, 618168.5], [691.0, 618389.0], [690.0, 618243.6666666666], [731.0, 618382.0], [734.0, 618506.0], [733.0, 618405.0], [730.0, 618513.0], [729.0, 618472.3333333334], [711.0, 618308.0], [728.0, 618632.0], [710.0, 618308.0], [709.0, 618293.3333333334], [708.0, 618442.25], [706.0, 618276.0], [705.0, 618272.5], [725.0, 618438.3333333334], [727.0, 618507.5], [724.0, 618363.25], [719.0, 618334.0], [717.0, 618310.6666666666], [716.0, 618473.6666666666], [715.0, 618324.0], [714.0, 618475.2], [713.0, 618339.7222222222], [712.0, 618310.0], [735.0, 618475.6666666666], [720.0, 618525.2], [722.0, 618514.0], [723.0, 618594.0], [721.0, 618368.0], [761.0, 618409.5555555555], [766.0, 618700.4545454547], [762.0, 618848.75], [763.0, 618511.0], [753.0, 618628.4], [752.0, 618576.0], [755.0, 618593.0], [754.0, 618583.5], [759.0, 618610.0], [756.0, 618594.0], [767.0, 618675.0], [751.0, 618448.7142857143], [747.0, 618474.5000000001], [746.0, 618481.5], [748.0, 618684.3333333334], [750.0, 618783.0], [749.0, 618767.0], [743.0, 618525.8999999999], [760.0, 618627.0], [738.0, 618484.2857142858], [737.0, 618377.0], [740.0, 618451.0], [794.0, 619118.75], [790.0, 619099.5], [788.0, 618420.6], [787.0, 618414.0], [786.0, 619071.5], [784.0, 618985.2000000001], [776.0, 618813.375], [777.0, 618396.0], [773.0, 618960.5], [772.0, 618388.0], [792.0, 618429.25], [775.0, 618711.0], [793.0, 618839.4444444445], [774.0, 618392.0], [771.0, 618551.4285714285], [769.0, 618938.0], [770.0, 618677.0], [782.0, 618765.8333333334], [779.0, 618394.0], [797.0, 618448.0], [799.0, 618884.0], [825.0, 618961.8333333334], [819.0, 618963.0833333334], [807.0, 618959.0], [806.0, 619156.25], [802.0, 618994.3333333334], [803.0, 619119.4285714285], [800.0, 618906.25], [809.0, 619244.3333333334], [830.0, 619410.6], [829.0, 619373.5], [823.0, 619364.6666666666], [820.0, 619300.6363636364], [838.0, 618984.7142857142], [862.0, 619312.3846153845], [861.0, 619366.3333333334], [859.0, 618593.25], [839.0, 618448.5], [854.0, 619355.0], [855.0, 618996.6], [853.0, 619321.8461538462], [852.0, 618915.5], [850.0, 619580.3333333334], [863.0, 618606.0], [848.0, 618579.6], [841.0, 619103.8], [840.0, 618455.5], [843.0, 618497.2173913043], [842.0, 618453.875], [845.0, 619548.0], [844.0, 619533.3333333334], [832.0, 619161.0], [833.0, 618466.0], [847.0, 619559.0], [837.0, 619193.0], [836.0, 618684.0], [835.0, 618904.0], [834.0, 619188.5], [870.0, 619752.0], [894.0, 619930.1428571428], [892.0, 619898.0], [871.0, 619487.0], [893.0, 619650.5], [886.0, 619789.0], [887.0, 619319.1666666666], [884.0, 619787.25], [880.0, 619781.4285714286], [883.0, 618980.0], [882.0, 619573.6666666666], [881.0, 618679.5], [895.0, 619680.5], [873.0, 619122.2857142857], [878.0, 619552.0], [877.0, 619517.8333333334], [864.0, 619689.75], [865.0, 618898.3333333334], [879.0, 619561.0], [869.0, 619250.0], [867.0, 619417.0], [866.0, 619713.0], [922.0, 620130.1666666666], [925.0, 620010.3333333334], [927.0, 619988.0], [913.0, 619213.8], [926.0, 620228.0], [923.0, 619898.0], [924.0, 620188.0], [919.0, 619675.1666666666], [917.0, 620147.6666666666], [914.0, 619996.0], [911.0, 619783.5], [900.0, 619779.25], [899.0, 619223.6923076923], [902.0, 619745.0], [920.0, 619011.0], [903.0, 618914.0], [901.0, 619525.5], [909.0, 619511.3333333334], [907.0, 619766.0], [905.0, 618916.1], [908.0, 619752.7272727273], [933.0, 619406.1500000001], [945.0, 619719.2857142857], [953.0, 620172.6666666666], [934.0, 619348.0], [950.0, 620150.6], [941.0, 620054.3750000001], [939.0, 619234.5], [930.0, 619982.3333333334], [932.0, 618991.0], [931.0, 618992.0], [928.0, 619636.5], [946.0, 619274.75], [944.0, 619141.6666666666], [963.0, 620214.6666666666], [987.0, 603812.0], [986.0, 620332.2857142858], [979.0, 620316.5], [971.0, 620229.0], [968.0, 620223.8], [960.0, 620199.1428571428], [973.0, 619469.5], [984.0, 619511.3333333334], [967.0, 619407.4], [966.0, 619259.2857142857], [965.0, 619101.5], [978.0, 619432.0], [976.0, 619362.3333333334], [1000.0, 136782.63711911396], [994.0, 620284.75], [1.0, 144611.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[774.6842990368453, 281636.30973857176]], "isOverall": false, "label": "Bind-Aggregated", "isController": false}, {"data": [[684.0, 6438.666666666667], [685.0, 6451.5], [686.0, 6460.5], [688.0, 6483.0], [689.0, 6489.0], [697.0, 6524.0], [698.0, 6583.0], [699.0, 6585.0], [700.0, 6559.0], [705.0, 6604.0], [956.0, 25768.0], [959.0, 25788.0], [945.0, 27238.0], [944.0, 25802.0], [947.0, 27505.0], [946.0, 26308.0], [949.0, 25891.0], [948.0, 27365.0], [958.0, 25608.0], [957.0, 25652.0], [955.0, 25992.0], [954.0, 25972.0], [953.0, 25880.0], [952.0, 25921.0], [943.0, 26813.0], [933.0, 25885.0], [935.0, 26254.0], [934.0, 26119.0], [942.0, 25674.0], [941.0, 25734.0], [940.0, 25927.0], [939.0, 26095.0], [938.0, 25961.0], [937.0, 25890.0], [936.0, 25970.0], [951.0, 26274.0], [950.0, 26118.0], [985.0, 26390.0], [990.0, 26104.0], [991.0, 26106.0], [977.0, 27026.0], [976.0, 26330.0], [979.0, 26462.0], [978.0, 26723.0], [981.0, 26377.0], [980.0, 27678.0], [989.0, 26344.0], [988.0, 26514.0], [987.0, 26194.0], [984.0, 26309.0], [967.0, 26645.0], [966.0, 26834.0], [965.0, 26608.0], [964.0, 27886.0], [963.0, 27944.0], [962.0, 26793.0], [961.0, 27509.0], [960.0, 26884.0], [975.0, 26137.0], [974.0, 26265.0], [973.0, 26217.0], [972.0, 26316.0], [971.0, 26580.0], [970.0, 26318.0], [969.0, 26500.0], [968.0, 26603.0], [983.0, 26666.0], [982.0, 26281.0], [1000.0, 105.62887252519603], [999.0, 26307.0], [998.0, 26385.0], [997.0, 27693.0], [996.0, 26404.0], [995.0, 26613.0], [994.0, 27046.0], [993.0, 26300.0], [992.0, 26118.0], [286.0, 26535.0], [287.0, 27924.0], [285.0, 25715.0], [284.0, 26726.0], [283.0, 27295.0], [282.0, 25640.0], [281.0, 25512.0], [280.0, 25597.0], [279.0, 25650.0], [275.0, 25036.0], [274.0, 24911.0], [278.0, 25147.0], [277.0, 25445.0], [276.0, 25156.0], [288.0, 27763.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[999.9494177522322, 111.88526657566734]], "isOverall": false, "label": "Search-Aggregated", "isController": false}, {"data": [[1000.0, 1.8294267156170623]], "isOverall": false, "label": "Unbind", "isController": false}, {"data": [[1000.0, 1.8294267156170623]], "isOverall": false, "label": "Unbind-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68665913E12, "maxY": 2077117.2, "series": [{"data": [[1.68665955E12, 1178.7], [1.68665972E12, 1054.2], [1.68665938E12, 1166.2], [1.68665921E12, 1091.5], [1.68665963E12, 52564.7], [1.6866598E12, 20346.0], [1.68665946E12, 1164.9], [1.68665929E12, 1182.3], [1.68665939E12, 81823.8], [1.68665922E12, 1070.0], [1.68665973E12, 1182.7], [1.68665956E12, 1166.8], [1.68665947E12, 1166.2], [1.6866593E12, 1201.6], [1.68665913E12, 839.8], [1.68665964E12, 1179.0], [1.68665923E12, 1127.0], [1.68665974E12, 1164.3], [1.68665957E12, 707910.7], [1.6866594E12, 1503233.6], [1.68665931E12, 737654.7], [1.68665914E12, 1269.2], [1.68665965E12, 107554.1], [1.68665948E12, 1178.4], [1.68665975E12, 58674.3], [1.68665958E12, 12130.9], [1.68665941E12, 899374.9], [1.68665924E12, 1093.2], [1.68665915E12, 1203.4], [1.68665966E12, 1360667.9], [1.68665949E12, 34084.9], [1.68665932E12, 1128.5], [1.68665959E12, 1179.9], [1.68665968E12, 1181.6], [1.68665942E12, 1202.7], [1.68665925E12, 1202.2], [1.68665967E12, 972123.8], [1.68665976E12, 1452.0], [1.6866595E12, 4768.5], [1.68665933E12, 1179.7], [1.68665916E12, 1202.9], [1.68665952E12, 78221.9], [1.68665943E12, 1179.3], [1.68665926E12, 92854.8], [1.68665969E12, 1201.3], [1.6866596E12, 1203.2], [1.68665951E12, 4777.4], [1.68665934E12, 1129.8], [1.68665917E12, 1224.6], [1.68665953E12, 1688061.9], [1.68665936E12, 1129.4], [1.68665927E12, 2077117.2], [1.6866597E12, 181527.1], [1.68665961E12, 1179.6], [1.68665944E12, 733782.6], [1.68665935E12, 1090.5], [1.68665918E12, 1164.8], [1.68665978E12, 848.2], [1.68665954E12, 701149.3], [1.68665937E12, 48572.7], [1.6866592E12, 1128.7], [1.68665971E12, 531784.5], [1.68665962E12, 1164.1], [1.68665945E12, 1180.3], [1.68665928E12, 387314.7], [1.68665919E12, 1129.2], [1.68665979E12, 5985.2]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68665955E12, 0.0], [1.68665972E12, 0.0], [1.68665938E12, 0.0], [1.68665921E12, 0.0], [1.68665963E12, 0.0], [1.6866598E12, 0.0], [1.68665946E12, 0.0], [1.68665929E12, 0.0], [1.68665939E12, 0.0], [1.68665922E12, 0.0], [1.68665973E12, 0.0], [1.68665956E12, 0.0], [1.68665947E12, 0.0], [1.6866593E12, 0.0], [1.68665913E12, 0.0], [1.68665964E12, 0.0], [1.68665923E12, 0.0], [1.68665974E12, 0.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 0.0], [1.68665965E12, 0.0], [1.68665948E12, 0.0], [1.68665975E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 0.0], [1.68665915E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 0.0], [1.68665959E12, 0.0], [1.68665968E12, 0.0], [1.68665942E12, 0.0], [1.68665925E12, 0.0], [1.68665967E12, 0.0], [1.68665976E12, 0.0], [1.6866595E12, 0.0], [1.68665933E12, 0.0], [1.68665916E12, 0.0], [1.68665952E12, 0.0], [1.68665943E12, 0.0], [1.68665926E12, 0.0], [1.68665969E12, 0.0], [1.6866596E12, 0.0], [1.68665951E12, 0.0], [1.68665934E12, 0.0], [1.68665917E12, 0.0], [1.68665953E12, 0.0], [1.68665936E12, 0.0], [1.68665927E12, 0.0], [1.6866597E12, 0.0], [1.68665961E12, 0.0], [1.68665944E12, 0.0], [1.68665935E12, 0.0], [1.68665918E12, 0.0], [1.68665978E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 0.0], [1.68665971E12, 0.0], [1.68665962E12, 0.0], [1.68665945E12, 0.0], [1.68665928E12, 0.0], [1.68665919E12, 0.0], [1.68665979E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6866598E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665913E12, "maxY": 613045.433170732, "series": [{"data": [[1.68665972E12, 582681.0], [1.68665938E12, 247411.0], [1.68665921E12, 82499.0], [1.68665963E12, 150271.6], [1.6866598E12, 121513.11265432088], [1.68665946E12, 325329.0], [1.68665939E12, 128198.56521739131], [1.68665956E12, 428168.0], [1.68665947E12, 340787.0], [1.6866593E12, 165824.0], [1.68665913E12, 103.68421052631578], [1.68665923E12, 92602.0], [1.68665974E12, 603812.0], [1.68665957E12, 129512.40932642487], [1.6866594E12, 130317.33658536577], [1.68665931E12, 171261.21782178222], [1.68665914E12, 11676.5], [1.68665965E12, 136376.56666666668], [1.68665975E12, 613045.433170732], [1.68665958E12, 215137.5], [1.68665941E12, 130941.67886178859], [1.68665924E12, 102878.0], [1.68665915E12, 16889.0], [1.68665966E12, 130570.60916442046], [1.68665949E12, 146144.3], [1.68665932E12, 191821.0], [1.68665942E12, 291048.0], [1.68665925E12, 113423.0], [1.68665967E12, 132535.18045112788], [1.68665976E12, 98418.19230769231], [1.6866595E12, 130940.0], [1.68665916E12, 26766.0], [1.68665952E12, 141758.5], [1.68665926E12, 114735.07692307692], [1.68665969E12, 562187.0], [1.6866596E12, 464343.0], [1.68665951E12, 243913.5], [1.68665934E12, 203037.0], [1.68665917E12, 39483.0], [1.68665953E12, 128536.25162689804], [1.68665936E12, 232327.0], [1.68665927E12, 130362.20950965813], [1.6866597E12, 130341.90721649489], [1.68665944E12, 130841.0696517413], [1.68665935E12, 217524.0], [1.68665918E12, 52326.0], [1.68665978E12, 131016.91666666667], [1.68665954E12, 131934.79687500003], [1.68665937E12, 114376.84615384614], [1.6866592E12, 72387.0], [1.68665962E12, 484188.0], [1.68665928E12, 150824.0], [1.68665919E12, 62342.0], [1.68665979E12, 130742.22485207103]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.68665955E12, 23515.093749999996], [1.68665972E12, 26108.250000000007], [1.68665938E12, 19352.387096774193], [1.68665921E12, 15000.965517241379], [1.68665963E12, 542.4364525139665], [1.68665946E12, 21433.258064516132], [1.68665929E12, 18431.25], [1.68665939E12, 282.8306451612903], [1.68665922E12, 15366.34482758621], [1.68665973E12, 26577.968750000004], [1.68665956E12, 23183.387096774193], [1.68665947E12, 21454.354838709674], [1.6866593E12, 17772.40625], [1.68665964E12, 24456.28125], [1.68665923E12, 15691.166666666666], [1.68665974E12, 26574.87096774194], [1.68665957E12, 38.622594661701086], [1.6866594E12, 15.125587970071212], [1.68665931E12, 27.283060109289696], [1.68665914E12, 9122.15625], [1.68665965E12, 268.8008185538881], [1.68665948E12, 21575.156250000004], [1.68665975E12, 26219.666666666668], [1.68665958E12, 2266.1144578313256], [1.68665941E12, 27.6269770096201], [1.68665924E12, 15780.517241379308], [1.68665915E12, 12454.15625], [1.68665966E12, 20.22216536493399], [1.68665949E12, 747.0193133047221], [1.68665932E12, 18823.099999999995], [1.68665959E12, 23802.46875], [1.68665968E12, 25656.562499999996], [1.68665942E12, 21465.6875], [1.68665925E12, 16477.937499999996], [1.68665967E12, 27.922952240943886], [1.68665976E12, 26003.466666666667], [1.6866595E12, 5107.715384615384], [1.68665933E12, 18738.781249999996], [1.68665916E12, 13425.9375], [1.68665952E12, 335.35694183864933], [1.68665943E12, 20596.187499999993], [1.68665926E12, 210.61650868878365], [1.68665969E12, 25393.531250000007], [1.6866596E12, 23800.875000000007], [1.68665951E12, 5138.669230769231], [1.68665934E12, 18617.36666666667], [1.68665917E12, 13731.218750000005], [1.68665953E12, 12.295284552845473], [1.68665936E12, 18958.466666666664], [1.68665927E12, 9.803663120004236], [1.6866597E12, 156.05782734407262], [1.68665961E12, 23941.34375], [1.68665944E12, 33.09889177316278], [1.68665935E12, 18643.448275862065], [1.68665918E12, 14161.870967741932], [1.68665954E12, 36.359644537375836], [1.68665937E12, 416.306245297216], [1.6866592E12, 14718.3], [1.68665971E12, 52.45998084553291], [1.68665962E12, 24116.38709677419], [1.68665945E12, 21348.468749999996], [1.68665928E12, 56.93909923519972], [1.68665919E12, 14714.800000000001]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665953E12, 0.691973969631236], [1.68665927E12, 0.8133640552995393], [1.68665957E12, 0.06217616580310882], [1.6866597E12, 1.0], [1.6866594E12, 9.670731707317078], [1.68665931E12, 0.27363184079601993], [1.68665963E12, 0.0], [1.68665944E12, 1.3499999999999994], [1.68665967E12, 0.2716981132075471], [1.6866595E12, 0.0], [1.68665965E12, 0.17241379310344826], [1.68665939E12, 0.04545454545454546], [1.68665954E12, 3.6439790575916233], [1.68665937E12, 0.15384615384615383], [1.68665952E12, 0.09523809523809523], [1.68665926E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.608163265306122], [1.68665971E12, 0.09326424870466321], [1.68665928E12, 1.7478991596638653], [1.68665951E12, 0.0], [1.68665966E12, 0.380053908355795], [1.68665949E12, 0.11111111111111113]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6866598E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665913E12, "maxY": 4.9E-324, "series": [{"data": [[1.68665972E12, 0.0], [1.68665938E12, 0.0], [1.68665921E12, 0.0], [1.68665963E12, 0.0], [1.6866598E12, 0.0], [1.68665946E12, 0.0], [1.68665939E12, 0.0], [1.68665956E12, 0.0], [1.68665947E12, 0.0], [1.6866593E12, 0.0], [1.68665913E12, 0.0], [1.68665923E12, 0.0], [1.68665974E12, 0.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 0.0], [1.68665965E12, 0.0], [1.68665975E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 0.0], [1.68665915E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 0.0], [1.68665942E12, 0.0], [1.68665925E12, 0.0], [1.68665967E12, 0.0], [1.68665976E12, 0.0], [1.6866595E12, 0.0], [1.68665916E12, 0.0], [1.68665952E12, 0.0], [1.68665926E12, 0.0], [1.68665969E12, 0.0], [1.6866596E12, 0.0], [1.68665951E12, 0.0], [1.68665934E12, 0.0], [1.68665917E12, 0.0], [1.68665953E12, 0.0], [1.68665936E12, 0.0], [1.68665927E12, 0.0], [1.6866597E12, 0.0], [1.68665944E12, 0.0], [1.68665935E12, 0.0], [1.68665918E12, 0.0], [1.68665978E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 0.0], [1.68665962E12, 0.0], [1.68665928E12, 0.0], [1.68665919E12, 0.0], [1.68665979E12, 0.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.68665955E12, 0.0], [1.68665972E12, 0.0], [1.68665938E12, 0.0], [1.68665921E12, 0.0], [1.68665963E12, 0.0], [1.68665946E12, 0.0], [1.68665929E12, 0.0], [1.68665939E12, 0.0], [1.68665922E12, 0.0], [1.68665973E12, 0.0], [1.68665956E12, 0.0], [1.68665947E12, 0.0], [1.6866593E12, 0.0], [1.68665964E12, 0.0], [1.68665923E12, 0.0], [1.68665974E12, 0.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 0.0], [1.68665965E12, 0.0], [1.68665948E12, 0.0], [1.68665975E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 0.0], [1.68665915E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 0.0], [1.68665959E12, 0.0], [1.68665968E12, 0.0], [1.68665942E12, 0.0], [1.68665925E12, 0.0], [1.68665967E12, 0.0], [1.68665976E12, 0.0], [1.6866595E12, 0.0], [1.68665933E12, 0.0], [1.68665916E12, 0.0], [1.68665952E12, 0.0], [1.68665943E12, 0.0], [1.68665926E12, 0.0], [1.68665969E12, 0.0], [1.6866596E12, 0.0], [1.68665951E12, 0.0], [1.68665934E12, 0.0], [1.68665917E12, 0.0], [1.68665953E12, 0.0], [1.68665936E12, 0.0], [1.68665927E12, 0.0], [1.6866597E12, 0.0], [1.68665961E12, 0.0], [1.68665944E12, 0.0], [1.68665935E12, 0.0], [1.68665918E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 0.0], [1.68665971E12, 0.0], [1.68665962E12, 0.0], [1.68665945E12, 0.0], [1.68665928E12, 0.0], [1.68665919E12, 0.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665953E12, 0.0], [1.68665927E12, 0.0], [1.68665957E12, 0.0], [1.6866597E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665963E12, 0.0], [1.68665944E12, 0.0], [1.68665967E12, 0.0], [1.6866595E12, 0.0], [1.68665965E12, 0.0], [1.68665939E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.68665952E12, 0.0], [1.68665926E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665971E12, 0.0], [1.68665928E12, 0.0], [1.68665951E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6866598E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665913E12, "maxY": 4.9E-324, "series": [{"data": [[1.68665972E12, 0.0], [1.68665938E12, 0.0], [1.68665921E12, 0.0], [1.68665963E12, 0.0], [1.6866598E12, 0.0], [1.68665946E12, 0.0], [1.68665939E12, 0.0], [1.68665956E12, 0.0], [1.68665947E12, 0.0], [1.6866593E12, 0.0], [1.68665913E12, 0.0], [1.68665923E12, 0.0], [1.68665974E12, 0.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 0.0], [1.68665965E12, 0.0], [1.68665975E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 0.0], [1.68665915E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 0.0], [1.68665942E12, 0.0], [1.68665925E12, 0.0], [1.68665967E12, 0.0], [1.68665976E12, 0.0], [1.6866595E12, 0.0], [1.68665916E12, 0.0], [1.68665952E12, 0.0], [1.68665926E12, 0.0], [1.68665969E12, 0.0], [1.6866596E12, 0.0], [1.68665951E12, 0.0], [1.68665934E12, 0.0], [1.68665917E12, 0.0], [1.68665953E12, 0.0], [1.68665936E12, 0.0], [1.68665927E12, 0.0], [1.6866597E12, 0.0], [1.68665944E12, 0.0], [1.68665935E12, 0.0], [1.68665918E12, 0.0], [1.68665978E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 0.0], [1.68665962E12, 0.0], [1.68665928E12, 0.0], [1.68665919E12, 0.0], [1.68665979E12, 0.0]], "isOverall": false, "label": "Bind", "isController": false}, {"data": [[1.68665955E12, 0.0], [1.68665972E12, 0.0], [1.68665938E12, 0.0], [1.68665921E12, 0.0], [1.68665963E12, 0.0], [1.68665946E12, 0.0], [1.68665929E12, 0.0], [1.68665939E12, 0.0], [1.68665922E12, 0.0], [1.68665973E12, 0.0], [1.68665956E12, 0.0], [1.68665947E12, 0.0], [1.6866593E12, 0.0], [1.68665964E12, 0.0], [1.68665923E12, 0.0], [1.68665974E12, 0.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 0.0], [1.68665965E12, 0.0], [1.68665948E12, 0.0], [1.68665975E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 0.0], [1.68665915E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 0.0], [1.68665959E12, 0.0], [1.68665968E12, 0.0], [1.68665942E12, 0.0], [1.68665925E12, 0.0], [1.68665967E12, 0.0], [1.68665976E12, 0.0], [1.6866595E12, 0.0], [1.68665933E12, 0.0], [1.68665916E12, 0.0], [1.68665952E12, 0.0], [1.68665943E12, 0.0], [1.68665926E12, 0.0], [1.68665969E12, 0.0], [1.6866596E12, 0.0], [1.68665951E12, 0.0], [1.68665934E12, 0.0], [1.68665917E12, 0.0], [1.68665953E12, 0.0], [1.68665936E12, 0.0], [1.68665927E12, 0.0], [1.6866597E12, 0.0], [1.68665961E12, 0.0], [1.68665944E12, 0.0], [1.68665935E12, 0.0], [1.68665918E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 0.0], [1.68665971E12, 0.0], [1.68665962E12, 0.0], [1.68665945E12, 0.0], [1.68665928E12, 0.0], [1.68665919E12, 0.0]], "isOverall": false, "label": "Search", "isController": false}, {"data": [[1.68665953E12, 0.0], [1.68665927E12, 0.0], [1.68665957E12, 0.0], [1.6866597E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665963E12, 0.0], [1.68665944E12, 0.0], [1.68665967E12, 0.0], [1.6866595E12, 0.0], [1.68665965E12, 0.0], [1.68665939E12, 0.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.68665952E12, 0.0], [1.68665926E12, 0.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665971E12, 0.0], [1.68665928E12, 0.0], [1.68665951E12, 0.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0]], "isOverall": false, "label": "Unbind", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6866598E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68665913E12, "maxY": 620341.0, "series": [{"data": [[1.68665955E12, 25374.0], [1.68665972E12, 582681.0], [1.68665938E12, 247411.0], [1.68665921E12, 82499.0], [1.68665963E12, 501744.0], [1.6866598E12, 149982.0], [1.68665946E12, 325329.0], [1.68665929E12, 21741.0], [1.68665939E12, 262322.0], [1.68665922E12, 19265.0], [1.68665973E12, 27867.0], [1.68665956E12, 428168.0], [1.68665947E12, 340787.0], [1.6866593E12, 165824.0], [1.68665913E12, 204.0], [1.68665964E12, 25419.0], [1.68665923E12, 92602.0], [1.68665974E12, 603812.0], [1.68665957E12, 25054.0], [1.6866594E12, 20531.0], [1.68665931E12, 176480.0], [1.68665914E12, 11967.0], [1.68665965E12, 521454.0], [1.68665948E12, 24182.0], [1.68665975E12, 620341.0], [1.68665958E12, 444864.0], [1.68665941E12, 275789.0], [1.68665924E12, 102878.0], [1.68665915E12, 16889.0], [1.68665966E12, 25730.0], [1.68665949E12, 356350.0], [1.68665932E12, 191821.0], [1.68665959E12, 25315.0], [1.68665968E12, 26031.0], [1.68665942E12, 291048.0], [1.68665925E12, 113423.0], [1.68665967E12, 541909.0], [1.68665976E12, 27924.0], [1.6866595E12, 24484.0], [1.68665933E12, 20562.0], [1.68665916E12, 26766.0], [1.68665952E12, 391727.0], [1.68665943E12, 23173.0], [1.68665926E12, 128111.0], [1.68665969E12, 562187.0], [1.6866596E12, 464343.0], [1.68665951E12, 373235.0], [1.68665934E12, 203037.0], [1.68665917E12, 42225.0], [1.68665953E12, 24853.0], [1.68665936E12, 232327.0], [1.68665927E12, 138932.0], [1.6866597E12, 25486.0], [1.68665961E12, 25066.0], [1.68665944E12, 309190.0], [1.68665935E12, 217524.0], [1.68665918E12, 52326.0], [1.68665954E12, 408830.0], [1.68665937E12, 20122.0], [1.6866592E12, 72387.0], [1.68665971E12, 25715.0], [1.68665962E12, 484188.0], [1.68665945E12, 23869.0], [1.68665928E12, 150824.0], [1.68665919E12, 62342.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68665955E12, 25170.4], [1.68665972E12, 26675.0], [1.68665938E12, 20191.8], [1.68665921E12, 15244.0], [1.68665963E12, 25173.0], [1.6866598E12, 98180.2], [1.68665946E12, 23790.8], [1.68665929E12, 21575.7], [1.68665939E12, 20272.8], [1.68665922E12, 15301.0], [1.68665973E12, 27105.7], [1.68665956E12, 25160.0], [1.68665947E12, 23908.4], [1.6866593E12, 20160.2], [1.68665913E12, 165.20000000000002], [1.68665964E12, 25332.8], [1.68665923E12, 19329.2], [1.68665974E12, 27823.6], [1.68665957E12, 22056.800000000003], [1.6866594E12, 87.80000000000001], [1.68665931E12, 16137.7], [1.68665914E12, 11890.4], [1.68665965E12, 25283.8], [1.68665948E12, 23911.1], [1.68665975E12, 620033.9], [1.68665958E12, 25141.9], [1.68665941E12, 21133.2], [1.68665924E12, 19196.000000000007], [1.68665915E12, 16605.4], [1.68665966E12, 1.0], [1.68665949E12, 24005.3], [1.68665932E12, 20717.6], [1.68665959E12, 25181.2], [1.68665968E12, 26019.1], [1.68665942E12, 21637.4], [1.68665925E12, 19907.6], [1.68665967E12, 24061.80000000001], [1.68665976E12, 27827.4], [1.6866595E12, 24201.6], [1.68665933E12, 20527.8], [1.68665916E12, 15049.2], [1.68665952E12, 24255.0], [1.68665943E12, 20696.8], [1.68665926E12, 19769.6], [1.68665969E12, 25880.2], [1.6866596E12, 25097.0], [1.68665951E12, 24436.3], [1.68665934E12, 20067.0], [1.68665917E12, 15067.5], [1.68665953E12, 1.0], [1.68665936E12, 20092.4], [1.68665927E12, 1.3999999999999773], [1.6866597E12, 25418.8], [1.68665961E12, 25016.3], [1.68665944E12, 20443.0], [1.68665935E12, 20067.4], [1.68665918E12, 15088.1], [1.68665954E12, 22039.0], [1.68665937E12, 20035.7], [1.6866592E12, 15225.6], [1.68665971E12, 25491.6], [1.68665962E12, 25113.8], [1.68665945E12, 23696.1], [1.68665928E12, 17354.2], [1.68665919E12, 15231.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68665955E12, 25374.0], [1.68665972E12, 582681.0], [1.68665938E12, 247411.0], [1.68665921E12, 82499.0], [1.68665963E12, 501744.0], [1.6866598E12, 112437.37000000052], [1.68665946E12, 325329.0], [1.68665929E12, 21741.0], [1.68665939E12, 262322.0], [1.68665922E12, 19265.0], [1.68665973E12, 27867.0], [1.68665956E12, 428168.0], [1.68665947E12, 340787.0], [1.6866593E12, 165824.0], [1.68665913E12, 204.0], [1.68665964E12, 25419.0], [1.68665923E12, 92602.0], [1.68665974E12, 603812.0], [1.68665957E12, 24925.7], [1.6866594E12, 20414.34], [1.68665931E12, 20593.38], [1.68665914E12, 11967.0], [1.68665965E12, 521454.0], [1.68665948E12, 24182.0], [1.68665975E12, 620336.0], [1.68665958E12, 444864.0], [1.68665941E12, 21525.239999999998], [1.68665924E12, 102878.0], [1.68665915E12, 16889.0], [1.68665966E12, 25589.94], [1.68665949E12, 356350.0], [1.68665932E12, 191821.0], [1.68665959E12, 25315.0], [1.68665968E12, 26031.0], [1.68665942E12, 291048.0], [1.68665925E12, 113423.0], [1.68665967E12, 26086.12], [1.68665976E12, 27924.0], [1.6866595E12, 24484.0], [1.68665933E12, 20562.0], [1.68665916E12, 26766.0], [1.68665952E12, 391727.0], [1.68665943E12, 23173.0], [1.68665926E12, 128111.0], [1.68665969E12, 562187.0], [1.6866596E12, 464343.0], [1.68665951E12, 373235.0], [1.68665934E12, 203037.0], [1.68665917E12, 42225.0], [1.68665953E12, 24285.16], [1.68665936E12, 232327.0], [1.68665927E12, 19901.52], [1.6866597E12, 25486.0], [1.68665961E12, 25066.0], [1.68665944E12, 23188.02], [1.68665935E12, 217524.0], [1.68665918E12, 52326.0], [1.68665954E12, 25140.670000000002], [1.68665937E12, 20122.0], [1.6866592E12, 72387.0], [1.68665971E12, 25709.8], [1.68665962E12, 484188.0], [1.68665945E12, 23869.0], [1.68665928E12, 21661.68], [1.68665919E12, 62342.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68665955E12, 25242.7], [1.68665972E12, 305242.0], [1.68665938E12, 99755.04999999952], [1.68665921E12, 45520.84999999995], [1.68665963E12, 25269.2], [1.6866598E12, 98312.35], [1.68665946E12, 129394.29999999936], [1.68665929E12, 21733.2], [1.68665939E12, 20288.2], [1.68665922E12, 17404.0], [1.68665973E12, 27753.899999999998], [1.68665956E12, 166337.59999999913], [1.68665947E12, 134995.6999999993], [1.6866593E12, 63903.999999999585], [1.68665913E12, 204.0], [1.68665964E12, 25407.3], [1.68665923E12, 48813.9999999999], [1.68665974E12, 229497.79999999877], [1.68665957E12, 24422.0], [1.6866594E12, 20176.4], [1.68665931E12, 20005.25], [1.68665914E12, 11940.65], [1.68665965E12, 25402.2], [1.68665948E12, 24079.3], [1.68665975E12, 620212.0], [1.68665958E12, 88193.7999999994], [1.68665941E12, 21397.25], [1.68665924E12, 57170.79999999994], [1.68665915E12, 16713.3], [1.68665966E12, 24870.3], [1.68665949E12, 24153.95], [1.68665932E12, 89162.19999999975], [1.68665959E12, 25310.45], [1.68665968E12, 26031.0], [1.68665942E12, 102471.49999999923], [1.68665925E12, 48026.89999999973], [1.68665967E12, 25747.399999999998], [1.68665976E12, 27924.0], [1.6866595E12, 24478.0], [1.68665933E12, 20558.75], [1.68665916E12, 18578.799999999967], [1.68665952E12, 24439.25], [1.68665943E12, 21618.199999999993], [1.68665926E12, 19923.4], [1.68665969E12, 186820.39999999848], [1.6866596E12, 156961.09999999875], [1.68665951E12, 146553.34999999928], [1.68665934E12, 93274.79999999974], [1.68665917E12, 38112.0], [1.68665953E12, 21006.949999999997], [1.68665936E12, 104991.3999999997], [1.68665927E12, 15919.4], [1.6866597E12, 25465.6], [1.68665961E12, 25058.2], [1.68665944E12, 20641.3], [1.68665935E12, 108926.49999999985], [1.68665918E12, 28137.549999999923], [1.68665954E12, 24170.25], [1.68665937E12, 20069.85], [1.6866592E12, 38107.19999999992], [1.68665971E12, 25592.4], [1.68665962E12, 185869.84999999902], [1.68665945E12, 23820.25], [1.68665928E12, 17827.6], [1.68665919E12, 34078.399999999936]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68665955E12, 21544.0], [1.68665972E12, 25461.0], [1.68665938E12, 16610.0], [1.68665921E12, 11024.0], [1.68665963E12, 0.0], [1.6866598E12, 97774.0], [1.68665946E12, 20773.0], [1.68665929E12, 15538.0], [1.68665939E12, 0.0], [1.68665922E12, 15117.0], [1.68665973E12, 26210.0], [1.68665956E12, 21239.0], [1.68665947E12, 20486.0], [1.6866593E12, 15495.0], [1.68665913E12, 34.0], [1.68665964E12, 22667.0], [1.68665923E12, 15132.0], [1.68665974E12, 26104.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 6433.0], [1.68665965E12, 0.0], [1.68665948E12, 20531.0], [1.68665975E12, 25608.0], [1.68665958E12, 0.0], [1.68665941E12, 0.0], [1.68665924E12, 15184.0], [1.68665915E12, 10199.0], [1.68665966E12, 0.0], [1.68665949E12, 0.0], [1.68665932E12, 16138.0], [1.68665959E12, 21896.0], [1.68665968E12, 24189.0], [1.68665942E12, 21287.0], [1.68665925E12, 15473.0], [1.68665967E12, 0.0], [1.68665976E12, 24911.0], [1.6866595E12, 0.0], [1.68665933E12, 15659.0], [1.68665916E12, 10380.0], [1.68665952E12, 0.0], [1.68665943E12, 20204.0], [1.68665926E12, 0.0], [1.68665969E12, 24414.0], [1.6866596E12, 21747.0], [1.68665951E12, 0.0], [1.68665934E12, 15806.0], [1.68665917E12, 10410.0], [1.68665953E12, 0.0], [1.68665936E12, 16243.0], [1.68665927E12, 0.0], [1.6866597E12, 1.0], [1.68665961E12, 22052.0], [1.68665944E12, 0.0], [1.68665935E12, 16082.0], [1.68665918E12, 10535.0], [1.68665954E12, 0.0], [1.68665937E12, 0.0], [1.6866592E12, 10746.0], [1.68665971E12, 0.0], [1.68665962E12, 22145.0], [1.68665945E12, 20607.0], [1.68665928E12, 0.0], [1.68665919E12, 10731.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68665955E12, 23335.0], [1.68665972E12, 26205.0], [1.68665938E12, 19991.5], [1.68665921E12, 15149.0], [1.68665963E12, 24157.0], [1.6866598E12, 97855.0], [1.68665946E12, 21140.0], [1.68665929E12, 17303.5], [1.68665939E12, 19851.0], [1.68665922E12, 15222.0], [1.68665973E12, 26477.0], [1.68665956E12, 23156.0], [1.68665947E12, 20981.0], [1.6866593E12, 16333.0], [1.68665913E12, 98.5], [1.68665964E12, 24738.0], [1.68665923E12, 15271.0], [1.68665974E12, 26426.0], [1.68665957E12, 0.0], [1.6866594E12, 0.0], [1.68665931E12, 0.0], [1.68665914E12, 11608.0], [1.68665965E12, 23110.5], [1.68665948E12, 21080.0], [1.68665975E12, 618902.5], [1.68665958E12, 23662.0], [1.68665941E12, 0.0], [1.68665924E12, 15475.5], [1.68665915E12, 10506.0], [1.68665966E12, 0.0], [1.68665949E12, 21075.5], [1.68665932E12, 20148.0], [1.68665959E12, 24332.0], [1.68665968E12, 25870.5], [1.68665942E12, 21485.0], [1.68665925E12, 15715.0], [1.68665967E12, 0.0], [1.68665976E12, 25640.0], [1.6866595E12, 21279.0], [1.68665933E12, 19924.5], [1.68665916E12, 14951.0], [1.68665952E12, 21030.0], [1.68665943E12, 20542.0], [1.68665926E12, 15516.5], [1.68665969E12, 25378.0], [1.6866596E12, 24394.0], [1.68665951E12, 21710.5], [1.68665934E12, 19687.0], [1.68665917E12, 14969.5], [1.68665953E12, 0.0], [1.68665936E12, 19725.0], [1.68665927E12, 0.0], [1.6866597E12, 25246.0], [1.68665961E12, 24496.5], [1.68665944E12, 0.0], [1.68665935E12, 19725.0], [1.68665918E12, 15005.0], [1.68665954E12, 0.0], [1.68665937E12, 19512.5], [1.6866592E12, 15129.0], [1.68665971E12, 0.0], [1.68665962E12, 24529.5], [1.68665945E12, 20961.5], [1.68665928E12, 0.0], [1.68665919E12, 15143.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6866598E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 618932.0, "series": [{"data": [[2.0, 23072.5], [3.0, 23129.0], [924.0, 0.0], [919.0, 0.0], [1020.0, 0.0], [1022.0, 0.0], [4.0, 21783.5], [17657.0, 0.0], [1237.0, 0.0], [1228.0, 0.0], [5.0, 24431.0], [1328.0, 0.0], [1285.0, 618932.0], [6.0, 24439.5], [7.0, 24657.0], [1846.0, 20368.0], [8.0, 24367.5], [2118.0, 0.0], [2225.0, 22706.0], [9.0, 20761.0], [2556.0, 0.0], [2452.0, 0.0], [10.0, 20527.5], [2635.0, 0.0], [11.0, 20092.0], [2931.0, 0.0], [2937.0, 0.0], [12.0, 17891.5], [3131.0, 0.0], [13.0, 15574.0], [14.0, 15646.0], [15.0, 8658.0], [16.0, 14966.0], [4339.0, 0.0], [4182.0, 0.0], [17.0, 14967.0], [4716.0, 0.0], [4800.0, 0.0], [4986.0, 0.0], [4896.0, 10411.5], [5009.0, 0.0], [5064.0, 20487.0], [5013.0, 25375.0], [20.0, 11694.5], [5200.0, 9971.5], [5552.0, 0.0], [5413.0, 0.0], [21.0, 25554.5], [5755.0, 0.0], [5841.0, 0.0], [6107.0, 0.0], [5985.0, 0.0], [6360.0, 0.0], [6694.0, 0.0], [6767.0, 0.0], [6963.0, 0.0], [7299.0, 0.0], [7200.0, 0.0], [7459.0, 22382.0], [7902.0, 20989.0], [8469.0, 0.0], [9566.0, 0.0], [38.0, 98.5], [9996.0, 1.0], [9799.0, 0.0], [11263.0, 0.0], [11400.0, 0.0], [12229.0, 0.0], [13203.0, 0.0], [13945.0, 0.0], [14785.0, 0.0], [17370.0, 0.0], [18380.0, 0.0], [20608.0, 0.0], [102.0, 0.0], [106.0, 24087.0], [104.0, 22029.0], [184.0, 97855.0], [1.0, 23528.5], [315.0, 24304.0], [415.0, 24702.0], [414.0, 24826.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 108526.5], [766.0, 616350.5], [924.0, 0.0], [919.0, 0.0], [1020.0, 0.0], [1022.0, 0.0], [17657.0, 0.0], [1237.0, 0.0], [1228.0, 0.0], [1328.0, 0.0], [1285.0, 617748.0], [6.0, 131052.0], [1846.0, 0.0], [2118.0, 0.0], [2225.0, 0.0], [2556.0, 0.0], [2452.0, 0.0], [2635.0, 0.0], [2931.0, 0.0], [2937.0, 0.0], [3131.0, 0.0], [14.0, 58029.0], [4339.0, 0.0], [4182.0, 0.0], [4716.0, 0.0], [4800.0, 0.0], [4986.0, 0.0], [4896.0, 0.0], [5009.0, 0.0], [5064.0, 0.0], [5013.0, 0.0], [5200.0, 0.0], [5552.0, 0.0], [5413.0, 0.0], [21.0, 131026.0], [5755.0, 0.0], [5841.0, 0.0], [6107.0, 0.0], [5985.0, 0.0], [6360.0, 0.0], [24.0, 131016.0], [6694.0, 0.0], [6767.0, 0.0], [6963.0, 0.0], [7299.0, 0.0], [7200.0, 0.0], [7459.0, 0.0], [7902.0, 0.0], [8469.0, 0.0], [9566.0, 0.0], [9996.0, 0.0], [9799.0, 0.0], [41.0, 130913.0], [11263.0, 0.0], [11400.0, 0.0], [12229.0, 0.0], [48.0, 130854.5], [13203.0, 0.0], [53.0, 130907.0], [13945.0, 0.0], [14785.0, 0.0], [17370.0, 0.0], [18380.0, 0.0], [68.0, 130912.5], [20608.0, 0.0], [96.0, 130624.5], [102.0, 0.0], [106.0, 0.0], [104.0, 0.0], [121.0, 130639.0], [184.0, 97794.0], [200.0, 130469.0], [1.0, 131064.0], [315.0, 0.0], [415.0, 0.0], [414.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20608.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [3.0, 0.0], [924.0, 0.0], [919.0, 0.0], [1020.0, 0.0], [1022.0, 0.0], [4.0, 0.0], [17657.0, 0.0], [1237.0, 0.0], [1228.0, 0.0], [5.0, 0.0], [1328.0, 0.0], [1285.0, 0.0], [6.0, 0.0], [7.0, 0.0], [1846.0, 0.0], [8.0, 0.0], [2118.0, 0.0], [2225.0, 0.0], [9.0, 0.0], [2556.0, 0.0], [2452.0, 0.0], [10.0, 0.0], [2635.0, 0.0], [11.0, 0.0], [2931.0, 0.0], [2937.0, 0.0], [12.0, 0.0], [3131.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [4339.0, 0.0], [4182.0, 0.0], [17.0, 0.0], [4716.0, 0.0], [4800.0, 0.0], [4986.0, 0.0], [4896.0, 0.0], [5009.0, 0.0], [5064.0, 0.0], [5013.0, 0.0], [20.0, 0.0], [5200.0, 0.0], [5552.0, 0.0], [5413.0, 0.0], [21.0, 0.0], [5755.0, 0.0], [5841.0, 0.0], [6107.0, 0.0], [5985.0, 0.0], [6360.0, 0.0], [6694.0, 0.0], [6767.0, 0.0], [6963.0, 0.0], [7299.0, 0.0], [7200.0, 0.0], [7459.0, 0.0], [7902.0, 0.0], [8469.0, 0.0], [9566.0, 0.0], [38.0, 0.0], [9996.0, 0.0], [9799.0, 0.0], [11263.0, 0.0], [11400.0, 0.0], [12229.0, 0.0], [13203.0, 0.0], [13945.0, 0.0], [14785.0, 0.0], [17370.0, 0.0], [18380.0, 0.0], [20608.0, 0.0], [102.0, 0.0], [106.0, 0.0], [104.0, 0.0], [184.0, 0.0], [1.0, 0.0], [315.0, 0.0], [415.0, 0.0], [414.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [766.0, 0.0], [924.0, 0.0], [919.0, 0.0], [1020.0, 0.0], [1022.0, 0.0], [17657.0, 0.0], [1237.0, 0.0], [1228.0, 0.0], [1328.0, 0.0], [1285.0, 0.0], [6.0, 0.0], [1846.0, 0.0], [2118.0, 0.0], [2225.0, 0.0], [2556.0, 0.0], [2452.0, 0.0], [2635.0, 0.0], [2931.0, 0.0], [2937.0, 0.0], [3131.0, 0.0], [14.0, 0.0], [4339.0, 0.0], [4182.0, 0.0], [4716.0, 0.0], [4800.0, 0.0], [4986.0, 0.0], [4896.0, 0.0], [5009.0, 0.0], [5064.0, 0.0], [5013.0, 0.0], [5200.0, 0.0], [5552.0, 0.0], [5413.0, 0.0], [21.0, 0.0], [5755.0, 0.0], [5841.0, 0.0], [6107.0, 0.0], [5985.0, 0.0], [6360.0, 0.0], [24.0, 0.0], [6694.0, 0.0], [6767.0, 0.0], [6963.0, 0.0], [7299.0, 0.0], [7200.0, 0.0], [7459.0, 0.0], [7902.0, 0.0], [8469.0, 0.0], [9566.0, 0.0], [9996.0, 0.0], [9799.0, 0.0], [41.0, 0.0], [11263.0, 0.0], [11400.0, 0.0], [12229.0, 0.0], [48.0, 0.0], [13203.0, 0.0], [53.0, 0.0], [13945.0, 0.0], [14785.0, 0.0], [17370.0, 0.0], [18380.0, 0.0], [68.0, 0.0], [20608.0, 0.0], [96.0, 0.0], [102.0, 0.0], [106.0, 0.0], [104.0, 0.0], [121.0, 0.0], [184.0, 0.0], [200.0, 0.0], [1.0, 0.0], [315.0, 0.0], [415.0, 0.0], [414.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 20608.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.6, "minX": 1.68665913E12, "maxY": 5754.2, "series": [{"data": [[1.68665955E12, 3.2], [1.68665972E12, 2.9], [1.68665938E12, 3.2], [1.68665921E12, 3.0], [1.68665963E12, 146.1], [1.68665946E12, 3.2], [1.68665929E12, 3.2], [1.68665939E12, 227.7], [1.68665922E12, 2.9], [1.68665973E12, 2.6], [1.68665956E12, 3.2], [1.68665947E12, 3.2], [1.6866593E12, 3.3], [1.68665913E12, 75.4], [1.68665964E12, 3.2], [1.68665923E12, 3.1], [1.68665957E12, 1971.8], [1.6866594E12, 4185.1], [1.68665931E12, 2053.3], [1.68665914E12, 232.0], [1.68665965E12, 299.1], [1.68665948E12, 3.2], [1.68665958E12, 33.9], [1.68665941E12, 2502.3], [1.68665924E12, 3.0], [1.68665915E12, 3.3], [1.68665966E12, 3787.2], [1.68665949E12, 95.1], [1.68665932E12, 3.1], [1.68665959E12, 3.2], [1.68665968E12, 3.2], [1.68665942E12, 3.3], [1.68665925E12, 3.3], [1.68665967E12, 2706.0], [1.6866595E12, 13.2], [1.68665933E12, 3.2], [1.68665916E12, 3.3], [1.68665952E12, 217.5], [1.68665943E12, 3.2], [1.68665926E12, 258.3], [1.68665969E12, 3.3], [1.6866596E12, 3.3], [1.68665951E12, 13.3], [1.68665934E12, 3.1], [1.68665917E12, 3.4], [1.68665953E12, 4704.7], [1.68665936E12, 3.1], [1.68665927E12, 5754.2], [1.6866597E12, 484.4], [1.68665961E12, 3.2], [1.68665944E12, 2043.3], [1.68665935E12, 3.0], [1.68665918E12, 3.2], [1.68665954E12, 1951.3], [1.68665937E12, 135.5], [1.6866592E12, 3.1], [1.68665971E12, 1500.4], [1.68665962E12, 3.2], [1.68665945E12, 3.2], [1.68665928E12, 1106.8], [1.68665919E12, 3.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.68665973E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.68665913E12, "maxY": 5731.3, "series": [{"data": [[1.68665955E12, 3.2], [1.68665972E12, 2.9], [1.68665938E12, 3.2], [1.68665921E12, 3.0], [1.68665963E12, 4.7], [1.6866598E12, 17.2], [1.68665946E12, 3.2], [1.68665929E12, 3.2], [1.68665939E12, 5.5], [1.68665922E12, 2.9], [1.68665973E12, 3.2], [1.68665956E12, 3.2], [1.68665947E12, 3.2], [1.6866593E12, 3.3], [1.68665913E12, 3.8], [1.68665964E12, 3.2], [1.68665923E12, 3.1], [1.68665974E12, 3.2], [1.68665957E12, 22.5], [1.6866594E12, 44.1], [1.68665931E12, 23.2], [1.68665914E12, 3.6], [1.68665965E12, 6.2], [1.68665948E12, 3.2], [1.68665975E12, 95.6], [1.68665958E12, 3.6], [1.68665941E12, 27.8], [1.68665924E12, 3.0], [1.68665915E12, 3.3], [1.68665966E12, 40.1], [1.68665949E12, 4.2], [1.68665932E12, 3.1], [1.68665959E12, 3.2], [1.68665968E12, 3.2], [1.68665942E12, 3.3], [1.68665925E12, 3.3], [1.68665967E12, 29.5], [1.68665976E12, 1.5], [1.6866595E12, 3.1], [1.68665933E12, 3.2], [1.68665916E12, 3.3], [1.68665952E12, 5.4], [1.68665943E12, 3.2], [1.68665926E12, 5.8], [1.68665969E12, 3.3], [1.6866596E12, 3.3], [1.68665951E12, 3.2], [1.68665934E12, 3.1], [1.68665917E12, 3.4], [1.68665953E12, 48.6], [1.68665936E12, 3.1], [1.68665927E12, 46.7], [1.6866597E12, 3.1], [1.68665961E12, 3.2], [1.68665944E12, 23.3], [1.68665935E12, 3.0], [1.68665918E12, 3.2], [1.68665954E12, 22.2], [1.68665937E12, 4.2], [1.6866592E12, 3.1], [1.68665971E12, 22.3], [1.68665962E12, 3.2], [1.68665945E12, 3.2], [1.68665928E12, 27.1], [1.68665919E12, 3.1]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.68665963E12, 141.4], [1.6866598E12, 47.6], [1.68665967E12, 2676.5], [1.68665976E12, 2.6], [1.6866595E12, 10.1], [1.68665939E12, 222.2], [1.68665952E12, 212.1], [1.68665926E12, 252.5], [1.68665951E12, 10.1], [1.68665953E12, 4656.1], [1.68665927E12, 5731.3], [1.68665957E12, 1949.3], [1.6866597E12, 500.6], [1.6866594E12, 4141.0], [1.68665931E12, 2030.1], [1.68665944E12, 2020.0], [1.68665965E12, 292.9], [1.68665978E12, 2.4], [1.68665954E12, 1929.1], [1.68665937E12, 131.3], [1.68665975E12, 112.4], [1.68665958E12, 30.3], [1.68665941E12, 2474.5], [1.68665971E12, 1458.8], [1.68665928E12, 1055.9], [1.68665966E12, 3747.1], [1.68665949E12, 90.9], [1.68665979E12, 16.9]], "isOverall": false, "label": "800", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.6866598E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.68665913E12, "maxY": 5664.1, "series": [{"data": [[1.68665955E12, 3.2], [1.68665972E12, 2.8], [1.68665938E12, 3.1], [1.68665921E12, 2.9], [1.68665963E12, 3.2], [1.68665946E12, 3.1], [1.68665929E12, 3.2], [1.68665939E12, 3.2], [1.68665922E12, 2.9], [1.68665973E12, 3.2], [1.68665956E12, 3.1], [1.68665947E12, 3.1], [1.6866593E12, 3.2], [1.68665964E12, 3.2], [1.68665923E12, 3.0], [1.68665974E12, 3.1], [1.68665957E12, 3.2], [1.6866594E12, 3.1], [1.68665931E12, 3.0], [1.68665914E12, 3.2], [1.68665965E12, 3.2], [1.68665948E12, 3.2], [1.68665975E12, 3.0], [1.68665958E12, 3.2], [1.68665941E12, 3.2], [1.68665924E12, 2.9], [1.68665915E12, 3.2], [1.68665966E12, 3.0], [1.68665949E12, 3.2], [1.68665932E12, 3.0], [1.68665959E12, 3.2], [1.68665968E12, 3.2], [1.68665942E12, 3.2], [1.68665925E12, 3.2], [1.68665967E12, 2.9], [1.68665976E12, 1.5], [1.6866595E12, 3.0], [1.68665933E12, 3.2], [1.68665916E12, 3.2], [1.68665952E12, 3.2], [1.68665943E12, 3.2], [1.68665926E12, 3.2], [1.68665969E12, 3.2], [1.6866596E12, 3.2], [1.68665951E12, 3.0], [1.68665934E12, 3.0], [1.68665917E12, 3.2], [1.68665953E12, 2.5], [1.68665936E12, 3.0], [1.68665927E12, 3.2], [1.6866597E12, 3.0], [1.68665961E12, 3.2], [1.68665944E12, 3.2], [1.68665935E12, 2.9], [1.68665918E12, 3.1], [1.68665954E12, 3.0], [1.68665937E12, 2.9], [1.6866592E12, 3.0], [1.68665971E12, 3.0], [1.68665962E12, 3.1], [1.68665945E12, 3.2], [1.68665928E12, 3.2], [1.68665919E12, 3.0]], "isOverall": false, "label": "Search-success", "isController": false}, {"data": [[1.68665953E12, 4610.0], [1.68665927E12, 5664.1], [1.68665957E12, 1930.0], [1.6866597E12, 481.2], [1.6866594E12, 4100.0], [1.68665931E12, 2010.0], [1.68665963E12, 140.0], [1.68665944E12, 2000.0], [1.68665967E12, 2650.0], [1.6866595E12, 10.0], [1.68665965E12, 290.0], [1.68665939E12, 220.0], [1.68665954E12, 1910.0], [1.68665937E12, 130.0], [1.68665952E12, 210.0], [1.68665926E12, 250.0], [1.68665958E12, 30.0], [1.68665941E12, 2450.0], [1.68665971E12, 1458.8], [1.68665928E12, 1055.9], [1.68665951E12, 10.0], [1.68665966E12, 3710.0], [1.68665949E12, 90.0]], "isOverall": false, "label": "Search-failure", "isController": false}, {"data": [[1.68665972E12, 0.1], [1.68665938E12, 0.1], [1.68665921E12, 0.1], [1.68665942E12, 0.1], [1.68665925E12, 0.1], [1.68665963E12, 0.1], [1.6866598E12, 17.2], [1.68665946E12, 0.1], [1.68665967E12, 0.1], [1.68665916E12, 0.1], [1.68665939E12, 0.1], [1.68665952E12, 0.1], [1.68665926E12, 0.1], [1.68665969E12, 0.1], [1.68665956E12, 0.1], [1.68665947E12, 0.1], [1.6866593E12, 0.1], [1.68665913E12, 3.8], [1.6866596E12, 0.1], [1.68665951E12, 0.1], [1.68665934E12, 0.1], [1.68665917E12, 0.2], [1.68665923E12, 0.1], [1.68665974E12, 0.1], [1.68665936E12, 0.1], [1.68665927E12, 0.1], [1.68665931E12, 0.1], [1.68665914E12, 0.4], [1.68665944E12, 0.1], [1.68665935E12, 0.1], [1.68665918E12, 0.1], [1.68665965E12, 0.1], [1.68665954E12, 0.1], [1.6866592E12, 0.1], [1.68665975E12, 92.6], [1.68665958E12, 0.1], [1.68665941E12, 0.1], [1.68665924E12, 0.1], [1.68665915E12, 0.1], [1.68665962E12, 0.1], [1.68665928E12, 0.1], [1.68665919E12, 0.1], [1.68665949E12, 0.1], [1.68665932E12, 0.1]], "isOverall": false, "label": "Bind-success", "isController": false}, {"data": [[1.68665963E12, 1.4], [1.6866598E12, 47.6], [1.68665967E12, 26.5], [1.68665976E12, 2.6], [1.6866595E12, 0.1], [1.68665939E12, 2.2], [1.68665952E12, 2.1], [1.68665926E12, 2.5], [1.68665951E12, 0.1], [1.68665953E12, 46.1], [1.68665927E12, 67.2], [1.68665957E12, 19.3], [1.6866597E12, 19.4], [1.6866594E12, 41.0], [1.68665931E12, 20.1], [1.68665944E12, 20.0], [1.68665965E12, 2.9], [1.68665978E12, 2.4], [1.68665954E12, 19.1], [1.68665937E12, 1.3], [1.68665975E12, 112.4], [1.68665958E12, 0.3], [1.68665941E12, 24.5], [1.68665966E12, 37.1], [1.68665949E12, 0.9], [1.68665979E12, 16.9]], "isOverall": false, "label": "Bind-failure", "isController": false}, {"data": [[1.68665953E12, 46.1], [1.68665927E12, 43.4], [1.68665957E12, 19.3], [1.6866597E12, 0.1], [1.6866594E12, 41.0], [1.68665931E12, 20.1], [1.68665963E12, 1.4], [1.68665944E12, 20.0], [1.68665967E12, 26.5], [1.6866595E12, 0.1], [1.68665965E12, 2.9], [1.68665939E12, 2.2], [1.68665954E12, 19.1], [1.68665937E12, 1.3], [1.68665952E12, 2.1], [1.68665926E12, 2.5], [1.68665958E12, 0.3], [1.68665941E12, 24.5], [1.68665971E12, 19.3], [1.68665928E12, 23.8], [1.68665951E12, 0.1], [1.68665966E12, 37.1], [1.68665949E12, 0.9]], "isOverall": false, "label": "Unbind-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6866598E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.68665913E12, "maxY": 5731.3, "series": [{"data": [[1.68665955E12, 3.2], [1.68665972E12, 2.9], [1.68665938E12, 3.2], [1.68665921E12, 3.0], [1.68665963E12, 4.7], [1.6866598E12, 17.2], [1.68665946E12, 3.2], [1.68665929E12, 3.2], [1.68665939E12, 5.5], [1.68665922E12, 2.9], [1.68665973E12, 3.2], [1.68665956E12, 3.2], [1.68665947E12, 3.2], [1.6866593E12, 3.3], [1.68665913E12, 3.8], [1.68665964E12, 3.2], [1.68665923E12, 3.1], [1.68665974E12, 3.2], [1.68665957E12, 22.5], [1.6866594E12, 44.1], [1.68665931E12, 23.2], [1.68665914E12, 3.6], [1.68665965E12, 6.2], [1.68665948E12, 3.2], [1.68665975E12, 95.6], [1.68665958E12, 3.6], [1.68665941E12, 27.8], [1.68665924E12, 3.0], [1.68665915E12, 3.3], [1.68665966E12, 40.1], [1.68665949E12, 4.2], [1.68665932E12, 3.1], [1.68665959E12, 3.2], [1.68665968E12, 3.2], [1.68665942E12, 3.3], [1.68665925E12, 3.3], [1.68665967E12, 29.5], [1.68665976E12, 1.5], [1.6866595E12, 3.1], [1.68665933E12, 3.2], [1.68665916E12, 3.3], [1.68665952E12, 5.4], [1.68665943E12, 3.2], [1.68665926E12, 5.8], [1.68665969E12, 3.3], [1.6866596E12, 3.3], [1.68665951E12, 3.2], [1.68665934E12, 3.1], [1.68665917E12, 3.4], [1.68665953E12, 48.6], [1.68665936E12, 3.1], [1.68665927E12, 46.7], [1.6866597E12, 3.1], [1.68665961E12, 3.2], [1.68665944E12, 23.3], [1.68665935E12, 3.0], [1.68665918E12, 3.2], [1.68665954E12, 22.2], [1.68665937E12, 4.2], [1.6866592E12, 3.1], [1.68665971E12, 22.3], [1.68665962E12, 3.2], [1.68665945E12, 3.2], [1.68665928E12, 27.1], [1.68665919E12, 3.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68665963E12, 141.4], [1.6866598E12, 47.6], [1.68665967E12, 2676.5], [1.68665976E12, 2.6], [1.6866595E12, 10.1], [1.68665939E12, 222.2], [1.68665952E12, 212.1], [1.68665926E12, 252.5], [1.68665951E12, 10.1], [1.68665953E12, 4656.1], [1.68665927E12, 5731.3], [1.68665957E12, 1949.3], [1.6866597E12, 500.6], [1.6866594E12, 4141.0], [1.68665931E12, 2030.1], [1.68665944E12, 2020.0], [1.68665965E12, 292.9], [1.68665978E12, 2.4], [1.68665954E12, 1929.1], [1.68665937E12, 131.3], [1.68665975E12, 112.4], [1.68665958E12, 30.3], [1.68665941E12, 2474.5], [1.68665971E12, 1458.8], [1.68665928E12, 1055.9], [1.68665966E12, 3747.1], [1.68665949E12, 90.9], [1.68665979E12, 16.9]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.6866598E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

